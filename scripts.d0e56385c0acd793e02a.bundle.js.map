{"version":3,"sources":["node_modules/chart.js/dist/Chart.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","2","colorNames","getRgba","getHsla","getRgb","string","rgba","slice","getHsl","hsla","getHwb","getAlpha","vals","hexString","rgb","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","Math","round","hslString","hslaString","hwbString","hwb","undefined","keyword","reverseNames","match","parseInt","parseFloat","scale","isNaN","num","min","max","str","toString","toUpperCase","name","color-name","3","convert","Color","obj","this","values","hsl","hsv","cmyk","setValues","JSON","stringify","prototype","setSpace","arguments","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","val","red","setChannel","green","blue","hue","saturation","lightness","saturationv","whiteness","blackness","value","cyan","magenta","yellow","black","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","weight","t1","d","weight1","weight2","rgb2","toJSON","clone","getValues","space","charAt","spaces","maxes","chans","capped","sname","args","Array","index","window","chartjs-color-string","color-convert","4","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","h","g","b","delta","k","reverseKeywords","xyz","x","y","z","t2","t3","hi","floor","p","q","wh","bl","m","lab","y2","atan2","PI","sqrt","lch","hr","c","cos","sin","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","key","5","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","forEach","./conversions","6","7","Chart","./charts/Chart.Bar","./charts/Chart.Bubble","./charts/Chart.Doughnut","./charts/Chart.Line","./charts/Chart.PolarArea","./charts/Chart.Radar","./charts/Chart.Scatter","./controllers/controller.bar","./controllers/controller.bubble","./controllers/controller.doughnut","./controllers/controller.line","./controllers/controller.polarArea","./controllers/controller.radar","./core/core.animation","./core/core.controller","./core/core.datasetController","./core/core.element","./core/core.helpers","./core/core.js","./core/core.layoutService","./core/core.legend","./core/core.plugin.js","./core/core.scale","./core/core.scaleService","./core/core.title","./core/core.tooltip","./elements/element.arc","./elements/element.line","./elements/element.point","./elements/element.rectangle","./scales/scale.category","./scales/scale.linear","./scales/scale.logarithmic","./scales/scale.radialLinear","./scales/scale.time","8","Bar","context","config","type","9","Bubble","10","Doughnut","11","Line","12","PolarArea","13","helpers","defaultConfig","aspectRatio","Radar","options","configMerge","14","defaults","scatter","hover","mode","scales","xAxes","position","id","yAxes","tooltips","callbacks","title","tooltipItems","data","label","tooltipItem","xLabel","yLabel","controllers","line","Scatter","15","bar","categoryPercentage","barPercentage","gridLines","offsetGridLines","DatasetController","extend","initialize","chart","datasetIndex","getMeta","getBarCount","barCount","each","datasets","dataset","getDatasetMeta","isDatasetVisible","addElements","meta","getDataset","elements","Rectangle","_chart","_datasetIndex","_index","addElementAndReset","rectangle","numBars","splice","updateElement","update","reset","yScalePoint","xScale","getScaleForId","xAxisID","yScale","yAxisID","getPixelForValue","_xScale","_yScale","_model","calculateBarX","calculateBarY","labels","datasetLabel","base","calculateBarBase","width","calculateBarWidth","backgroundColor","custom","getValueAtIndexOrDefault","borderSkipped","borderColor","borderWidth","pivot","stacked","negDS","negDSMeta","j","posDS","posDSMeta","beginAtZero","getRuler","datasetCount","tickWidth","getPixelForTick","ticks","categoryWidth","fullBarWidth","categorySpacing","barWidth","barSpacing","ruler","getBarIndex","barIndex","leftTick","isCombo","sumPos","sumNeg","ds","dsMeta","draw","ease","easingDecimal","transition","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","horizontalBar","xScalePoint","height","calculateBarHeight","ctx","vm","_view","halfHeight","topY","bottomY","right","halfStroke","beginPath","fillStyle","strokeStyle","lineWidth","corners","startCorner","indexOf","cornerAt","moveTo","apply","lineTo","fill","stroke","inRange","mouseX","mouseY","tickHeight","categoryHeight","fullBarHeight","barHeight","topTick","16","bubble","dataPoint","Point","point","points","scaleBase","getPixelForDecimal","radius","getRadius","hitRadius","skip","hoverRadius","17","doughnut","animation","animateRotate","animateScale","legendCallback","text","push","join","legend","generateLabels","map","arc","hidden","onClick","legendItem","ilen","cutoutPercentage","rotation","circumference","pie","linkScales","Arc","colorForNewElement","isArray","getRingIndex","ringIndex","availableWidth","chartArea","left","availableHeight","bottom","top","minSize","offset","startAngle","endAngle","start","end","contains0","contains90","contains180","contains270","cutout","size","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","centerX","centerY","calculateCircumference","element","abs","18","showLines","_points","tension","updateBezierControlPoints","_scale","_children","lineTension","getValueOrDefault","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","scaleTop","scaleBottom","scaleZero","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointRadius","pointHitRadius","calculatePointY","pointStyle","controlPoints","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","19","polarArea","lineArc","count","countVisibleElements","visibleCount","distance","getDistanceFromCenterForValue","resetModel","20","radar","_loop","getPointPositionForValue","pointPosition","xCenter","yCenter","21","global","duration","easing","onProgress","noop","onComplete","Animation","Element","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","chartInstance","animationObject","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","animationWrapper","me","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","endTime","22","types","instances","Controller","instance","uid","Object","defineProperty","get","responsive","resize","pluginService","notifyPlugins","bindEvents","ensureScalesHaveIDs","buildOrUpdateControllers","buildScales","buildSurroundingItems","updateLayout","resetElements","initToolTip","clear","stop","silent","canvas","newWidth","getMaximumWidth","newHeight","maintainAspectRatio","isFinite","getMaximumHeight","retinaScale","responsiveAnimationDuration","xAxisOptions","yAxisOptions","xType","ScaleClass","scaleService","getScaleConstructor","yType","radialScale","addScalesToLayout","titleBlock","Title","layoutService","addBox","Legend","newControllers","controller","updateIndex","animationDuration","tooltip","_data","buildOrUpdateElements","stepDecimal","easeDecimal","easingFunction","easingEffects","boxes","box","save","rect","clip","restore","getElementAtEvent","eventPosition","getRelativePosition","elementsArray","getElementsAtEvent","found","getDatasetAtEvent","_meta","generateLegend","destroy","unbindEvents","events","removeResizeListener","parentNode","originalDevicePixelRatio","style","originalCanvasStyleWidth","originalCanvasStyleHeight","toBase64Image","toDataURL","Tooltip","_chartInstance","_options","evt","eventHandler","lastActive","lastTooltipActive","active","tooltipActive","_this","getItemsForMode","onHover","handleEvent","enabled","_active","changed","23","scaleID","md","numData","numMetaData","inherits","24","configuration","_start","hasOwnProperty","color","err","startVal","tooltipPosition","hasValue","isNumber","25","loopable","callback","self","reverse","len","keys","objClone","additionalArgs","extensionObject","_base","extension","scaleMerge","getScaleDefaults","baseArray","valueObj","extendDeep","_extendDeep","dst","constructor","axisType","axisDefaults","defaultValue","arrayToSearch","item","where","collection","filterCallback","filtered","thisArg","findNextWhere","startIndex","currentItem","findPreviousWhere","extensions","parent","ChartElement","Surrogate","__super__","warn","console","almostEquals","epsilon","array","reduce","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","sign","log10","log","LN10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","loop","niceNum","range","exponent","fraction","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","addEvent","node","eventType","method","addEventListener","attachEvent","removeEvent","handler","removeEventListener","detachEvent","arrayOfEvents","eventName","parseMaxStyle","styleValue","parentProperty","valueInPixels","getConstraintDimension","domNode","maxStyle","percentageProperty","constrainedDimension","constrainedNode","document","defaultView","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","getConstraintWidth","getConstraintHeight","container","padding","w","clientWidth","cw","clientHeight","ch","el","property","currentStyle","getPropertyValue","pixelRatio","devicePixelRatio","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfStrings","cache","garbageCollect","longest","textWidth","measureText","gcLen","drawRoundedRectangle","quadraticCurveTo","closePath","CanvasGradient","defaultColor","addResizeListener","hiddenIframe","createElement","classlist","add","setAttribute","display","border","margin","insertBefore","firstChild","querySelector","removeChild","pushAllIfDefined","callCallback","fn","_tArg","CanvasPattern","chartjs-color","26","getContext","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","27","removeBox","xPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","sort","fullWidth","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","isHorizontal","horizontal","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","28","ci","boxWidth","lineCap","lineDash","lineDashOffset","lineJoin","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","legendItems","opts","labelOpts","globalDefault","itemOrDefault","fontSize","labelFont","hitboxes","lineWidths","totalHeight","textAlign","textBaseline","lineDefault","legendWidth","cursor","fontColor","setLineDash","strokeRect","fillRect","fillText","lh","hitBox","29","plugins","register","plugin","remove","idx","scope","PluginBase","beforeInit","afterInit","beforeDraw","afterDraw","30","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","Scale","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","numericalTick","userCallback","tickFontSize","tickFontStyle","tickFontFamily","tickLabelFont","firstRotated","firstWidth","lastWidth","labelRotation","longestTextCache","cosRotation","sinRotation","originalLabelWidth","labelWidth","yLabelWidth","tickOpts","scaleLabelOpts","globalOpts","scaleLabelFontSize","scaleLabelFontStyle","scaleLabelFontFamily","isFullWidth","largestTextWidth","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","getRightValue","rawValue","NaN","getLabelForIndex","getValueForPixel","includeOffset","pixel","decimal","setContextLineSettings","skipRatio","scaleLabelX","scaleLabelY","maxTicks","isRotated","useAutoskipper","maxTicksLimit","tickFontColor","tl","scaleLabelFontColor","scaleLabelFont","longestRotatedLabel","yTickStart","yTickEnd","xLineValue","xLabelValue","zeroLineIndex","translate","xTickStart","xTickEnd","yLineValue","yLabelValue","x1","x2","y1","31","constructors","registerScaleType","scaleConstructor","updateScaleDefaults","additions","32","valueOrDefault","pos","globalDefaults","titleX","titleY","titleFont","33","titleFontStyle","titleSpacing","titleMarginBottom","titleColor","titleAlign","bodySpacing","bodyColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerColor","footerAlign","yPadding","yAlign","xAlign","caretSize","cornerRadius","multiKeyBackground","beforeTitle","afterTitle","beforeBody","beforeLabel","afterLabel","afterBody","beforeFooter","footer","afterFooter","pushOrConcat","toPush","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getTitle","lines","getBeforeBody","getBody","bodyItem","getAfterBody","getFooter","getAveragePosition","xPositions","yPositions","labelColors","currentElement","body","caretPadding","tooltipSize","getTooltipSize","determineAlignment","getBackgroundPoint","combinedBodyLength","lf","rf","olf","orf","yf","midX","midY","pt","drawCaret","tooltipPoint","x3","y3","bgColor","drawTitle","drawBody","drawFooter","34","moment","inLabelRange","chartX","chartY","pointRelativePosition","centreAngle","rangeFromCentre","sA","eA","35","lineToNextPoint","previousPoint","nextPoint","skipHandler","previousSkipHandler","bezierCurveTo","first","last","loopBackToStart","drawLineToCenter","36","xOffset","yOffset","edgeLength","SQRT2","setTransform","drawImage","37","halfWidth","leftX","rightX","38","DatasetScale","minIndex","maxIndex","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","39","tickValue","logDelta","tickString","numDecimal","toFixed","LinearScale","valuesPerType","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","minSign","maxSign","suggestedMin","suggestedMax","ceil","spacing","fixedStepSize","stepSize","niceRange","niceMin","niceMax","numSpaces","ticksAsNumbers","rightValue","40","arr","remain","toExponential","LogarithmicScale","tickVal","exp","significand","tickValues","newVal","41","LinearRadialScale","getValueCount","drawingArea","backdropPaddingY","pointLabels","halfTextWidth","furthestRightIndex","furthestRightAngle","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","pointLabelFontSize","pointLabeFontStyle","pointLabeFontFamily","pointLabeFont","largestPossibleRadius","furthestRight","furthestLeft","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","scalingFactor","distanceFromCenter","thisAngle","yCenterOffset","yHeight","showLabelBackdrop","backdropColor","backdropPaddingX","angleLines","outerPosition","pointLabelPosition","pointLabelFontColor","labelsCount","halfLabelsCount","quarterLabelsCount","upperHalf","exactQuarter","animate","42","time","units","steps","maxStep","TimeScale","getLabelMoment","labelMoments","getMomentStartOf","tick","unit","isoWeekday","startOf","tickUnit","scaleLabelMoments","labelMoment","parseTime","isValid","firstTick","lastTick","momentsForDataset","datasetVisible","unitScale","scaleSizeInUnits","displayFormat","displayFormats","diff","unitStepSize","innerWidth","tempFirstLabel","tickFormatFunction","tickLabelWidth","labelCapacity","unitDefinitionIndex","unitDefinition","leadingUnitBuffer","trailingUnitBuffer","roundedStart","smallestLabelSeparation","newTick","tooltipFormat","format","formattedTick","tickMoments","innerHeight","innerDimension","asSeconds","parser","getMonth","millisecond","second","minute","hour","day","week","month","quarter","year"],"mappings":"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","file":"scripts.d0e56385c0acd793e02a.bundle.js","sourcesContent":["/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 2.1.3\n *\n * Copyright 2016 Nick Downie\n * Released under the MIT license\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n/* MIT license */\r\nvar colorNames = require('color-name');\r\n\r\nmodule.exports = {\r\n   getRgba: getRgba,\r\n   getHsla: getHsla,\r\n   getRgb: getRgb,\r\n   getHsl: getHsl,\r\n   getHwb: getHwb,\r\n   getAlpha: getAlpha,\r\n\r\n   hexString: hexString,\r\n   rgbString: rgbString,\r\n   rgbaString: rgbaString,\r\n   percentString: percentString,\r\n   percentaString: percentaString,\r\n   hslString: hslString,\r\n   hslaString: hslaString,\r\n   hwbString: hwbString,\r\n   keyword: keyword\r\n}\r\n\r\nfunction getRgba(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n       hex =  /^#([a-fA-F0-9]{6})$/,\r\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       keyword = /(\\w+)/;\r\n\r\n   var rgb = [0, 0, 0],\r\n       a = 1,\r\n       match = string.match(abbr);\r\n   if (match) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i] + match[i], 16);\r\n      }\r\n   }\r\n   else if (match = string.match(hex)) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n   }\r\n   else if (match = string.match(rgba)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i + 1]);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(per)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(keyword)) {\r\n      if (match[1] == \"transparent\") {\r\n         return [0, 0, 0, 0];\r\n      }\r\n      rgb = colorNames[match[1]];\r\n      if (!rgb) {\r\n         return;\r\n      }\r\n   }\r\n\r\n   for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = scale(rgb[i], 0, 255);\r\n   }\r\n   if (!a && a != 0) {\r\n      a = 1;\r\n   }\r\n   else {\r\n      a = scale(a, 0, 1);\r\n   }\r\n   rgb[3] = a;\r\n   return rgb;\r\n}\r\n\r\nfunction getHsla(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hsl);\r\n   if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          s = scale(parseFloat(match[2]), 0, 100),\r\n          l = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, s, l, a];\r\n   }\r\n}\r\n\r\nfunction getHwb(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hwb);\r\n   if (match) {\r\n    var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          w = scale(parseFloat(match[2]), 0, 100),\r\n          b = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, w, b, a];\r\n   }\r\n}\r\n\r\nfunction getRgb(string) {\r\n   var rgba = getRgba(string);\r\n   return rgba && rgba.slice(0, 3);\r\n}\r\n\r\nfunction getHsl(string) {\r\n  var hsla = getHsla(string);\r\n  return hsla && hsla.slice(0, 3);\r\n}\r\n\r\nfunction getAlpha(string) {\r\n   var vals = getRgba(string);\r\n   if (vals) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHsla(string)) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHwb(string)) {\r\n      return vals[3];\r\n   }\r\n}\r\n\r\n// generators\r\nfunction hexString(rgb) {\r\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n              + hexDouble(rgb[2]);\r\n}\r\n\r\nfunction rgbString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return rgbaString(rgba, alpha);\r\n   }\r\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n}\r\n\r\nfunction rgbaString(rgba, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n   }\r\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n           + \", \" + alpha + \")\";\r\n}\r\n\r\nfunction percentString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return percentaString(rgba, alpha);\r\n   }\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n\r\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n}\r\n\r\nfunction percentaString(rgba, alpha) {\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n}\r\n\r\nfunction hslString(hsla, alpha) {\r\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n      return hslaString(hsla, alpha);\r\n   }\r\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n}\r\n\r\nfunction hslaString(hsla, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n   }\r\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n           + alpha + \")\";\r\n}\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\nfunction hwbString(hwb, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n   }\r\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n}\r\n\r\nfunction keyword(rgb) {\r\n  return reverseNames[rgb.slice(0, 3)];\r\n}\r\n\r\n// helpers\r\nfunction scale(num, min, max) {\r\n   return Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n  var str = num.toString(16).toUpperCase();\r\n  return (str.length < 2) ? \"0\" + str : str;\r\n}\r\n\r\n\r\n//create a list of reverse color names\r\nvar reverseNames = {};\r\nfor (var name in colorNames) {\r\n   reverseNames[colorNames[name]] = name;\r\n}\r\n\n},{\"color-name\":6}],3:[function(require,module,exports){\n/* MIT license */\r\n\r\nvar convert = require(\"color-convert\"),\r\n  string = require(\"chartjs-color-string\");\r\n\r\nvar Color = function(obj) {\r\n  if (obj instanceof Color) return obj;\r\n  if (!(this instanceof Color)) return new Color(obj);\r\n\r\n  this.values = {\r\n    rgb: [0, 0, 0],\r\n    hsl: [0, 0, 0],\r\n    hsv: [0, 0, 0],\r\n    hwb: [0, 0, 0],\r\n    cmyk: [0, 0, 0, 0],\r\n    alpha: 1\r\n  }\r\n\r\n  // parse Color() argument\r\n  if (typeof obj == \"string\") {\r\n    var vals = string.getRgba(obj);\r\n    if (vals) {\r\n      this.setValues(\"rgb\", vals);\r\n    } else if (vals = string.getHsla(obj)) {\r\n      this.setValues(\"hsl\", vals);\r\n    } else if (vals = string.getHwb(obj)) {\r\n      this.setValues(\"hwb\", vals);\r\n    } else {\r\n      throw new Error(\"Unable to parse color from string \\\"\" + obj + \"\\\"\");\r\n    }\r\n  } else if (typeof obj == \"object\") {\r\n    var vals = obj;\r\n    if (vals[\"r\"] !== undefined || vals[\"red\"] !== undefined) {\r\n      this.setValues(\"rgb\", vals)\r\n    } else if (vals[\"l\"] !== undefined || vals[\"lightness\"] !== undefined) {\r\n      this.setValues(\"hsl\", vals)\r\n    } else if (vals[\"v\"] !== undefined || vals[\"value\"] !== undefined) {\r\n      this.setValues(\"hsv\", vals)\r\n    } else if (vals[\"w\"] !== undefined || vals[\"whiteness\"] !== undefined) {\r\n      this.setValues(\"hwb\", vals)\r\n    } else if (vals[\"c\"] !== undefined || vals[\"cyan\"] !== undefined) {\r\n      this.setValues(\"cmyk\", vals)\r\n    } else {\r\n      throw new Error(\"Unable to parse color from object \" + JSON.stringify(obj));\r\n    }\r\n  }\r\n}\r\n\r\nColor.prototype = {\r\n  rgb: function(vals) {\r\n    return this.setSpace(\"rgb\", arguments);\r\n  },\r\n  hsl: function(vals) {\r\n    return this.setSpace(\"hsl\", arguments);\r\n  },\r\n  hsv: function(vals) {\r\n    return this.setSpace(\"hsv\", arguments);\r\n  },\r\n  hwb: function(vals) {\r\n    return this.setSpace(\"hwb\", arguments);\r\n  },\r\n  cmyk: function(vals) {\r\n    return this.setSpace(\"cmyk\", arguments);\r\n  },\r\n\r\n  rgbArray: function() {\r\n    return this.values.rgb;\r\n  },\r\n  hslArray: function() {\r\n    return this.values.hsl;\r\n  },\r\n  hsvArray: function() {\r\n    return this.values.hsv;\r\n  },\r\n  hwbArray: function() {\r\n    if (this.values.alpha !== 1) {\r\n      return this.values.hwb.concat([this.values.alpha])\r\n    }\r\n    return this.values.hwb;\r\n  },\r\n  cmykArray: function() {\r\n    return this.values.cmyk;\r\n  },\r\n  rgbaArray: function() {\r\n    var rgb = this.values.rgb;\r\n    return rgb.concat([this.values.alpha]);\r\n  },\r\n  hslaArray: function() {\r\n    var hsl = this.values.hsl;\r\n    return hsl.concat([this.values.alpha]);\r\n  },\r\n  alpha: function(val) {\r\n    if (val === undefined) {\r\n      return this.values.alpha;\r\n    }\r\n    this.setValues(\"alpha\", val);\r\n    return this;\r\n  },\r\n\r\n  red: function(val) {\r\n    return this.setChannel(\"rgb\", 0, val);\r\n  },\r\n  green: function(val) {\r\n    return this.setChannel(\"rgb\", 1, val);\r\n  },\r\n  blue: function(val) {\r\n    return this.setChannel(\"rgb\", 2, val);\r\n  },\r\n  hue: function(val) {\r\n    return this.setChannel(\"hsl\", 0, val);\r\n  },\r\n  saturation: function(val) {\r\n    return this.setChannel(\"hsl\", 1, val);\r\n  },\r\n  lightness: function(val) {\r\n    return this.setChannel(\"hsl\", 2, val);\r\n  },\r\n  saturationv: function(val) {\r\n    return this.setChannel(\"hsv\", 1, val);\r\n  },\r\n  whiteness: function(val) {\r\n    return this.setChannel(\"hwb\", 1, val);\r\n  },\r\n  blackness: function(val) {\r\n    return this.setChannel(\"hwb\", 2, val);\r\n  },\r\n  value: function(val) {\r\n    return this.setChannel(\"hsv\", 2, val);\r\n  },\r\n  cyan: function(val) {\r\n    return this.setChannel(\"cmyk\", 0, val);\r\n  },\r\n  magenta: function(val) {\r\n    return this.setChannel(\"cmyk\", 1, val);\r\n  },\r\n  yellow: function(val) {\r\n    return this.setChannel(\"cmyk\", 2, val);\r\n  },\r\n  black: function(val) {\r\n    return this.setChannel(\"cmyk\", 3, val);\r\n  },\r\n\r\n  hexString: function() {\r\n    return string.hexString(this.values.rgb);\r\n  },\r\n  rgbString: function() {\r\n    return string.rgbString(this.values.rgb, this.values.alpha);\r\n  },\r\n  rgbaString: function() {\r\n    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n  },\r\n  percentString: function() {\r\n    return string.percentString(this.values.rgb, this.values.alpha);\r\n  },\r\n  hslString: function() {\r\n    return string.hslString(this.values.hsl, this.values.alpha);\r\n  },\r\n  hslaString: function() {\r\n    return string.hslaString(this.values.hsl, this.values.alpha);\r\n  },\r\n  hwbString: function() {\r\n    return string.hwbString(this.values.hwb, this.values.alpha);\r\n  },\r\n  keyword: function() {\r\n    return string.keyword(this.values.rgb, this.values.alpha);\r\n  },\r\n\r\n  rgbNumber: function() {\r\n    return (this.values.rgb[0] << 16) | (this.values.rgb[1] << 8) | this.values.rgb[2];\r\n  },\r\n\r\n  luminosity: function() {\r\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n    var rgb = this.values.rgb;\r\n    var lum = [];\r\n    for (var i = 0; i < rgb.length; i++) {\r\n      var chan = rgb[i] / 255;\r\n      lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4)\r\n    }\r\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n  },\r\n\r\n  contrast: function(color2) {\r\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n    var lum1 = this.luminosity();\r\n    var lum2 = color2.luminosity();\r\n    if (lum1 > lum2) {\r\n      return (lum1 + 0.05) / (lum2 + 0.05)\r\n    };\r\n    return (lum2 + 0.05) / (lum1 + 0.05);\r\n  },\r\n\r\n  level: function(color2) {\r\n    var contrastRatio = this.contrast(color2);\r\n    return (contrastRatio >= 7.1) ? 'AAA' : (contrastRatio >= 4.5) ? 'AA' : '';\r\n  },\r\n\r\n  dark: function() {\r\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n    var rgb = this.values.rgb,\r\n      yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n    return yiq < 128;\r\n  },\r\n\r\n  light: function() {\r\n    return !this.dark();\r\n  },\r\n\r\n  negate: function() {\r\n    var rgb = []\r\n    for (var i = 0; i < 3; i++) {\r\n      rgb[i] = 255 - this.values.rgb[i];\r\n    }\r\n    this.setValues(\"rgb\", rgb);\r\n    return this;\r\n  },\r\n\r\n  lighten: function(ratio) {\r\n    this.values.hsl[2] += this.values.hsl[2] * ratio;\r\n    this.setValues(\"hsl\", this.values.hsl);\r\n    return this;\r\n  },\r\n\r\n  darken: function(ratio) {\r\n    this.values.hsl[2] -= this.values.hsl[2] * ratio;\r\n    this.setValues(\"hsl\", this.values.hsl);\r\n    return this;\r\n  },\r\n\r\n  saturate: function(ratio) {\r\n    this.values.hsl[1] += this.values.hsl[1] * ratio;\r\n    this.setValues(\"hsl\", this.values.hsl);\r\n    return this;\r\n  },\r\n\r\n  desaturate: function(ratio) {\r\n    this.values.hsl[1] -= this.values.hsl[1] * ratio;\r\n    this.setValues(\"hsl\", this.values.hsl);\r\n    return this;\r\n  },\r\n\r\n  whiten: function(ratio) {\r\n    this.values.hwb[1] += this.values.hwb[1] * ratio;\r\n    this.setValues(\"hwb\", this.values.hwb);\r\n    return this;\r\n  },\r\n\r\n  blacken: function(ratio) {\r\n    this.values.hwb[2] += this.values.hwb[2] * ratio;\r\n    this.setValues(\"hwb\", this.values.hwb);\r\n    return this;\r\n  },\r\n\r\n  greyscale: function() {\r\n    var rgb = this.values.rgb;\r\n    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n    this.setValues(\"rgb\", [val, val, val]);\r\n    return this;\r\n  },\r\n\r\n  clearer: function(ratio) {\r\n    this.setValues(\"alpha\", this.values.alpha - (this.values.alpha * ratio));\r\n    return this;\r\n  },\r\n\r\n  opaquer: function(ratio) {\r\n    this.setValues(\"alpha\", this.values.alpha + (this.values.alpha * ratio));\r\n    return this;\r\n  },\r\n\r\n  rotate: function(degrees) {\r\n    var hue = this.values.hsl[0];\r\n    hue = (hue + degrees) % 360;\r\n    hue = hue < 0 ? 360 + hue : hue;\r\n    this.values.hsl[0] = hue;\r\n    this.setValues(\"hsl\", this.values.hsl);\r\n    return this;\r\n  },\r\n\r\n  mix: function(color2, weight) {\r\n    weight = 1 - (weight == null ? 0.5 : weight);\r\n\r\n    // algorithm from Sass's mix(). Ratio of first color in mix is\r\n    // determined by the alphas of both colors and the weight\r\n    var t1 = weight * 2 - 1,\r\n      d = this.alpha() - color2.alpha();\r\n\r\n    var weight1 = (((t1 * d == -1) ? t1 : (t1 + d) / (1 + t1 * d)) + 1) / 2;\r\n    var weight2 = 1 - weight1;\r\n\r\n    var rgb = this.rgbArray();\r\n    var rgb2 = color2.rgbArray();\r\n\r\n    for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = rgb[i] * weight1 + rgb2[i] * weight2;\r\n    }\r\n    this.setValues(\"rgb\", rgb);\r\n\r\n    var alpha = this.alpha() * weight + color2.alpha() * (1 - weight);\r\n    this.setValues(\"alpha\", alpha);\r\n\r\n    return this;\r\n  },\r\n\r\n  toJSON: function() {\r\n    return this.rgb();\r\n  },\r\n\r\n  clone: function() {\r\n    return new Color(this.rgb());\r\n  }\r\n}\r\n\r\n\r\nColor.prototype.getValues = function(space) {\r\n  var vals = {};\r\n  for (var i = 0; i < space.length; i++) {\r\n    vals[space.charAt(i)] = this.values[space][i];\r\n  }\r\n  if (this.values.alpha != 1) {\r\n    vals[\"a\"] = this.values.alpha;\r\n  }\r\n  // {r: 255, g: 255, b: 255, a: 0.4}\r\n  return vals;\r\n}\r\n\r\nColor.prototype.setValues = function(space, vals) {\r\n  var spaces = {\r\n    \"rgb\": [\"red\", \"green\", \"blue\"],\r\n    \"hsl\": [\"hue\", \"saturation\", \"lightness\"],\r\n    \"hsv\": [\"hue\", \"saturation\", \"value\"],\r\n    \"hwb\": [\"hue\", \"whiteness\", \"blackness\"],\r\n    \"cmyk\": [\"cyan\", \"magenta\", \"yellow\", \"black\"]\r\n  };\r\n\r\n  var maxes = {\r\n    \"rgb\": [255, 255, 255],\r\n    \"hsl\": [360, 100, 100],\r\n    \"hsv\": [360, 100, 100],\r\n    \"hwb\": [360, 100, 100],\r\n    \"cmyk\": [100, 100, 100, 100]\r\n  };\r\n\r\n  var alpha = 1;\r\n  if (space == \"alpha\") {\r\n    alpha = vals;\r\n  } else if (vals.length) {\r\n    // [10, 10, 10]\r\n    this.values[space] = vals.slice(0, space.length);\r\n    alpha = vals[space.length];\r\n  } else if (vals[space.charAt(0)] !== undefined) {\r\n    // {r: 10, g: 10, b: 10}\r\n    for (var i = 0; i < space.length; i++) {\r\n      this.values[space][i] = vals[space.charAt(i)];\r\n    }\r\n    alpha = vals.a;\r\n  } else if (vals[spaces[space][0]] !== undefined) {\r\n    // {red: 10, green: 10, blue: 10}\r\n    var chans = spaces[space];\r\n    for (var i = 0; i < space.length; i++) {\r\n      this.values[space][i] = vals[chans[i]];\r\n    }\r\n    alpha = vals.alpha;\r\n  }\r\n  this.values.alpha = Math.max(0, Math.min(1, (alpha !== undefined ? alpha : this.values.alpha)));\r\n  if (space == \"alpha\") {\r\n    return;\r\n  }\r\n\r\n  // cap values of the space prior converting all values\r\n  for (var i = 0; i < space.length; i++) {\r\n    var capped = Math.max(0, Math.min(maxes[space][i], this.values[space][i]));\r\n    this.values[space][i] = Math.round(capped);\r\n  }\r\n\r\n  // convert to all the other color spaces\r\n  for (var sname in spaces) {\r\n    if (sname != space) {\r\n      this.values[sname] = convert[space][sname](this.values[space])\r\n    }\r\n\r\n    // cap values\r\n    for (var i = 0; i < sname.length; i++) {\r\n      var capped = Math.max(0, Math.min(maxes[sname][i], this.values[sname][i]));\r\n      this.values[sname][i] = Math.round(capped);\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nColor.prototype.setSpace = function(space, args) {\r\n  var vals = args[0];\r\n  if (vals === undefined) {\r\n    // color.rgb()\r\n    return this.getValues(space);\r\n  }\r\n  // color.rgb(10, 10, 10)\r\n  if (typeof vals == \"number\") {\r\n    vals = Array.prototype.slice.call(args);\r\n  }\r\n  this.setValues(space, vals);\r\n  return this;\r\n}\r\n\r\nColor.prototype.setChannel = function(space, index, val) {\r\n  if (val === undefined) {\r\n    // color.red()\r\n    return this.values[space][index];\r\n  }\r\n  // color.red(100)\r\n  this.values[space][index] = val;\r\n  this.setValues(space, this.values[space]);\r\n  return this;\r\n}\r\n\r\nwindow.Color = module.exports = Color\r\n\n},{\"chartjs-color-string\":2,\"color-convert\":5}],4:[function(require,module,exports){\n/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n},{}],5:[function(require,module,exports){\nvar conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n},{\"./conversions\":4}],6:[function(require,module,exports){\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n},{}],7:[function(require,module,exports){\nvar Chart = require('./core/core.js')();\r\n\r\nrequire('./core/core.helpers')(Chart);\r\nrequire('./core/core.element')(Chart);\r\nrequire('./core/core.animation')(Chart);\r\nrequire('./core/core.controller')(Chart);\r\nrequire('./core/core.datasetController')(Chart);\r\nrequire('./core/core.layoutService')(Chart);\r\nrequire('./core/core.legend')(Chart);\r\nrequire('./core/core.plugin.js')(Chart);\r\nrequire('./core/core.scale')(Chart);\r\nrequire('./core/core.scaleService')(Chart);\r\nrequire('./core/core.title')(Chart);\r\nrequire('./core/core.tooltip')(Chart);\r\n\r\nrequire('./controllers/controller.bar')(Chart);\r\nrequire('./controllers/controller.bubble')(Chart);\r\nrequire('./controllers/controller.doughnut')(Chart);\r\nrequire('./controllers/controller.line')(Chart);\r\nrequire('./controllers/controller.polarArea')(Chart);\r\nrequire('./controllers/controller.radar')(Chart);\r\n\r\nrequire('./scales/scale.category')(Chart);\r\nrequire('./scales/scale.linear')(Chart);\r\nrequire('./scales/scale.logarithmic')(Chart);\r\nrequire('./scales/scale.radialLinear')(Chart);\r\nrequire('./scales/scale.time')(Chart);\r\n\r\nrequire('./elements/element.arc')(Chart);\r\nrequire('./elements/element.line')(Chart);\r\nrequire('./elements/element.point')(Chart);\r\nrequire('./elements/element.rectangle')(Chart);\r\n\r\nrequire('./charts/Chart.Bar')(Chart);\r\nrequire('./charts/Chart.Bubble')(Chart);\r\nrequire('./charts/Chart.Doughnut')(Chart);\r\nrequire('./charts/Chart.Line')(Chart);\r\nrequire('./charts/Chart.PolarArea')(Chart);\r\nrequire('./charts/Chart.Radar')(Chart);\r\nrequire('./charts/Chart.Scatter')(Chart);\r\n\r\nwindow.Chart = module.exports = Chart;\r\n\n},{\"./charts/Chart.Bar\":8,\"./charts/Chart.Bubble\":9,\"./charts/Chart.Doughnut\":10,\"./charts/Chart.Line\":11,\"./charts/Chart.PolarArea\":12,\"./charts/Chart.Radar\":13,\"./charts/Chart.Scatter\":14,\"./controllers/controller.bar\":15,\"./controllers/controller.bubble\":16,\"./controllers/controller.doughnut\":17,\"./controllers/controller.line\":18,\"./controllers/controller.polarArea\":19,\"./controllers/controller.radar\":20,\"./core/core.animation\":21,\"./core/core.controller\":22,\"./core/core.datasetController\":23,\"./core/core.element\":24,\"./core/core.helpers\":25,\"./core/core.js\":26,\"./core/core.layoutService\":27,\"./core/core.legend\":28,\"./core/core.plugin.js\":29,\"./core/core.scale\":30,\"./core/core.scaleService\":31,\"./core/core.title\":32,\"./core/core.tooltip\":33,\"./elements/element.arc\":34,\"./elements/element.line\":35,\"./elements/element.point\":36,\"./elements/element.rectangle\":37,\"./scales/scale.category\":38,\"./scales/scale.linear\":39,\"./scales/scale.logarithmic\":40,\"./scales/scale.radialLinear\":41,\"./scales/scale.time\":42}],8:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bar = function(context, config) {\r\n\t\tconfig.type = 'bar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],9:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bubble = function(context, config) {\r\n\t\tconfig.type = 'bubble';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],10:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Doughnut = function(context, config) {\r\n\t\tconfig.type = 'doughnut';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],11:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Line = function(context, config) {\r\n\t\tconfig.type = 'line';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],12:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.PolarArea = function(context, config) {\r\n\t\tconfig.type = 'polarArea';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],13:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\taspectRatio: 1\r\n\t};\r\n\r\n\tChart.Radar = function(context, config) {\r\n\t\tconfig.options = helpers.configMerge(defaultConfig, config.options);\r\n\t\tconfig.type = 'radar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar defaultConfig = {\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\", // scatter should not use a category axis\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t\tid: \"x-axis-1\" // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\tid: \"y-axis-1\"\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Register the default config for this type\r\n\tChart.defaults.scatter = defaultConfig;\r\n\r\n\t// Scatter charts use line controllers\r\n\tChart.controllers.scatter = Chart.controllers.line;\r\n\r\n\tChart.Scatter = function(context, config) {\r\n\t\tconfig.type = 'scatter';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],15:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bar = {\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"category\",\r\n\r\n\t\t\t\t// Specific to Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\"\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.bar = Chart.DatasetController.extend({\r\n\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\r\n\r\n\t\t\t// Use this to indicate that this is a bar dataset.\r\n\t\t\tthis.getMeta().bar = true;\r\n\t\t},\r\n\t\t// Get the number of datasets that display bars. We use this to correctly calculate the bar width\r\n\t\tgetBarCount: function getBarCount() {\r\n\t\t\tvar barCount = 0;\r\n\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar meta = this.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (meta.bar && this.chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t++barCount;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\treturn barCount;\r\n\t\t},\r\n\r\n\t\taddElements: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\thelpers.each(this.getDataset().data, function(value, index) {\r\n\t\t\t\tmeta.data[index] = meta.data[index] || new Chart.elements.Rectangle({\r\n\t\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t\t_index: index\r\n\t\t\t\t});\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar rectangle = new Chart.elements.Rectangle({\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index\r\n\t\t\t});\r\n\r\n\t\t\tvar numBars = this.getBarCount();\r\n\r\n\t\t\t// Add to the points array and reset it\r\n\t\t\tthis.getMeta().data.splice(index, 0, rectangle);\r\n\t\t\tthis.updateElement(rectangle, index, true, numBars);\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar numBars = this.getBarCount();\r\n\r\n\t\t\thelpers.each(this.getMeta().data, function(rectangle, index) {\r\n\t\t\t\tthis.updateElement(rectangle, index, reset, numBars);\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tupdateElement: function updateElement(rectangle, index, reset, numBars) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar yScalePoint;\r\n\r\n\t\t\tif (yScale.min < 0 && yScale.max < 0) {\r\n\t\t\t\t// all less than 0. use the top\r\n\t\t\t\tyScalePoint = yScale.getPixelForValue(yScale.max);\r\n\t\t\t} else if (yScale.min > 0 && yScale.max > 0) {\r\n\t\t\t\tyScalePoint = yScale.getPixelForValue(yScale.min);\r\n\t\t\t} else {\r\n\t\t\t\tyScalePoint = yScale.getPixelForValue(0);\r\n\t\t\t}\r\n\r\n\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index,\r\n\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: this.calculateBarX(index, this.index),\r\n\t\t\t\t\ty: reset ? yScalePoint : this.calculateBarY(index, this.index),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\tlabel: this.chart.data.labels[index],\r\n\t\t\t\t\tdatasetLabel: this.getDataset().label,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tbase: reset ? yScalePoint : this.calculateBarBase(this.index, index),\r\n\t\t\t\t\twidth: this.calculateBarWidth(numBars),\r\n\t\t\t\t\tbackgroundColor: rectangle.custom && rectangle.custom.backgroundColor ? rectangle.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().backgroundColor, index, this.chart.options.elements.rectangle.backgroundColor),\r\n\t\t\t\t\tborderSkipped: rectangle.custom && rectangle.custom.borderSkipped ? rectangle.custom.borderSkipped : this.chart.options.elements.rectangle.borderSkipped,\r\n\t\t\t\t\tborderColor: rectangle.custom && rectangle.custom.borderColor ? rectangle.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().borderColor, index, this.chart.options.elements.rectangle.borderColor),\r\n\t\t\t\t\tborderWidth: rectangle.custom && rectangle.custom.borderWidth ? rectangle.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().borderWidth, index, this.chart.options.elements.rectangle.borderWidth)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\trectangle.pivot();\r\n\t\t},\r\n\r\n\t\tcalculateBarBase: function(datasetIndex, index) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar base = 0;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\r\n\t\t\t\tvar value = this.chart.data.datasets[datasetIndex].data[index];\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar negDS = this.chart.data.datasets[i];\r\n\t\t\t\t\t\tvar negDSMeta = this.chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.yAxisID === yScale.id && this.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\tvar posDS = this.chart.data.datasets[j];\r\n\t\t\t\t\t\tvar posDSMeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.yAxisID === yScale.id && this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn yScale.getPixelForValue(base);\r\n\t\t\t}\r\n\r\n\t\t\tbase = yScale.getPixelForValue(yScale.min);\r\n\r\n\t\t\tif (yScale.beginAtZero || ((yScale.min <= 0 && yScale.max >= 0) || (yScale.min >= 0 && yScale.max <= 0))) {\r\n\t\t\t\tbase = yScale.getPixelForValue(0, 0);\r\n\t\t\t\t//base += yScale.options.gridLines.lineWidth;\r\n\t\t\t} else if (yScale.min < 0 && yScale.max < 0) {\r\n\t\t\t\t// All values are negative. Use the top as the base\r\n\t\t\t\tbase = yScale.getPixelForValue(yScale.max);\r\n\t\t\t}\r\n\r\n\t\t\treturn base;\r\n\r\n\t\t},\r\n\r\n\t\tgetRuler: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar datasetCount = this.getBarCount();\r\n\r\n\t\t\tvar tickWidth = (function() {\r\n\t\t\t\tvar min = xScale.getPixelForTick(1) - xScale.getPixelForTick(0);\r\n\t\t\t\tfor (var i = 2; i < xScale.ticks.length; i++) {\r\n\t\t\t\t\tmin = Math.min(xScale.getPixelForTick(i) - xScale.getPixelForTick(i - 1), min);\r\n\t\t\t\t}\r\n\t\t\t\treturn min;\r\n\t\t\t}).call(this);\r\n\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\r\n\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\r\n\t\t\tvar fullBarWidth = categoryWidth / datasetCount;\r\n\r\n\t\t\tif (xScale.ticks.length !== this.chart.data.labels.length) {\r\n\t\t\t    var perc = xScale.ticks.length / this.chart.data.labels.length;\r\n\t\t\t    fullBarWidth = fullBarWidth * perc;\r\n\t\t\t}\r\n\r\n\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\r\n\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\ttickWidth: tickWidth,\r\n\t\t\t\tcategoryWidth: categoryWidth,\r\n\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\tfullBarWidth: fullBarWidth,\r\n\t\t\t\tbarWidth: barWidth,\r\n\t\t\t\tbarSpacing: barSpacing\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculateBarWidth: function() {\r\n\t\t\tvar xScale = this.getScaleForId(this.getMeta().xAxisID);\r\n\t\t\tvar ruler = this.getRuler();\r\n\t\t\treturn xScale.options.stacked ? ruler.categoryWidth : ruler.barWidth;\r\n\t\t},\r\n\r\n\t\t// Get bar index from the given dataset index accounting for the fact that not all bars are visible\r\n\t\tgetBarIndex: function(datasetIndex) {\r\n\t\t\tvar barIndex = 0;\r\n\t\t\tvar meta, j;\r\n\r\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tmeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\tif (meta.bar && this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t++barIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn barIndex;\r\n\t\t},\r\n\r\n\t\tcalculateBarX: function(index, datasetIndex) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar barIndex = this.getBarIndex(datasetIndex);\r\n\r\n\t\t\tvar ruler = this.getRuler();\r\n\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, this.chart.isCombo);\r\n\t\t\tleftTick -= this.chart.isCombo ? (ruler.tickWidth / 2) : 0;\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\t\t\t\treturn leftTick + (ruler.categoryWidth / 2) + ruler.categorySpacing;\r\n\t\t\t}\r\n\r\n\t\t\treturn leftTick +\r\n\t\t\t\t(ruler.barWidth / 2) +\r\n\t\t\t\truler.categorySpacing +\r\n\t\t\t\t(ruler.barWidth * barIndex) +\r\n\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t},\r\n\r\n\t\tcalculateBarY: function(index, datasetIndex) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar value = this.getDataset().data[index];\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\r\n\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\tsumNeg = 0;\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar ds = this.chart.data.datasets[i];\r\n\t\t\t\t\tvar dsMeta = this.chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && this.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\thelpers.each(this.getMeta().data, function(rectangle, index) {\r\n\t\t\t\tvar d = this.getDataset().data[index];\r\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\r\n\t\t\t\t\trectangle.transition(easingDecimal).draw();\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\r\n\t\t\trectangle._model.backgroundColor = rectangle.custom && rectangle.custom.hoverBackgroundColor ? rectangle.custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(rectangle._model.backgroundColor));\r\n\t\t\trectangle._model.borderColor = rectangle.custom && rectangle.custom.hoverBorderColor ? rectangle.custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(rectangle._model.borderColor));\r\n\t\t\trectangle._model.borderWidth = rectangle.custom && rectangle.custom.hoverBorderWidth ? rectangle.custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, rectangle._model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\r\n\t\t\trectangle._model.backgroundColor = rectangle.custom && rectangle.custom.backgroundColor ? rectangle.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().backgroundColor, index, this.chart.options.elements.rectangle.backgroundColor);\r\n\t\t\trectangle._model.borderColor = rectangle.custom && rectangle.custom.borderColor ? rectangle.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().borderColor, index, this.chart.options.elements.rectangle.borderColor);\r\n\t\t\trectangle._model.borderWidth = rectangle.custom && rectangle.custom.borderWidth ? rectangle.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().borderWidth, index, this.chart.options.elements.rectangle.borderWidth);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t// including horizontalBar in the bar file, instead of a file of its own\r\n\t// it extends bar (like pie extends doughnut)\r\n\tChart.defaults.horizontalBar = {\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"bottom\"\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\ttype: \"category\",\r\n\r\n\t\t\t\t// Specific to Horizontal Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t},\r\n\t};\r\n\r\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n\t\tupdateElement: function updateElement(rectangle, index, reset, numBars) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar xScalePoint;\r\n\r\n\t\t\tif (xScale.min < 0 && xScale.max < 0) {\r\n\t\t\t\t// all less than 0. use the right\r\n\t\t\t\txScalePoint = xScale.getPixelForValue(xScale.max);\r\n\t\t\t} else if (xScale.min > 0 && xScale.max > 0) {\r\n\t\t\t\txScalePoint = xScale.getPixelForValue(xScale.min);\r\n\t\t\t} else {\r\n\t\t\t\txScalePoint = xScale.getPixelForValue(0);\r\n\t\t\t}\r\n\r\n\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? xScalePoint : this.calculateBarX(index, this.index),\r\n\t\t\t\t\ty: this.calculateBarY(index, this.index),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\tlabel: this.chart.data.labels[index],\r\n\t\t\t\t\tdatasetLabel: this.getDataset().label,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tbase: reset ? xScalePoint : this.calculateBarBase(this.index, index),\r\n\t\t\t\t\theight: this.calculateBarHeight(numBars),\r\n\t\t\t\t\tbackgroundColor: rectangle.custom && rectangle.custom.backgroundColor ? rectangle.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().backgroundColor, index, this.chart.options.elements.rectangle.backgroundColor),\r\n\t\t\t\t\tborderSkipped: rectangle.custom && rectangle.custom.borderSkipped ? rectangle.custom.borderSkipped : this.chart.options.elements.rectangle.borderSkipped,\r\n\t\t\t\t\tborderColor: rectangle.custom && rectangle.custom.borderColor ? rectangle.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().borderColor, index, this.chart.options.elements.rectangle.borderColor),\r\n\t\t\t\t\tborderWidth: rectangle.custom && rectangle.custom.borderWidth ? rectangle.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().borderWidth, index, this.chart.options.elements.rectangle.borderWidth)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tdraw: function () {\r\n\r\n\t\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\t\tvar vm = this._view;\r\n\r\n\t\t\t\t\tvar halfHeight = vm.height / 2,\r\n\t\t\t\t\t\ttopY = vm.y - halfHeight,\r\n\t\t\t\t\t\tbottomY = vm.y + halfHeight,\r\n\t\t\t\t\t\tright = vm.base - (vm.base - vm.x),\r\n\t\t\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\r\n\t\t\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\ttopY += halfStroke;\r\n\t\t\t\t\t\tbottomY -= halfStroke;\r\n\t\t\t\t\t\tright += halfStroke;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\t\t\tctx.lineWidth = vm.borderWidth;\r\n\r\n\t\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t\t\t// | 1 2 |\r\n\t\t\t\t\t// | 0 3 |\r\n\t\t\t\t\tvar corners = [\r\n\t\t\t\t\t\t[vm.base, bottomY],\r\n\t\t\t\t\t\t[vm.base, topY],\r\n\t\t\t\t\t\t[right, topY],\r\n\t\t\t\t\t\t[right, bottomY]\r\n\t\t\t\t\t];\r\n\r\n\t\t\t\t\t// Find first (starting) corner with fallback to 'bottom'\r\n\t\t\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\t\t\tif (startCorner === -1)\r\n\t\t\t\t\t\tstartCorner = 0;\r\n\r\n\t\t\t\t\tfunction cornerAt(index) {\r\n\t\t\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tinRange: function (mouseX, mouseY) {\r\n\t\t\t\t\tvar vm = this._view;\r\n\t\t\t\t\tvar inRange = false;\r\n\r\n\t\t\t\t\tif (vm) {\r\n\t\t\t\t\t\tif (vm.x < vm.base) {\r\n\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.x && mouseX <= vm.base);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.base && mouseX <= vm.x);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn inRange;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trectangle.pivot();\r\n\t\t},\r\n\r\n\t\tcalculateBarBase: function (datasetIndex, index) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar base = 0;\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\r\n\t\t\t\tvar value = this.chart.data.datasets[datasetIndex].data[index];\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar negDS = this.chart.data.datasets[i];\r\n\t\t\t\t\t\tvar negDSMeta = this.chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.xAxisID === xScale.id && this.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\tvar posDS = this.chart.data.datasets[j];\r\n\t\t\t\t\t\tvar posDSMeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.xAxisID === xScale.id && this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn xScale.getPixelForValue(base);\r\n\t\t\t}\r\n\r\n\t\t\tbase = xScale.getPixelForValue(xScale.min);\r\n\r\n\t\t\tif (xScale.beginAtZero || ((xScale.min <= 0 && xScale.max >= 0) || (xScale.min >= 0 && xScale.max <= 0))) {\r\n\t\t\t\tbase = xScale.getPixelForValue(0, 0);\r\n\t\t\t} else if (xScale.min < 0 && xScale.max < 0) {\r\n\t\t\t\t// All values are negative. Use the right as the base\r\n\t\t\t\tbase = xScale.getPixelForValue(xScale.max);\r\n\t\t\t}\r\n\r\n\t\t\treturn base;\r\n\t\t},\r\n\r\n\t\tgetRuler: function () {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar datasetCount = this.getBarCount();\r\n\r\n\t\t\tvar tickHeight = (function () {\r\n\t\t\t\tvar min = yScale.getPixelForTick(1) - yScale.getPixelForTick(0);\r\n\t\t\t\tfor (var i = 2; i < this.getDataset().data.length; i++) {\r\n\t\t\t\t\tmin = Math.min(yScale.getPixelForTick(i) - yScale.getPixelForTick(i - 1), min);\r\n\t\t\t\t}\r\n\t\t\t\treturn min;\r\n\t\t\t}).call(this);\r\n\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\r\n\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\r\n\t\t\tvar fullBarHeight = categoryHeight / datasetCount;\r\n\r\n\t\t\tif (yScale.ticks.length !== this.chart.data.labels.length) {\r\n\t\t\t\tvar perc = yScale.ticks.length / this.chart.data.labels.length;\r\n\t\t\t\tfullBarHeight = fullBarHeight * perc;\r\n\t\t\t}\r\n\r\n\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\r\n\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\ttickHeight: tickHeight,\r\n\t\t\t\tcategoryHeight: categoryHeight,\r\n\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\tfullBarHeight: fullBarHeight,\r\n\t\t\t\tbarHeight: barHeight,\r\n\t\t\t\tbarSpacing: barSpacing,\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculateBarHeight: function () {\r\n\t\t\tvar yScale = this.getScaleForId(this.getMeta().yAxisID);\r\n\t\t\tvar ruler = this.getRuler();\r\n\t\t\treturn yScale.options.stacked ? ruler.categoryHeight : ruler.barHeight;\r\n\t\t},\r\n\r\n\t\tcalculateBarX: function (index, datasetIndex) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar value = this.getDataset().data[index];\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\r\n\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\tsumNeg = 0;\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar ds = this.chart.data.datasets[i];\r\n\t\t\t\t\tvar dsMeta = this.chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && this.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn xScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tcalculateBarY: function (index, datasetIndex) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar barIndex = this.getBarIndex(datasetIndex);\r\n\r\n\t\t\tvar ruler = this.getRuler();\r\n\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, this.chart.isCombo);\r\n\t\t\ttopTick -= this.chart.isCombo ? (ruler.tickHeight / 2) : 0;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\treturn topTick + (ruler.categoryHeight / 2) + ruler.categorySpacing;\r\n\t\t\t}\r\n\r\n\t\t\treturn topTick +\r\n\t\t\t\t(ruler.barHeight / 2) +\r\n\t\t\t\truler.categorySpacing +\r\n\t\t\t\t(ruler.barHeight * barIndex) +\r\n\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bubble = {\r\n\t\thover: {\r\n\t\t\tmode: \"single\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\", // bubble should probably use a linear scale by default\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t\tid: \"x-axis-0\" // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\tid: \"y-axis-0\"\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t\treturn datasetLabel + ': (' + dataPoint.x + ', ' + dataPoint.y + ', ' + dataPoint.r + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tChart.controllers.bubble = Chart.DatasetController.extend({\r\n\t\taddElements: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\thelpers.each(this.getDataset().data, function(value, index) {\r\n\t\t\t\tmeta.data[index] = meta.data[index] || new Chart.elements.Point({\r\n\t\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t\t_index: index\r\n\t\t\t\t});\r\n\t\t\t}, this);\r\n\t\t},\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar point = new Chart.elements.Point({\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index\r\n\t\t\t});\r\n\r\n\t\t\t// Add to the points array and reset it\r\n\t\t\tthis.getMeta().data.splice(index, 0, point);\r\n\t\t\tthis.updateElement(point, index, true);\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar points = meta.data;\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar scaleBase;\r\n\r\n\t\t\tif (yScale.min < 0 && yScale.max < 0) {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(yScale.max);\r\n\t\t\t} else if (yScale.min > 0 && yScale.max > 0) {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(yScale.min);\r\n\t\t\t} else {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(0);\r\n\t\t\t}\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tthis.updateElement(point, index, reset);\r\n\t\t\t}, this);\r\n\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar scaleBase;\r\n\r\n\t\t\tif (yScale.min < 0 && yScale.max < 0) {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(yScale.max);\r\n\t\t\t} else if (yScale.min > 0 && yScale.max > 0) {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(yScale.min);\r\n\t\t\t} else {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(0);\r\n\t\t\t}\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(this.getDataset().data[index], index, this.index, this.chart.isCombo),\r\n\t\t\t\t\ty: reset ? scaleBase : yScale.getPixelForValue(this.getDataset().data[index], index, this.index),\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tradius: reset ? 0 : point.custom && point.custom.radius ? point.custom.radius : this.getRadius(this.getDataset().data[index]),\r\n\t\t\t\t\tbackgroundColor: point.custom && point.custom.backgroundColor ? point.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().backgroundColor, index, this.chart.options.elements.point.backgroundColor),\r\n\t\t\t\t\tborderColor: point.custom && point.custom.borderColor ? point.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().borderColor, index, this.chart.options.elements.point.borderColor),\r\n\t\t\t\t\tborderWidth: point.custom && point.custom.borderWidth ? point.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().borderWidth, index, this.chart.options.elements.point.borderWidth),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: point.custom && point.custom.hitRadius ? point.custom.hitRadius : helpers.getValueAtIndexOrDefault(this.getDataset().hitRadius, index, this.chart.options.elements.point.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tpoint._model.skip = point.custom && point.custom.skip ? point.custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\r\n\r\n\t\t\tpoint.pivot();\r\n\t\t},\r\n\r\n\t\tgetRadius: function(value) {\r\n\t\t\treturn value.r || this.chart.options.elements.point.radius;\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\r\n\t\t\t// Transition and Draw the Points\r\n\t\t\thelpers.each(this.getMeta().data, function(point, index) {\r\n\t\t\t\tpoint.transition(easingDecimal);\r\n\t\t\t\tpoint.draw();\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\r\n\t\t\tpoint._model.radius = point.custom && point.custom.hoverRadius ? point.custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, this.chart.options.elements.point.hoverRadius)) + this.getRadius(this.getDataset().data[point._index]);\r\n\t\t\tpoint._model.backgroundColor = point.custom && point.custom.hoverBackgroundColor ? point.custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(point._model.backgroundColor));\r\n\t\t\tpoint._model.borderColor = point.custom && point.custom.hoverBorderColor ? point.custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(point._model.borderColor));\r\n\t\t\tpoint._model.borderWidth = point.custom && point.custom.hoverBorderWidth ? point.custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, point._model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\r\n\t\t\tpoint._model.radius = point.custom && point.custom.radius ? point.custom.radius : this.getRadius(this.getDataset().data[point._index]);\r\n\t\t\tpoint._model.backgroundColor = point.custom && point.custom.backgroundColor ? point.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().backgroundColor, index, this.chart.options.elements.point.backgroundColor);\r\n\t\t\tpoint._model.borderColor = point.custom && point.custom.borderColor ? point.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().borderColor, index, this.chart.options.elements.point.borderColor);\r\n\t\t\tpoint._model.borderWidth = point.custom && point.custom.borderWidth ? point.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().borderWidth, index, this.chart.options.elements.point.borderWidth);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],17:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.doughnut = {\r\n\t\tanimation: {\r\n\t\t\t//Boolean - Whether we animate the rotation of the Doughnut\r\n\t\t\tanimateRotate: true,\r\n\t\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\r\n\t\t\tanimateScale: false\r\n\t\t},\r\n\t\taspectRatio: 1,\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tif (chart.data.datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < chart.data.datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[0].backgroundColor[i] + '\"></span>');\r\n\t\t\t\t\tif (chart.data.labels[i]) {\r\n\t\t\t\t\t\ttext.push(chart.data.labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join(\"\");\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar fill = arc.custom && arc.custom.backgroundColor ? arc.custom.backgroundColor : helpers.getValueAtIndexOrDefault(ds.backgroundColor, i, this.chart.options.elements.arc.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = arc.custom && arc.custom.borderColor ? arc.custom.borderColor : helpers.getValueAtIndexOrDefault(ds.borderColor, i, this.chart.options.elements.arc.borderColor);\r\n\t\t\t\t\t\t\tvar bw = arc.custom && arc.custom.borderWidth ? arc.custom.borderWidth : helpers.getValueAtIndexOrDefault(ds.borderWidth, i, this.chart.options.elements.arc.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//The percentage of the chart that we cut out of the middle.\r\n\t\tcutoutPercentage: 50,\r\n\r\n\t\t//The rotation of the chart, where the first data arc begins.\r\n\t\trotation: Math.PI * -0.5,\r\n\r\n\t\t//The total circumference of the chart.\r\n\t\tcircumference: Math.PI * 2.0,\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.defaults.pie = helpers.clone(Chart.defaults.doughnut);\r\n\thelpers.extend(Chart.defaults.pie, {\r\n\t\tcutoutPercentage: 0\r\n\t});\r\n\r\n\r\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n\t\tlinkScales: function() {\r\n\t\t\t// no scales for doughnut\r\n\t\t},\r\n\r\n\t\taddElements: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\thelpers.each(this.getDataset().data, function(value, index) {\r\n\t\t\t\tmeta.data[index] = meta.data[index] || new Chart.elements.Arc({\r\n\t\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t\t_index: index\r\n\t\t\t\t});\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\taddElementAndReset: function(index, colorForNewElement) {\r\n\t\t\tvar arc = new Chart.elements.Arc({\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index\r\n\t\t\t});\r\n\r\n\t\t\tif (colorForNewElement && helpers.isArray(this.getDataset().backgroundColor)) {\r\n\t\t\t\tthis.getDataset().backgroundColor.splice(index, 0, colorForNewElement);\r\n\t\t\t}\r\n\r\n\t\t\t// Add to the points array and reset it\r\n\t\t\tthis.getMeta().data.splice(index, 0, arc);\r\n\t\t\tthis.updateElement(arc, index, true);\r\n\t\t},\r\n\r\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n\t\tgetRingIndex: function getRingIndex(datasetIndex) {\r\n\t\t\tvar ringIndex = 0;\r\n\r\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t++ringIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ringIndex;\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar availableWidth = this.chart.chartArea.right - this.chart.chartArea.left - this.chart.options.elements.arc.borderWidth;\r\n\t\t\tvar availableHeight = this.chart.chartArea.bottom - this.chart.chartArea.top - this.chart.options.elements.arc.borderWidth;\r\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\r\n\t\t\tvar offset = {x: 0, y: 0};\r\n\r\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n\t\t\tif (this.chart.options.circumference < Math.PI * 2.0) {\r\n\t\t\t\tvar startAngle = this.chart.options.rotation % (Math.PI * 2.0);\r\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n\t\t\t\tvar endAngle = startAngle + this.chart.options.circumference;\r\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\r\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\r\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n\t\t\t\tvar cutout = this.chart.options.cutoutPercentage / 100.0;\r\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\r\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\r\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\r\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\r\n\t\t\t}\r\n\r\n\t\t\tthis.chart.outerRadius = Math.max(minSize / 2, 0);\r\n\t\t\tthis.chart.innerRadius = Math.max(this.chart.options.cutoutPercentage ? (this.chart.outerRadius / 100) * (this.chart.options.cutoutPercentage) : 1, 0);\r\n\t\t\tthis.chart.radiusLength = (this.chart.outerRadius - this.chart.innerRadius) / this.chart.getVisibleDatasetCount();\r\n\t\t\tthis.chart.offsetX = offset.x * this.chart.outerRadius;\r\n\t\t\tthis.chart.offsetY = offset.y * this.chart.outerRadius;\r\n\r\n\t\t\tthis.getMeta().total = this.calculateTotal();\r\n\r\n\t\t\tthis.outerRadius = this.chart.outerRadius - (this.chart.radiusLength * this.getRingIndex(this.index));\r\n\t\t\tthis.innerRadius = this.outerRadius - this.chart.radiusLength;\r\n\r\n\t\t\thelpers.each(this.getMeta().data, function(arc, index) {\r\n\t\t\t\tthis.updateElement(arc, index, reset);\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar centerX = (this.chart.chartArea.left + this.chart.chartArea.right) / 2;\r\n\t\t\tvar centerY = (this.chart.chartArea.top + this.chart.chartArea.bottom) / 2;\r\n\t\t\tvar startAngle = this.chart.options.rotation; // non reset case handled later\r\n\t\t\tvar endAngle = this.chart.options.rotation; // non reset case handled later\r\n\t\t\tvar circumference = reset && this.chart.options.animation.animateRotate ? 0 : arc.hidden? 0 : this.calculateCircumference(this.getDataset().data[index]) * (this.chart.options.circumference / (2.0 * Math.PI));\r\n\t\t\tvar innerRadius = reset && this.chart.options.animation.animateScale ? 0 : this.innerRadius;\r\n\t\t\tvar outerRadius = reset && this.chart.options.animation.animateScale ? 0 : this.outerRadius;\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: centerX + this.chart.offsetX,\r\n\t\t\t\t\ty: centerY + this.chart.offsetY,\r\n\t\t\t\t\tstartAngle: startAngle,\r\n\t\t\t\t\tendAngle: endAngle,\r\n\t\t\t\t\tcircumference: circumference,\r\n\t\t\t\t\touterRadius: outerRadius,\r\n\t\t\t\t\tinnerRadius: innerRadius,\r\n\r\n\t\t\t\t\tbackgroundColor: arc.custom && arc.custom.backgroundColor ? arc.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().backgroundColor, index, this.chart.options.elements.arc.backgroundColor),\r\n\t\t\t\t\thoverBackgroundColor: arc.custom && arc.custom.hoverBackgroundColor ? arc.custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().hoverBackgroundColor, index, this.chart.options.elements.arc.hoverBackgroundColor),\r\n\t\t\t\t\tborderWidth: arc.custom && arc.custom.borderWidth ? arc.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().borderWidth, index, this.chart.options.elements.arc.borderWidth),\r\n\t\t\t\t\tborderColor: arc.custom && arc.custom.borderColor ? arc.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().borderColor, index, this.chart.options.elements.arc.borderColor),\r\n\r\n\t\t\t\t\tlabel: helpers.getValueAtIndexOrDefault(this.getDataset().label, index, this.chart.data.labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Set correct angles if not resetting\r\n\t\t\tif (!reset || !this.chart.options.animation.animateRotate) {\r\n\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tarc._model.startAngle = this.chart.options.rotation;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tarc._model.startAngle = this.getMeta().data[index - 1]._model.endAngle;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarc._model.endAngle = arc._model.startAngle + arc._model.circumference;\r\n\t\t\t}\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\thelpers.each(this.getMeta().data, function(arc, index) {\r\n\t\t\t\tarc.transition(easingDecimal).draw();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(arc) {\r\n\t\t\tvar dataset = this.chart.data.datasets[arc._datasetIndex];\r\n\t\t\tvar index = arc._index;\r\n\r\n\t\t\tarc._model.backgroundColor = arc.custom && arc.custom.hoverBackgroundColor ? arc.custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(arc._model.backgroundColor));\r\n\t\t\tarc._model.borderColor = arc.custom && arc.custom.hoverBorderColor ? arc.custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(arc._model.borderColor));\r\n\t\t\tarc._model.borderWidth = arc.custom && arc.custom.hoverBorderWidth ? arc.custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, arc._model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tvar dataset = this.chart.data.datasets[arc._datasetIndex];\r\n\t\t\tvar index = arc._index;\r\n\r\n\t\t\tarc._model.backgroundColor = arc.custom && arc.custom.backgroundColor ? arc.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().backgroundColor, index, this.chart.options.elements.arc.backgroundColor);\r\n\t\t\tarc._model.borderColor = arc.custom && arc.custom.borderColor ? arc.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().borderColor, index, this.chart.options.elements.arc.borderColor);\r\n\t\t\tarc._model.borderWidth = arc.custom && arc.custom.borderWidth ? arc.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().borderWidth, index, this.chart.options.elements.arc.borderWidth);\r\n\t\t},\r\n\r\n\t\tcalculateTotal: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar total = 0;\r\n\t\t\tvar value;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tvalue = dataset.data[index];\r\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\r\n\t\t\t\t\ttotal += Math.abs(value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn total;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar total = this.getMeta().total;\r\n\t\t\tif (total > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\r\n\t\t\t} else {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],18:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.line = {\r\n\t\tshowLines: true,\r\n\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tid: 'x-axis-0'\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tid: 'y-axis-0'\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tChart.controllers.line = Chart.DatasetController.extend({\r\n\t\taddElements: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tmeta.dataset = meta.dataset || new Chart.elements.Line({\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_points: meta.data\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(this.getDataset().data, function(value, index) {\r\n\t\t\t\tmeta.data[index] = meta.data[index] || new Chart.elements.Point({\r\n\t\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t\t_index: index\r\n\t\t\t\t});\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar point = new Chart.elements.Point({\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index\r\n\t\t\t});\r\n\r\n\t\t\t// Add to the points array and reset it\r\n\t\t\tthis.getMeta().data.splice(index, 0, point);\r\n\t\t\tthis.updateElement(point, index, true);\r\n\r\n\t\t\t// Make sure bezier control points are updated\r\n\t\t\tif (this.chart.options.showLines && this.chart.options.elements.line.tension !== 0)\r\n\t\t\t\tthis.updateBezierControlPoints();\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data;\r\n\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar scaleBase;\r\n\r\n\t\t\tif (yScale.min < 0 && yScale.max < 0) {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(yScale.max);\r\n\t\t\t} else if (yScale.min > 0 && yScale.max > 0) {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(yScale.min);\r\n\t\t\t} else {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(0);\r\n\t\t\t}\r\n\r\n\t\t\t// Update Line\r\n\t\t\tif (this.chart.options.showLines) {\r\n\t\t\t\t// Utility\r\n\t\t\t\tline._scale = yScale;\r\n\t\t\t\tline._datasetIndex = this.index;\r\n\t\t\t\t// Data\r\n\t\t\t\tline._children = points;\r\n\t\t\t\t// Model\r\n\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((this.getDataset().tension !== undefined) && (this.getDataset().lineTension === undefined))\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.getDataset().lineTension = this.getDataset().tension;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tline._model = {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: line.custom && line.custom.tension ? line.custom.tension : helpers.getValueOrDefault(this.getDataset().lineTension, this.chart.options.elements.line.tension),\r\n\t\t\t\t\tbackgroundColor: line.custom && line.custom.backgroundColor ? line.custom.backgroundColor : (this.getDataset().backgroundColor || this.chart.options.elements.line.backgroundColor),\r\n\t\t\t\t\tborderWidth: line.custom && line.custom.borderWidth ? line.custom.borderWidth : (this.getDataset().borderWidth || this.chart.options.elements.line.borderWidth),\r\n\t\t\t\t\tborderColor: line.custom && line.custom.borderColor ? line.custom.borderColor : (this.getDataset().borderColor || this.chart.options.elements.line.borderColor),\r\n\t\t\t\t\tborderCapStyle: line.custom && line.custom.borderCapStyle ? line.custom.borderCapStyle : (this.getDataset().borderCapStyle || this.chart.options.elements.line.borderCapStyle),\r\n\t\t\t\t\tborderDash: line.custom && line.custom.borderDash ? line.custom.borderDash : (this.getDataset().borderDash || this.chart.options.elements.line.borderDash),\r\n\t\t\t\t\tborderDashOffset: line.custom && line.custom.borderDashOffset ? line.custom.borderDashOffset : (this.getDataset().borderDashOffset || this.chart.options.elements.line.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: line.custom && line.custom.borderJoinStyle ? line.custom.borderJoinStyle : (this.getDataset().borderJoinStyle || this.chart.options.elements.line.borderJoinStyle),\r\n\t\t\t\t\tfill: line.custom && line.custom.fill ? line.custom.fill : (this.getDataset().fill !== undefined ? this.getDataset().fill : this.chart.options.elements.line.fill),\r\n\t\t\t\t\t// Scale\r\n\t\t\t\t\tscaleTop: yScale.top,\r\n\t\t\t\t\tscaleBottom: yScale.bottom,\r\n\t\t\t\t\tscaleZero: scaleBase\r\n\t\t\t\t};\r\n\t\t\t\tline.pivot();\r\n\t\t\t}\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tthis.updateElement(point, index, reset);\r\n\t\t\t}, this);\r\n\r\n\t\t\tif (this.chart.options.showLines && this.chart.options.elements.line.tension !== 0)\r\n\t\t\t\tthis.updateBezierControlPoints();\r\n\t\t},\r\n\r\n\t\tgetPointBackgroundColor: function(point, index) {\r\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\r\n\t\t\tif (point.custom && point.custom.backgroundColor) {\r\n\t\t\t\tbackgroundColor = point.custom.backgroundColor;\r\n\t\t\t} else if (dataset.pointBackgroundColor) {\r\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n\t\t\t} else if (dataset.backgroundColor) {\r\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn backgroundColor;\r\n\t\t},\r\n\t\tgetPointBorderColor: function(point, index) {\r\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\r\n\t\t\tif (point.custom && point.custom.borderColor) {\r\n\t\t\t\tborderColor = point.custom.borderColor;\r\n\t\t\t} else if (dataset.pointBorderColor) {\r\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(this.getDataset().pointBorderColor, index, borderColor);\r\n\t\t\t} else if (dataset.borderColor) {\r\n\t\t\t\tborderColor = dataset.borderColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderColor;\r\n\t\t},\r\n\t\tgetPointBorderWidth: function(point, index) {\r\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\r\n\t\t\tvar dataset = this.getDataset();\r\n\r\n\t\t\tif (point.custom && point.custom.borderWidth !== undefined) {\r\n\t\t\t\tborderWidth = point.custom.borderWidth;\r\n\t\t\t} else if (dataset.pointBorderWidth !== undefined) {\r\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n\t\t\t} else if (dataset.borderWidth !== undefined) {\r\n\t\t\t\tborderWidth = dataset.borderWidth;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderWidth;\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar scaleBase;\r\n\r\n\t\t\tif (yScale.min < 0 && yScale.max < 0) {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(yScale.max);\r\n\t\t\t} else if (yScale.min > 0 && yScale.max > 0) {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(yScale.min);\r\n\t\t\t} else {\r\n\t\t\t\tscaleBase = yScale.getPixelForValue(0);\r\n\t\t\t}\r\n\r\n\t\t\t// Utility\r\n\t\t\tpoint._chart = this.chart.chart;\r\n\t\t\tpoint._xScale = xScale;\r\n\t\t\tpoint._yScale = yScale;\r\n\t\t\tpoint._datasetIndex = this.index;\r\n\t\t\tpoint._index = index;\r\n\r\n\t\t\t// Desired view properties\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((this.getDataset().radius !== undefined) && (this.getDataset().pointRadius === undefined))\r\n\t\t\t{\r\n\t\t\t\tthis.getDataset().pointRadius = this.getDataset().radius;\r\n\t\t\t}\r\n\t\t\tif ((this.getDataset().hitRadius !== undefined) && (this.getDataset().pointHitRadius === undefined))\r\n\t\t\t{\r\n\t\t\t\tthis.getDataset().pointHitRadius = this.getDataset().hitRadius;\r\n\t\t\t}\r\n\r\n\t\t\tpoint._model = {\r\n\t\t\t\tx: xScale.getPixelForValue(this.getDataset().data[index], index, this.index, this.chart.isCombo),\r\n\t\t\t\ty: reset ? scaleBase : this.calculatePointY(this.getDataset().data[index], index, this.index, this.chart.isCombo),\r\n\t\t\t\t// Appearance\r\n\t\t\t\tradius: point.custom && point.custom.radius ? point.custom.radius : helpers.getValueAtIndexOrDefault(this.getDataset().pointRadius, index, this.chart.options.elements.point.radius),\r\n\t\t\t\tpointStyle: point.custom && point.custom.pointStyle ? point.custom.pointStyle : helpers.getValueAtIndexOrDefault(this.getDataset().pointStyle, index, this.chart.options.elements.point.pointStyle),\r\n\t\t\t\tbackgroundColor: this.getPointBackgroundColor(point, index),\r\n\t\t\t\tborderColor: this.getPointBorderColor(point, index),\r\n\t\t\t\tborderWidth: this.getPointBorderWidth(point, index),\r\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n\t\t\t\t// Tooltip\r\n\t\t\t\thitRadius: point.custom && point.custom.hitRadius ? point.custom.hitRadius : helpers.getValueAtIndexOrDefault(this.getDataset().pointHitRadius, index, this.chart.options.elements.point.hitRadius)\r\n\t\t\t};\r\n\r\n\t\t\tpoint._model.skip = point.custom && point.custom.skip ? point.custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\r\n\t\t},\r\n\r\n\t\tcalculatePointY: function(value, index, datasetIndex, isCombo) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar xScale = this.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = this.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\r\n\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\tsumNeg = 0;\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar ds = this.chart.data.datasets[i];\r\n\t\t\t\t\tvar dsMeta = this.chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.type === 'line' && this.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\t// Update bezier control points\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\tvar controlPoints = helpers.splineCurve(\r\n\t\t\t\t\thelpers.previousItem(meta.data, index)._model,\r\n\t\t\t\t\tpoint._model,\r\n\t\t\t\t\thelpers.nextItem(meta.data, index)._model,\r\n\t\t\t\t\tmeta.dataset._model.tension\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\r\n\t\t\t\tpoint._model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, this.chart.chartArea.right), this.chart.chartArea.left);\r\n\t\t\t\tpoint._model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, this.chart.chartArea.bottom), this.chart.chartArea.top);\r\n\r\n\t\t\t\tpoint._model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, this.chart.chartArea.right), this.chart.chartArea.left);\r\n\t\t\t\tpoint._model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, this.chart.chartArea.bottom), this.chart.chartArea.top);\r\n\r\n\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\tpoint.pivot();\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\r\n\t\t\t// Transition Point Locations\r\n\t\t\thelpers.each(meta.data, function(point) {\r\n\t\t\t\tpoint.transition(easingDecimal);\r\n\t\t\t});\r\n\r\n\t\t\t// Transition and Draw the line\r\n\t\t\tif (this.chart.options.showLines)\r\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\r\n\t\t\t// Draw the points\r\n\t\t\thelpers.each(meta.data, function(point) {\r\n\t\t\t\tpoint.draw();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\r\n\t\t\tpoint._model.radius = point.custom && point.custom.hoverRadius ? point.custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tpoint._model.backgroundColor = point.custom && point.custom.hoverBackgroundColor ? point.custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(point._model.backgroundColor));\r\n\t\t\tpoint._model.borderColor = point.custom && point.custom.hoverBorderColor ? point.custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(point._model.borderColor));\r\n\t\t\tpoint._model.borderWidth = point.custom && point.custom.hoverBorderWidth ? point.custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, point._model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((this.getDataset().radius !== undefined) && (this.getDataset().pointRadius === undefined))\r\n\t\t\t{\r\n\t\t\t\tthis.getDataset().pointRadius = this.getDataset().radius;\r\n\t\t\t}\r\n\r\n\t\t\tpoint._model.radius = point.custom && point.custom.radius ? point.custom.radius : helpers.getValueAtIndexOrDefault(this.getDataset().pointRadius, index, this.chart.options.elements.point.radius);\r\n\t\t\tpoint._model.backgroundColor = this.getPointBackgroundColor(point, index);\r\n\t\t\tpoint._model.borderColor = this.getPointBorderColor(point, index);\r\n\t\t\tpoint._model.borderWidth = this.getPointBorderWidth(point, index);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],19:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.polarArea = {\r\n\r\n\t\tscale: {\r\n\t\t\ttype: \"radialLinear\",\r\n\t\t\tlineArc: true // so that lines are circular\r\n\t\t},\r\n\r\n\t\t//Boolean - Whether to animate the rotation of the chart\r\n\t\tanimation: {\r\n\t\t\tanimateRotate: true,\r\n\t\t\tanimateScale: true\r\n\t\t},\r\n\r\n\t\taspectRatio: 1,\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tif (chart.data.datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < chart.data.datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[0].backgroundColor[i] + '\">');\r\n\t\t\t\t\tif (chart.data.labels[i]) {\r\n\t\t\t\t\t\ttext.push(chart.data.labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</span></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join(\"\");\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar fill = arc.custom && arc.custom.backgroundColor ? arc.custom.backgroundColor : helpers.getValueAtIndexOrDefault(ds.backgroundColor, i, this.chart.options.elements.arc.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = arc.custom && arc.custom.borderColor ? arc.custom.borderColor : helpers.getValueAtIndexOrDefault(ds.borderColor, i, this.chart.options.elements.arc.borderColor);\r\n\t\t\t\t\t\t\tvar bw = arc.custom && arc.custom.borderWidth ? arc.custom.borderWidth : helpers.getValueAtIndexOrDefault(ds.borderWidth, i, this.chart.options.elements.arc.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\r\n\t\tlinkScales: function() {\r\n\t\t\t// no scales for doughnut\r\n\t\t},\r\n\r\n\t\taddElements: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\thelpers.each(this.getDataset().data, function(value, index) {\r\n\t\t\t\tmeta.data[index] = meta.data[index] || new Chart.elements.Arc({\r\n\t\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t\t_index: index\r\n\t\t\t\t});\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar arc = new Chart.elements.Arc({\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index\r\n\t\t\t});\r\n\r\n\t\t\t// Add to the points array and reset it\r\n\t\t\tthis.getMeta().data.splice(index, 0, arc);\r\n\t\t\tthis.updateElement(arc, index, true);\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar minSize = Math.min(this.chart.chartArea.right - this.chart.chartArea.left, this.chart.chartArea.bottom - this.chart.chartArea.top);\r\n\t\t\tthis.chart.outerRadius = Math.max((minSize - this.chart.options.elements.arc.borderWidth / 2) / 2, 0);\r\n\t\t\tthis.chart.innerRadius = Math.max(this.chart.options.cutoutPercentage ? (this.chart.outerRadius / 100) * (this.chart.options.cutoutPercentage) : 1, 0);\r\n\t\t\tthis.chart.radiusLength = (this.chart.outerRadius - this.chart.innerRadius) / this.chart.getVisibleDatasetCount();\r\n\r\n\t\t\tthis.outerRadius = this.chart.outerRadius - (this.chart.radiusLength * this.index);\r\n\t\t\tthis.innerRadius = this.outerRadius - this.chart.radiusLength;\r\n\r\n\t\t\tmeta.count = this.countVisibleElements();\r\n\r\n\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\tthis.updateElement(arc, index, reset);\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar circumference = this.calculateCircumference(this.getDataset().data[index]);\r\n\t\t\tvar centerX = (this.chart.chartArea.left + this.chart.chartArea.right) / 2;\r\n\t\t\tvar centerY = (this.chart.chartArea.top + this.chart.chartArea.bottom) / 2;\r\n\r\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\r\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\r\n\t\t\tvar visibleCount = 0;\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tfor (var i = 0; i < index; ++i) {\r\n\t\t\t\tif (!isNaN(this.getDataset().data[i]) && !meta.data[i].hidden) {\r\n\t\t\t\t\t++visibleCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar distance = arc.hidden? 0 : this.chart.scale.getDistanceFromCenterForValue(this.getDataset().data[index]);\r\n\t\t\tvar startAngle = (-0.5 * Math.PI) + (circumference * visibleCount);\r\n\t\t\tvar endAngle = startAngle + (arc.hidden? 0 : circumference);\r\n\r\n\t\t\tvar resetModel = {\r\n\t\t\t\tx: centerX,\r\n\t\t\t\ty: centerY,\r\n\t\t\t\tinnerRadius: 0,\r\n\t\t\t\touterRadius: this.chart.options.animation.animateScale ? 0 : this.chart.scale.getDistanceFromCenterForValue(this.getDataset().data[index]),\r\n\t\t\t\tstartAngle: this.chart.options.animation.animateRotate ? Math.PI * -0.5 : startAngle,\r\n\t\t\t\tendAngle: this.chart.options.animation.animateRotate ? Math.PI * -0.5 : endAngle,\r\n\r\n\t\t\t\tbackgroundColor: arc.custom && arc.custom.backgroundColor ? arc.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().backgroundColor, index, this.chart.options.elements.arc.backgroundColor),\r\n\t\t\t\tborderWidth: arc.custom && arc.custom.borderWidth ? arc.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().borderWidth, index, this.chart.options.elements.arc.borderWidth),\r\n\t\t\t\tborderColor: arc.custom && arc.custom.borderColor ? arc.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().borderColor, index, this.chart.options.elements.arc.borderColor),\r\n\r\n\t\t\t\tlabel: helpers.getValueAtIndexOrDefault(this.chart.data.labels, index, this.chart.data.labels[index])\r\n\t\t\t};\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: this.chart.scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: reset ? resetModel : {\r\n\t\t\t\t\tx: centerX,\r\n\t\t\t\t\ty: centerY,\r\n\t\t\t\t\tinnerRadius: 0,\r\n\t\t\t\t\touterRadius: distance,\r\n\t\t\t\t\tstartAngle: startAngle,\r\n\t\t\t\t\tendAngle: endAngle,\r\n\r\n\t\t\t\t\tbackgroundColor: arc.custom && arc.custom.backgroundColor ? arc.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().backgroundColor, index, this.chart.options.elements.arc.backgroundColor),\r\n\t\t\t\t\tborderWidth: arc.custom && arc.custom.borderWidth ? arc.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().borderWidth, index, this.chart.options.elements.arc.borderWidth),\r\n\t\t\t\t\tborderColor: arc.custom && arc.custom.borderColor ? arc.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().borderColor, index, this.chart.options.elements.arc.borderColor),\r\n\r\n\t\t\t\t\tlabel: helpers.getValueAtIndexOrDefault(this.chart.data.labels, index, this.chart.data.labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\thelpers.each(this.getMeta().data, function(arc, index) {\r\n\t\t\t\tarc.transition(easingDecimal).draw();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(arc) {\r\n\t\t\tvar dataset = this.chart.data.datasets[arc._datasetIndex];\r\n\t\t\tvar index = arc._index;\r\n\r\n\t\t\tarc._model.backgroundColor = arc.custom && arc.custom.hoverBackgroundColor ? arc.custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(arc._model.backgroundColor));\r\n\t\t\tarc._model.borderColor = arc.custom && arc.custom.hoverBorderColor ? arc.custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(arc._model.borderColor));\r\n\t\t\tarc._model.borderWidth = arc.custom && arc.custom.hoverBorderWidth ? arc.custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, arc._model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tvar dataset = this.chart.data.datasets[arc._datasetIndex];\r\n\t\t\tvar index = arc._index;\r\n\r\n\t\t\tarc._model.backgroundColor = arc.custom && arc.custom.backgroundColor ? arc.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().backgroundColor, index, this.chart.options.elements.arc.backgroundColor);\r\n\t\t\tarc._model.borderColor = arc.custom && arc.custom.borderColor ? arc.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().borderColor, index, this.chart.options.elements.arc.borderColor);\r\n\t\t\tarc._model.borderWidth = arc.custom && arc.custom.borderWidth ? arc.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().borderWidth, index, this.chart.options.elements.arc.borderWidth);\r\n\t\t},\r\n\r\n\t\tcountVisibleElements: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar count = this.getMeta().count;\r\n\t\t\tif (count > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (2 * Math.PI) / count;\r\n\t\t\t} else {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],20:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\r\n\tChart.defaults.radar = {\r\n\t\tscale: {\r\n\t\t\ttype: \"radialLinear\"\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tline: {\r\n\t\t\t\ttension: 0 // no bezier in radar\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.radar = Chart.DatasetController.extend({\r\n\t\tlinkScales: function() {\r\n\t\t\t// No need. Single scale only\r\n\t\t},\r\n\r\n\t\taddElements: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\r\n\t\t\tmeta.dataset = meta.dataset || new Chart.elements.Line({\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_points: meta.data,\r\n\t\t\t\t_loop: true\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(this.getDataset().data, function(value, index) {\r\n\t\t\t\tmeta.data[index] = meta.data[index] || new Chart.elements.Point({\r\n\t\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t\t_index: index,\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: 0, //xScale.getPixelForValue(null, index, true),\r\n\t\t\t\t\t\ty: 0 //this.chartArea.bottom,\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}, this);\r\n\t\t},\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar point = new Chart.elements.Point({\r\n\t\t\t\t_chart: this.chart.chart,\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index\r\n\t\t\t});\r\n\r\n\t\t\t// Add to the points array and reset it\r\n\t\t\tthis.getMeta().data.splice(index, 0, point);\r\n\t\t\tthis.updateElement(point, index, true);\r\n\r\n\t\t\t// Make sure bezier control points are updated\r\n\t\t\tthis.updateBezierControlPoints();\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data;\r\n\r\n\t\t\tvar scale = this.chart.scale;\r\n\t\t\tvar scaleBase;\r\n\r\n\t\t\tif (scale.min < 0 && scale.max < 0) {\r\n\t\t\t\tscaleBase = scale.getPointPositionForValue(0, scale.max);\r\n\t\t\t} else if (scale.min > 0 && scale.max > 0) {\r\n\t\t\t\tscaleBase = scale.getPointPositionForValue(0, scale.min);\r\n\t\t\t} else {\r\n\t\t\t\tscaleBase = scale.getPointPositionForValue(0, 0);\r\n\t\t\t}\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((this.getDataset().tension !== undefined) && (this.getDataset().lineTension === undefined))\r\n\t\t\t{\r\n\t\t\t\tthis.getDataset().lineTension = this.getDataset().tension;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.extend(meta.dataset, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t// Data\r\n\t\t\t\t_children: points,\r\n\t\t\t\t// Model\r\n\t\t\t\t_model: {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: line.custom && line.custom.tension ? line.custom.tension : helpers.getValueOrDefault(this.getDataset().lineTension, this.chart.options.elements.line.tension),\r\n\t\t\t\t\tbackgroundColor: line.custom && line.custom.backgroundColor ? line.custom.backgroundColor : (this.getDataset().backgroundColor || this.chart.options.elements.line.backgroundColor),\r\n\t\t\t\t\tborderWidth: line.custom && line.custom.borderWidth ? line.custom.borderWidth : (this.getDataset().borderWidth || this.chart.options.elements.line.borderWidth),\r\n\t\t\t\t\tborderColor: line.custom && line.custom.borderColor ? line.custom.borderColor : (this.getDataset().borderColor || this.chart.options.elements.line.borderColor),\r\n\t\t\t\t\tfill: line.custom && line.custom.fill ? line.custom.fill : (this.getDataset().fill !== undefined ? this.getDataset().fill : this.chart.options.elements.line.fill),\r\n\t\t\t\t\tborderCapStyle: line.custom && line.custom.borderCapStyle ? line.custom.borderCapStyle : (this.getDataset().borderCapStyle || this.chart.options.elements.line.borderCapStyle),\r\n\t\t\t\t\tborderDash: line.custom && line.custom.borderDash ? line.custom.borderDash : (this.getDataset().borderDash || this.chart.options.elements.line.borderDash),\r\n\t\t\t\t\tborderDashOffset: line.custom && line.custom.borderDashOffset ? line.custom.borderDashOffset : (this.getDataset().borderDashOffset || this.chart.options.elements.line.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: line.custom && line.custom.borderJoinStyle ? line.custom.borderJoinStyle : (this.getDataset().borderJoinStyle || this.chart.options.elements.line.borderJoinStyle),\r\n\r\n\t\t\t\t\t// Scale\r\n\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\tscaleZero: scaleBase\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tmeta.dataset.pivot();\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tthis.updateElement(point, index, reset);\r\n\t\t\t}, this);\r\n\r\n\r\n\t\t\t// Update bezier control points\r\n\t\t\tthis.updateBezierControlPoints();\r\n\t\t},\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar pointPosition = this.chart.scale.getPointPositionForValue(index, this.getDataset().data[index]);\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: this.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: this.chart.scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? this.chart.scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\r\n\t\t\t\t\ty: reset ? this.chart.scale.yCenter : pointPosition.y,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: point.custom && point.custom.tension ? point.custom.tension : helpers.getValueOrDefault(this.getDataset().tension, this.chart.options.elements.line.tension),\r\n\t\t\t\t\tradius: point.custom && point.custom.radius ? point.custom.radius : helpers.getValueAtIndexOrDefault(this.getDataset().pointRadius, index, this.chart.options.elements.point.radius),\r\n\t\t\t\t\tbackgroundColor: point.custom && point.custom.backgroundColor ? point.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().pointBackgroundColor, index, this.chart.options.elements.point.backgroundColor),\r\n\t\t\t\t\tborderColor: point.custom && point.custom.borderColor ? point.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().pointBorderColor, index, this.chart.options.elements.point.borderColor),\r\n\t\t\t\t\tborderWidth: point.custom && point.custom.borderWidth ? point.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().pointBorderWidth, index, this.chart.options.elements.point.borderWidth),\r\n\t\t\t\t\tpointStyle: point.custom && point.custom.pointStyle ? point.custom.pointStyle : helpers.getValueAtIndexOrDefault(this.getDataset().pointStyle, index, this.chart.options.elements.point.pointStyle),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: point.custom && point.custom.hitRadius ? point.custom.hitRadius : helpers.getValueAtIndexOrDefault(this.getDataset().hitRadius, index, this.chart.options.elements.point.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tpoint._model.skip = point.custom && point.custom.skip ? point.custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\r\n\t\t},\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\tvar controlPoints = helpers.splineCurve(\r\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\r\n\t\t\t\t\tpoint._model,\r\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\r\n\t\t\t\t\tpoint._model.tension\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\r\n\t\t\t\tpoint._model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, this.chart.chartArea.right), this.chart.chartArea.left);\r\n\t\t\t\tpoint._model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, this.chart.chartArea.bottom), this.chart.chartArea.top);\r\n\r\n\t\t\t\tpoint._model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, this.chart.chartArea.right), this.chart.chartArea.left);\r\n\t\t\t\tpoint._model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, this.chart.chartArea.bottom), this.chart.chartArea.top);\r\n\r\n\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\tpoint.pivot();\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\r\n\t\t\t// Transition Point Locations\r\n\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\tpoint.transition(easingDecimal);\r\n\t\t\t});\r\n\r\n\t\t\t// Transition and Draw the line\r\n\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\r\n\t\t\t// Draw the points\r\n\t\t\thelpers.each(meta.data, function(point) {\r\n\t\t\t\tpoint.draw();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\r\n\t\t\tpoint._model.radius = point.custom && point.custom.hoverRadius ? point.custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tpoint._model.backgroundColor = point.custom && point.custom.hoverBackgroundColor ? point.custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(point._model.backgroundColor));\r\n\t\t\tpoint._model.borderColor = point.custom && point.custom.hoverBorderColor ? point.custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(point._model.borderColor));\r\n\t\t\tpoint._model.borderWidth = point.custom && point.custom.hoverBorderWidth ? point.custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, point._model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\r\n\t\t\tpoint._model.radius = point.custom && point.custom.radius ? point.custom.radius : helpers.getValueAtIndexOrDefault(this.getDataset().radius, index, this.chart.options.elements.point.radius);\r\n\t\t\tpoint._model.backgroundColor = point.custom && point.custom.backgroundColor ? point.custom.backgroundColor : helpers.getValueAtIndexOrDefault(this.getDataset().pointBackgroundColor, index, this.chart.options.elements.point.backgroundColor);\r\n\t\t\tpoint._model.borderColor = point.custom && point.custom.borderColor ? point.custom.borderColor : helpers.getValueAtIndexOrDefault(this.getDataset().pointBorderColor, index, this.chart.options.elements.point.borderColor);\r\n\t\t\tpoint._model.borderWidth = point.custom && point.custom.borderWidth ? point.custom.borderWidth : helpers.getValueAtIndexOrDefault(this.getDataset().pointBorderWidth, index, this.chart.options.elements.point.borderWidth);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],21:[function(require,module,exports){\n/*global window: false */\r\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.animation = {\r\n\t\tduration: 1000,\r\n\t\teasing: \"easeOutQuart\",\r\n\t\tonProgress: helpers.noop,\r\n\t\tonComplete: helpers.noop\r\n\t};\r\n\r\n\tChart.Animation = Chart.Element.extend({\r\n\t\tcurrentStep: null, // the current animation step\r\n\t\tnumSteps: 60, // default number of steps\r\n\t\teasing: \"\", // the easing to use for this animation\r\n\t\trender: null, // render function used by the animation service\r\n\r\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\r\n\t});\r\n\r\n\tChart.animationService = {\r\n\t\tframeDuration: 17,\r\n\t\tanimations: [],\r\n\t\tdropFrames: 0,\r\n\t\trequest: null,\r\n\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\r\n\r\n\t\t\tif (!lazy) {\r\n\t\t\t\tchartInstance.animating = true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var index = 0; index < this.animations.length; ++index) {\r\n\t\t\t\tif (this.animations[index].chartInstance === chartInstance) {\r\n\t\t\t\t\t// replacing an in progress animation\r\n\t\t\t\t\tthis.animations[index].animationObject = animationObject;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.animations.push({\r\n\t\t\t\tchartInstance: chartInstance,\r\n\t\t\t\tanimationObject: animationObject\r\n\t\t\t});\r\n\r\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n\t\t\tif (this.animations.length === 1) {\r\n\t\t\t\tthis.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Cancel the animation for a given chart instance\r\n\t\tcancelAnimation: function(chartInstance) {\r\n\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\r\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\r\n\t\t\t});\r\n\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tthis.animations.splice(index, 1);\r\n\t\t\t\tchartInstance.animating = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\trequestAnimationFrame: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.request === null) {\r\n\t\t\t\t// Skip animation frame requests until the active one is executed.\r\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\r\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\r\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\r\n\t\t\t\t\tme.request = null;\r\n\t\t\t\t\tme.startDigest();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tstartDigest: function() {\r\n\r\n\t\t\tvar startTime = Date.now();\r\n\t\t\tvar framesToDrop = 0;\r\n\r\n\t\t\tif (this.dropFrames > 1) {\r\n\t\t\t\tframesToDrop = Math.floor(this.dropFrames);\r\n\t\t\t\tthis.dropFrames = this.dropFrames % 1;\r\n\t\t\t}\r\n\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (i < this.animations.length) {\r\n\t\t\t\tif (this.animations[i].animationObject.currentStep === null) {\r\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.animations[i].animationObject.currentStep += 1 + framesToDrop;\r\n\r\n\t\t\t\tif (this.animations[i].animationObject.currentStep > this.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = this.animations[i].animationObject.numSteps;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.animations[i].animationObject.render(this.animations[i].chartInstance, this.animations[i].animationObject);\r\n\t\t\t\tif (this.animations[i].animationObject.onAnimationProgress && this.animations[i].animationObject.onAnimationProgress.call) {\r\n\t\t\t\t\tthis.animations[i].animationObject.onAnimationProgress.call(this.animations[i].chartInstance, this.animations[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.animations[i].animationObject.currentStep === this.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\tif (this.animations[i].animationObject.onAnimationComplete && this.animations[i].animationObject.onAnimationComplete.call) {\r\n\t\t\t\t\t\tthis.animations[i].animationObject.onAnimationComplete.call(this.animations[i].chartInstance, this.animations[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// executed the last frame. Remove the animation.\r\n\t\t\t\t\tthis.animations[i].chartInstance.animating = false;\r\n\r\n\t\t\t\t\tthis.animations.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar endTime = Date.now();\r\n\t\t\tvar dropFrames = (endTime - startTime) / this.frameDuration;\r\n\r\n\t\t\tthis.dropFrames += dropFrames;\r\n\r\n\t\t\t// Do we have more stuff to animate?\r\n\t\t\tif (this.animations.length > 0) {\r\n\t\t\t\tthis.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\n},{}],22:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\t//Create a dictionary of chart types, to allow for extension of existing types\r\n\tChart.types = {};\r\n\r\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\r\n\tChart.instances = {};\r\n\r\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n\tChart.controllers = {};\r\n\r\n\t// The main controller of a chart\r\n\tChart.Controller = function(instance) {\r\n\r\n\t\tthis.chart = instance;\r\n\t\tthis.config = instance.config;\r\n\t\tthis.options = this.config.options = helpers.configMerge(Chart.defaults.global, Chart.defaults[this.config.type], this.config.options || {});\r\n\t\tthis.id = helpers.uid();\r\n\r\n\t\tObject.defineProperty(this, 'data', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this.config.data;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//Add the chart instance to the global namespace\r\n\t\tChart.instances[this.id] = this;\r\n\r\n\t\tif (this.options.responsive) {\r\n\t\t\t// Silent resize before chart draws\r\n\t\t\tthis.resize(true);\r\n\t\t}\r\n\r\n\t\tthis.initialize();\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\thelpers.extend(Chart.Controller.prototype, {\r\n\r\n\t\tinitialize: function initialize() {\r\n\t\t\t// Before init plugin notification\r\n\t\t\tChart.pluginService.notifyPlugins('beforeInit', [this]);\r\n\r\n\t\t\tthis.bindEvents();\r\n\r\n\t\t\t// Make sure controllers are built first so that each dataset is bound to an axis before the scales\r\n\t\t\t// are built\r\n\t\t\tthis.ensureScalesHaveIDs();\r\n\t\t\tthis.buildOrUpdateControllers();\r\n\t\t\tthis.buildScales();\r\n\t\t\tthis.buildSurroundingItems();\r\n\t\t\tthis.updateLayout();\r\n\t\t\tthis.resetElements();\r\n\t\t\tthis.initToolTip();\r\n\t\t\tthis.update();\r\n\r\n\t\t\t// After init plugin notification\r\n\t\t\tChart.pluginService.notifyPlugins('afterInit', [this]);\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tclear: function clear() {\r\n\t\t\thelpers.clear(this.chart);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tstop: function stop() {\r\n\t\t\t// Stops any current animation loop occuring\r\n\t\t\tChart.animationService.cancelAnimation(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tresize: function resize(silent) {\r\n\t\t\tvar canvas = this.chart.canvas;\r\n\t\t\tvar newWidth = helpers.getMaximumWidth(this.chart.canvas);\r\n\t\t\tvar newHeight = (this.options.maintainAspectRatio && isNaN(this.chart.aspectRatio) === false && isFinite(this.chart.aspectRatio) && this.chart.aspectRatio !== 0) ? newWidth / this.chart.aspectRatio : helpers.getMaximumHeight(this.chart.canvas);\r\n\r\n\t\t\tvar sizeChanged = this.chart.width !== newWidth || this.chart.height !== newHeight;\r\n\r\n\t\t\tif (!sizeChanged)\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tcanvas.width = this.chart.width = newWidth;\r\n\t\t\tcanvas.height = this.chart.height = newHeight;\r\n\r\n\t\t\thelpers.retinaScale(this.chart);\r\n\r\n\t\t\tif (!silent) {\r\n\t\t\t\tthis.stop();\r\n\t\t\t\tthis.update(this.options.responsiveAnimationDuration);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tensureScalesHaveIDs: function ensureScalesHaveIDs() {\r\n\t\t\tvar defaultXAxisID = 'x-axis-';\r\n\t\t\tvar defaultYAxisID = 'y-axis-';\r\n\r\n\t\t\tif (this.options.scales) {\r\n\t\t\t\tif (this.options.scales.xAxes && this.options.scales.xAxes.length) {\r\n\t\t\t\t\thelpers.each(this.options.scales.xAxes, function(xAxisOptions, index) {\r\n\t\t\t\t\t\txAxisOptions.id = xAxisOptions.id || (defaultXAxisID + index);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.options.scales.yAxes && this.options.scales.yAxes.length) {\r\n\t\t\t\t\t// Build the y axes\r\n\t\t\t\t\thelpers.each(this.options.scales.yAxes, function(yAxisOptions, index) {\r\n\t\t\t\t\t\tyAxisOptions.id = yAxisOptions.id || (defaultYAxisID + index);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildScales: function buildScales() {\r\n\t\t\t// Map of scale ID to scale object so we can lookup later\r\n\t\t\tthis.scales = {};\r\n\r\n\t\t\t// Build the x axes\r\n\t\t\tif (this.options.scales) {\r\n\t\t\t\tif (this.options.scales.xAxes && this.options.scales.xAxes.length) {\r\n\t\t\t\t\thelpers.each(this.options.scales.xAxes, function(xAxisOptions, index) {\r\n\t\t\t\t\t\tvar xType = helpers.getValueOrDefault(xAxisOptions.type, 'category');\r\n\t\t\t\t\t\tvar ScaleClass = Chart.scaleService.getScaleConstructor(xType);\r\n\t\t\t\t\t\tif (ScaleClass) {\r\n\t\t\t\t\t\t\tvar scale = new ScaleClass({\r\n\t\t\t\t\t\t\t\tctx: this.chart.ctx,\r\n\t\t\t\t\t\t\t\toptions: xAxisOptions,\r\n\t\t\t\t\t\t\t\tchart: this,\r\n\t\t\t\t\t\t\t\tid: xAxisOptions.id\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tthis.scales[scale.id] = scale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.options.scales.yAxes && this.options.scales.yAxes.length) {\r\n\t\t\t\t\t// Build the y axes\r\n\t\t\t\t\thelpers.each(this.options.scales.yAxes, function(yAxisOptions, index) {\r\n\t\t\t\t\t\tvar yType = helpers.getValueOrDefault(yAxisOptions.type, 'linear');\r\n\t\t\t\t\t\tvar ScaleClass = Chart.scaleService.getScaleConstructor(yType);\r\n\t\t\t\t\t\tif (ScaleClass) {\r\n\t\t\t\t\t\t\tvar scale = new ScaleClass({\r\n\t\t\t\t\t\t\t\tctx: this.chart.ctx,\r\n\t\t\t\t\t\t\t\toptions: yAxisOptions,\r\n\t\t\t\t\t\t\t\tchart: this,\r\n\t\t\t\t\t\t\t\tid: yAxisOptions.id\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tthis.scales[scale.id] = scale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.options.scale) {\r\n\t\t\t\t// Build radial axes\r\n\t\t\t\tvar ScaleClass = Chart.scaleService.getScaleConstructor(this.options.scale.type);\r\n\t\t\t\tif (ScaleClass) {\r\n\t\t\t\t\tvar scale = new ScaleClass({\r\n\t\t\t\t\t\tctx: this.chart.ctx,\r\n\t\t\t\t\t\toptions: this.options.scale,\r\n\t\t\t\t\t\tchart: this\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis.scale = scale;\r\n\r\n\t\t\t\t\tthis.scales.radialScale = scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tChart.scaleService.addScalesToLayout(this);\r\n\t\t},\r\n\r\n\t\tbuildSurroundingItems: function() {\r\n\t\t\tif (this.options.title) {\r\n\t\t\t\tthis.titleBlock = new Chart.Title({\r\n\t\t\t\t\tctx: this.chart.ctx,\r\n\t\t\t\t\toptions: this.options.title,\r\n\t\t\t\t\tchart: this\r\n\t\t\t\t});\r\n\r\n\t\t\t\tChart.layoutService.addBox(this, this.titleBlock);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.legend) {\r\n\t\t\t\tthis.legend = new Chart.Legend({\r\n\t\t\t\t\tctx: this.chart.ctx,\r\n\t\t\t\t\toptions: this.options.legend,\r\n\t\t\t\t\tchart: this\r\n\t\t\t\t});\r\n\r\n\t\t\t\tChart.layoutService.addBox(this, this.legend);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateLayout: function() {\r\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateControllers: function buildOrUpdateControllers() {\r\n\t\t\tvar types = [];\r\n\t\t\tvar newControllers = [];\r\n\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (!meta.type) {\r\n\t\t\t\t\tmeta.type = dataset.type || this.config.type;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttypes.push(meta.type);\r\n\r\n\t\t\t\tif (meta.controller) {\r\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](this, datasetIndex);\r\n\t\t\t\t\tnewControllers.push(meta.controller);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\tif (types.length > 1) {\r\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\r\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\r\n\t\t\t\t\t\tthis.isCombo = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn newControllers;\r\n\t\t},\r\n\r\n\t\tresetElements: function resetElements() {\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.reset();\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tupdate: function update(animationDuration, lazy) {\r\n\t\t\tChart.pluginService.notifyPlugins('beforeUpdate', [this]);\r\n\r\n\t\t\t// In case the entire data object changed\r\n\t\t\tthis.tooltip._data = this.data;\r\n\r\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\r\n\t\t\tvar newControllers = this.buildOrUpdateControllers();\r\n\r\n\t\t\t// Make sure all dataset controllers have correct meta data counts\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n\t\t\t}, this);\r\n\r\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\r\n\r\n\t\t\t// Apply changes to the dataets that require the scales to have been calculated i.e BorderColor chages\r\n\t\t\tChart.pluginService.notifyPlugins('afterScaleUpdate', [this]);\r\n\r\n\t\t\t// Can only reset the new controllers after the scales have been updated\r\n\t\t\thelpers.each(newControllers, function(controller) {\r\n\t\t\t\tcontroller.reset();\r\n\t\t\t});\r\n\r\n\t\t\t// This will loop through any data and do the appropriate element update for the type\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.update();\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\r\n\t\t\tChart.pluginService.notifyPlugins('afterUpdate', [this]);\r\n\r\n\t\t\tthis.render(animationDuration, lazy);\r\n\t\t},\r\n\r\n\t\trender: function render(duration, lazy) {\r\n\t\t\tChart.pluginService.notifyPlugins('beforeRender', [this]);\r\n\r\n\t\t\tif (this.options.animation && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && this.options.animation.duration !== 0))) {\r\n\t\t\t\tvar animation = new Chart.Animation();\r\n\t\t\t\tanimation.numSteps = (duration || this.options.animation.duration) / 16.66; //60 fps\r\n\t\t\t\tanimation.easing = this.options.animation.easing;\r\n\r\n\t\t\t\t// render function\r\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\r\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\r\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\r\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\r\n\r\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// user events\r\n\t\t\t\tanimation.onAnimationProgress = this.options.animation.onProgress;\r\n\t\t\t\tanimation.onAnimationComplete = this.options.animation.onComplete;\r\n\r\n\t\t\t\tChart.animationService.addAnimation(this, animation, duration, lazy);\r\n\t\t\t} else {\r\n\t\t\t\tthis.draw();\r\n\t\t\t\tif (this.options.animation && this.options.animation.onComplete && this.options.animation.onComplete.call) {\r\n\t\t\t\t\tthis.options.animation.onComplete.call(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\tthis.clear();\r\n\r\n\t\t\tChart.pluginService.notifyPlugins('beforeDraw', [this, easingDecimal]);\r\n\r\n\t\t\t// Draw all the scales\r\n\t\t\thelpers.each(this.boxes, function(box) {\r\n\t\t\t\tbox.draw(this.chartArea);\r\n\t\t\t}, this);\r\n\t\t\tif (this.scale) {\r\n\t\t\t\tthis.scale.draw();\r\n\t\t\t}\r\n\r\n\t\t\t// Clip out the chart area so that anything outside does not draw. This is necessary for zoom and pan to function\r\n\t\t\tthis.chart.ctx.save();\r\n\t\t\tthis.chart.ctx.beginPath();\r\n\t\t\tthis.chart.ctx.rect(this.chartArea.left, this.chartArea.top, this.chartArea.right - this.chartArea.left, this.chartArea.bottom - this.chartArea.top);\r\n\t\t\tthis.chart.ctx.clip();\r\n\r\n\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (this.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tthis.getDatasetMeta(datasetIndex).controller.draw(ease);\r\n\t\t\t\t}\r\n\t\t\t}, this, true);\r\n\r\n\t\t\t// Restore from the clipping operation\r\n\t\t\tthis.chart.ctx.restore();\r\n\r\n\t\t\t// Finally draw the tooltip\r\n\t\t\tthis.tooltip.transition(easingDecimal).draw();\r\n\r\n\t\t\tChart.pluginService.notifyPlugins('afterDraw', [this, easingDecimal]);\r\n\t\t},\r\n\r\n\t\t// Get the single element that was clicked on\r\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n\t\tgetElementAtEvent: function(e) {\r\n\t\t\tvar eventPosition = helpers.getRelativePosition(e, this.chart);\r\n\t\t\tvar elementsArray = [];\r\n\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (this.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\t\t\tif (element.inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\telementsArray.push(element);\r\n\t\t\t\t\t\t\treturn elementsArray;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetElementsAtEvent: function(e) {\r\n\t\t\tvar eventPosition = helpers.getRelativePosition(e, this.chart);\r\n\t\t\tvar elementsArray = [];\r\n\r\n\t\t\tvar found = (function() {\r\n\t\t\t\tif (this.data.datasets) {\r\n\t\t\t\t\tfor (var i = 0; i < this.data.datasets.length; i++) {\r\n\t\t\t\t\t\tvar meta = this.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (this.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tfor (var j = 0; j < meta.data.length; j++) {\r\n\t\t\t\t\t\t\t\tif (meta.data[j].inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\t\t\treturn meta.data[j];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).call(this);\r\n\r\n\t\t\tif (!found) {\r\n\t\t\t\treturn elementsArray;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(this.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (this.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\telementsArray.push(meta.data[found._index]);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetDatasetAtEvent: function(e) {\r\n\t\t\tvar elementsArray = this.getElementAtEvent(e);\r\n\r\n\t\t\tif (elementsArray.length > 0) {\r\n\t\t\t\telementsArray = this.getDatasetMeta(elementsArray[0]._datasetIndex).data;\r\n\t\t\t}\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetDatasetMeta: function(datasetIndex) {\r\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\r\n\t\t\tif (!dataset._meta) {\r\n\t\t\t\tdataset._meta = {};\r\n\t\t\t}\r\n\r\n\t\t\tvar meta = dataset._meta[this.id];\r\n\t\t\tif (!meta) {\r\n\t\t\t\tmeta = dataset._meta[this.id] = {\r\n\t\t\t\ttype: null,\r\n\t\t\t\tdata: [],\r\n\t\t\t\tdataset: null,\r\n\t\t\t\tcontroller: null,\r\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\r\n\t\t\t\txAxisID: null,\r\n\t\t\t\tyAxisID: null\r\n\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn meta;\r\n\t\t},\r\n\r\n\t\tgetVisibleDatasetCount: function() {\r\n\t\t\tvar count = 0;\r\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\r\n\t\t\t\t if (this.isDatasetVisible(i)) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tisDatasetVisible: function(datasetIndex) {\r\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\r\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n\t\t},\r\n\r\n\t\tgenerateLegend: function generateLegend() {\r\n\t\t\treturn this.options.legendCallback(this);\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy() {\r\n\t\t\tthis.clear();\r\n\t\t\thelpers.unbindEvents(this, this.events);\r\n\t\t\thelpers.removeResizeListener(this.chart.canvas.parentNode);\r\n\r\n\t\t\t// Reset canvas height/width attributes\r\n\t\t\tvar canvas = this.chart.canvas;\r\n\t\t\tcanvas.width = this.chart.width;\r\n\t\t\tcanvas.height = this.chart.height;\r\n\r\n\t\t\t// if we scaled the canvas in response to a devicePixelRatio !== 1, we need to undo that transform here\r\n\t\t\tif (this.chart.originalDevicePixelRatio !== undefined) {\r\n\t\t\t\tthis.chart.ctx.scale(1 / this.chart.originalDevicePixelRatio, 1 / this.chart.originalDevicePixelRatio);\r\n\t\t\t}\r\n\r\n\t\t\t// Reset to the old style since it may have been changed by the device pixel ratio changes\r\n\t\t\tcanvas.style.width = this.chart.originalCanvasStyleWidth;\r\n\t\t\tcanvas.style.height = this.chart.originalCanvasStyleHeight;\r\n\r\n\t\t\tChart.pluginService.notifyPlugins('destroy', [this]);\r\n\r\n\t\t\tdelete Chart.instances[this.id];\r\n\t\t},\r\n\r\n\t\ttoBase64Image: function toBase64Image() {\r\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\r\n\t\t},\r\n\r\n\t\tinitToolTip: function initToolTip() {\r\n\t\t\tthis.tooltip = new Chart.Tooltip({\r\n\t\t\t\t_chart: this.chart,\r\n\t\t\t\t_chartInstance: this,\r\n\t\t\t\t_data: this.data,\r\n\t\t\t\t_options: this.options\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tbindEvents: function bindEvents() {\r\n\t\t\thelpers.bindEvents(this, this.options.events, function(evt) {\r\n\t\t\t\tthis.eventHandler(evt);\r\n\t\t\t});\r\n\t\t},\r\n\t\teventHandler: function eventHandler(e) {\r\n\t\t\tthis.lastActive = this.lastActive || [];\r\n\t\t\tthis.lastTooltipActive = this.lastTooltipActive || [];\r\n\r\n\t\t\t// Find Active Elements for hover and tooltips\r\n\t\t\tif (e.type === 'mouseout') {\r\n\t\t\t\tthis.active = [];\r\n\t\t\t\tthis.tooltipActive = [];\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tvar getItemsForMode = function(mode) {\r\n\t\t\t\t\tswitch (mode) {\r\n\t\t\t\t\t\tcase 'single':\r\n\t\t\t\t\t\t\treturn _this.getElementAtEvent(e);\r\n\t\t\t\t\t\tcase 'label':\r\n\t\t\t\t\t\t\treturn _this.getElementsAtEvent(e);\r\n\t\t\t\t\t\tcase 'dataset':\r\n\t\t\t\t\t\t\treturn _this.getDatasetAtEvent(e);\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\treturn e;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.active = getItemsForMode(this.options.hover.mode);\r\n\t\t\t\tthis.tooltipActive = getItemsForMode(this.options.tooltips.mode);\r\n\t\t\t}\r\n\r\n\t\t\t// On Hover hook\r\n\t\t\tif (this.options.hover.onHover) {\r\n\t\t\t\tthis.options.hover.onHover.call(this, this.active);\r\n\t\t\t}\r\n\r\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\r\n\t\t\t\tif (this.options.onClick) {\r\n\t\t\t\t\tthis.options.onClick.call(this, e, this.active);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.legend && this.legend.handleEvent) {\r\n\t\t\t\t\tthis.legend.handleEvent(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove styling for last active (even if it may still be active)\r\n\t\t\tif (this.lastActive.length) {\r\n\t\t\t\tswitch (this.options.hover.mode) {\r\n\t\t\t\t\tcase 'single':\r\n\t\t\t\t\t\tthis.getDatasetMeta(this.lastActive[0]._datasetIndex).controller.removeHoverStyle(this.lastActive[0], this.lastActive[0]._datasetIndex, this.lastActive[0]._index);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'label':\r\n\t\t\t\t\tcase 'dataset':\r\n\t\t\t\t\t\tfor (var i = 0; i < this.lastActive.length; i++) {\r\n\t\t\t\t\t\t\tif (this.lastActive[i])\r\n\t\t\t\t\t\t\t\tthis.getDatasetMeta(this.lastActive[i]._datasetIndex).controller.removeHoverStyle(this.lastActive[i], this.lastActive[i]._datasetIndex, this.lastActive[i]._index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// Don't change anything\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Built in hover styling\r\n\t\t\tif (this.active.length && this.options.hover.mode) {\r\n\t\t\t\tswitch (this.options.hover.mode) {\r\n\t\t\t\t\tcase 'single':\r\n\t\t\t\t\t\tthis.getDatasetMeta(this.active[0]._datasetIndex).controller.setHoverStyle(this.active[0]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'label':\r\n\t\t\t\t\tcase 'dataset':\r\n\t\t\t\t\t\tfor (var j = 0; j < this.active.length; j++) {\r\n\t\t\t\t\t\t\tif (this.active[j])\r\n\t\t\t\t\t\t\t\tthis.getDatasetMeta(this.active[j]._datasetIndex).controller.setHoverStyle(this.active[j]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// Don't change anything\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Built in Tooltips\r\n\t\t\tif (this.options.tooltips.enabled || this.options.tooltips.custom) {\r\n\r\n\t\t\t\t// The usual updates\r\n\t\t\t\tthis.tooltip.initialize();\r\n\t\t\t\tthis.tooltip._active = this.tooltipActive;\r\n\t\t\t\tthis.tooltip.update(true);\r\n\t\t\t}\r\n\r\n\t\t\t// Hover animations\r\n\t\t\tthis.tooltip.pivot();\r\n\r\n\t\t\tif (!this.animating) {\r\n\t\t\t\tvar changed;\r\n\r\n\t\t\t\thelpers.each(this.active, function(element, index) {\r\n\t\t\t\t\tif (element !== this.lastActive[index]) {\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\thelpers.each(this.tooltipActive, function(element, index) {\r\n\t\t\t\t\tif (element !== this.lastTooltipActive[index]) {\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\r\n\t\t\t\tif ((this.lastActive.length !== this.active.length) ||\r\n\t\t\t\t\t(this.lastTooltipActive.length !== this.tooltipActive.length) ||\r\n\t\t\t\t\tchanged) {\r\n\r\n\t\t\t\t\tthis.stop();\r\n\r\n\t\t\t\t\tif (this.options.tooltips.enabled || this.options.tooltips.custom) {\r\n\t\t\t\t\t\tthis.tooltip.update(true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// We only need to render at this point. Updating will cause scales to be recomputed generating flicker & using more\r\n\t\t\t\t\t// memory than necessary.\r\n\t\t\t\t\tthis.render(this.options.hover.animationDuration, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remember Last Actives\r\n\t\t\tthis.lastActive = this.active;\r\n\t\t\tthis.lastTooltipActive = this.tooltipActive;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar noop = helpers.noop;\r\n\r\n\t// Base class for all dataset controllers (line, bar, etc)\r\n\tChart.DatasetController = function(chart, datasetIndex) {\r\n\t\tthis.initialize.call(this, chart, datasetIndex);\r\n\t};\r\n\r\n\thelpers.extend(Chart.DatasetController.prototype, {\r\n\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\tthis.chart = chart;\r\n\t\t\tthis.index = datasetIndex;\r\n\t\t\tthis.linkScales();\r\n\t\t\tthis.addElements();\r\n\t\t},\r\n\t\tupdateIndex: function(datasetIndex) {\r\n\t\t\tthis.index = datasetIndex;\r\n\t\t},\r\n\r\n\t\tlinkScales: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar dataset = this.getDataset();\r\n\r\n\t\t\tif (meta.xAxisID === null) {\r\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || this.chart.options.scales.xAxes[0].id;\r\n\t\t\t}\r\n\t\t\tif (meta.yAxisID === null) {\r\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || this.chart.options.scales.yAxes[0].id;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDataset: function() {\r\n\t\t\treturn this.chart.data.datasets[this.index];\r\n\t\t},\r\n\r\n\t\tgetMeta: function() {\r\n\t\t\treturn this.chart.getDatasetMeta(this.index);\r\n\t\t},\r\n\r\n\t\tgetScaleForId: function(scaleID) {\r\n\t\t\treturn this.chart.scales[scaleID];\r\n\t\t},\r\n\r\n\t\treset: function() {\r\n\t\t\tthis.update(true);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateElements: function buildOrUpdateElements() {\r\n\t\t\t// Handle the number of data points changing\r\n\t\t\tvar meta = this.getMeta(),\r\n\t\t\t\tmd = meta.data,\r\n\t\t\t\tnumData = this.getDataset().data.length,\r\n\t\t\t\tnumMetaData = md.length;\r\n\r\n\t\t\t// Make sure that we handle number of datapoints changing\r\n\t\t\tif (numData < numMetaData) {\r\n\t\t\t\t// Remove excess bars for data points that have been removed\r\n\t\t\t\tmd.splice(numData, numMetaData - numData);\r\n\t\t\t} else if (numData > numMetaData) {\r\n\t\t\t\t// Add new elements\r\n\t\t\t\tfor (var index = numMetaData; index < numData; ++index) {\r\n\t\t\t\t\tthis.addElementAndReset(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Controllers should implement the following\r\n\t\taddElements: noop,\r\n\t\taddElementAndReset: noop,\r\n\t\tdraw: noop,\r\n\t\tremoveHoverStyle: noop,\r\n\t\tsetHoverStyle: noop,\r\n\t\tupdate: noop\r\n\t});\r\n\r\n\tChart.DatasetController.extend = helpers.inherits;\r\n};\n},{}],24:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n  var helpers = Chart.helpers;\r\n\r\n  Chart.elements = {};\r\n\r\n  Chart.Element = function(configuration) {\r\n    helpers.extend(this, configuration);\r\n    this.initialize.apply(this, arguments);\r\n  };\r\n  helpers.extend(Chart.Element.prototype, {\r\n    initialize: function() {\r\n      this.hidden = false;\r\n    },\r\n    pivot: function() {\r\n      if (!this._view) {\r\n        this._view = helpers.clone(this._model);\r\n      }\r\n      this._start = helpers.clone(this._view);\r\n      return this;\r\n    },\r\n    transition: function(ease) {\r\n      if (!this._view) {\r\n        this._view = helpers.clone(this._model);\r\n      }\r\n\r\n      // No animation -> No Transition\r\n      if (ease === 1) {\r\n        this._view = this._model;\r\n        this._start = null;\r\n        return this;\r\n      }\r\n\r\n      if (!this._start) {\r\n        this.pivot();\r\n      }\r\n\r\n      helpers.each(this._model, function(value, key) {\r\n\r\n        if (key[0] === '_' || !this._model.hasOwnProperty(key)) {\r\n          // Only non-underscored properties\r\n        }\r\n\r\n        // Init if doesn't exist\r\n        else if (!this._view.hasOwnProperty(key)) {\r\n          if (typeof value === 'number' && !isNaN(this._view[key])) {\r\n            this._view[key] = value * ease;\r\n          } else {\r\n            this._view[key] = value;\r\n          }\r\n        }\r\n\r\n        // No unnecessary computations\r\n        else if (value === this._view[key]) {\r\n          // It's the same! Woohoo!\r\n        }\r\n\r\n        // Color transitions if possible\r\n        else if (typeof value === 'string') {\r\n          try {\r\n            var color = helpers.color(this._start[key]).mix(helpers.color(this._model[key]), ease);\r\n            this._view[key] = color.rgbString();\r\n          } catch (err) {\r\n            this._view[key] = value;\r\n          }\r\n        }\r\n        // Number transitions\r\n        else if (typeof value === 'number') {\r\n          var startVal = this._start[key] !== undefined && isNaN(this._start[key]) === false ? this._start[key] : 0;\r\n          this._view[key] = ((this._model[key] - startVal) * ease) + startVal;\r\n        }\r\n        // Everything else\r\n        else {\r\n          this._view[key] = value;\r\n        }\r\n      }, this);\r\n\r\n      return this;\r\n    },\r\n    tooltipPosition: function() {\r\n      return {\r\n        x: this._model.x,\r\n        y: this._model.y\r\n      };\r\n    },\r\n    hasValue: function() {\r\n      return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n    }\r\n  });\r\n\r\n  Chart.Element.extend = helpers.inherits;\r\n\r\n};\r\n\n},{}],25:[function(require,module,exports){\n/*global window: false */\r\n/*global document: false */\r\n\"use strict\";\r\n\r\nvar color = require('chartjs-color');\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\t//Global Chart helpers object for utility methods and classes\r\n\tvar helpers = Chart.helpers = {};\r\n\r\n\t//-- Basic js utility methods\r\n\thelpers.each = function(loopable, callback, self, reverse) {\r\n\t\t// Check to see if null or undefined firstly.\r\n\t\tvar i, len;\r\n\t\tif (helpers.isArray(loopable)) {\r\n\t\t\tlen = loopable.length;\r\n\t\t\tif (reverse) {\r\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (typeof loopable === 'object') {\r\n\t\t\tvar keys = Object.keys(loopable);\r\n\t\t\tlen = keys.length;\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.clone = function(obj) {\r\n\t\tvar objClone = {};\r\n\t\thelpers.each(obj, function(value, key) {\r\n\t\t\tif (obj.hasOwnProperty(key)) {\r\n\t\t\t\tif (helpers.isArray(value)) {\r\n\t\t\t\t\tobjClone[key] = value.slice(0);\r\n\t\t\t\t} else if (typeof value === 'object' && value !== null) {\r\n\t\t\t\t\tobjClone[key] = helpers.clone(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobjClone[key] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn objClone;\r\n\t};\r\n\thelpers.extend = function(base) {\r\n\t\tvar len = arguments.length;\r\n\t\tvar additionalArgs = [];\r\n\t\tfor (var i = 1; i < len; i++) {\r\n\t\t\tadditionalArgs.push(arguments[i]);\r\n\t\t}\r\n\t\thelpers.each(additionalArgs, function(extensionObject) {\r\n\t\t\thelpers.each(extensionObject, function(value, key) {\r\n\t\t\t\tif (extensionObject.hasOwnProperty(key)) {\r\n\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn base;\r\n\t};\r\n\t// Need a special merge function to chart configs since they are now grouped\r\n\thelpers.configMerge = function(_base) {\r\n\t\tvar base = helpers.clone(_base);\r\n\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\r\n\t\t\thelpers.each(extension, function(value, key) {\r\n\t\t\t\tif (extension.hasOwnProperty(key)) {\r\n\t\t\t\t\tif (key === 'scales') {\r\n\t\t\t\t\t\t// Scale config merging is complex. Add out own function here for that\r\n\t\t\t\t\t\tbase[key] = helpers.scaleMerge(base.hasOwnProperty(key) ? base[key] : {}, value);\r\n\r\n\t\t\t\t\t} else if (key === 'scale') {\r\n\t\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\r\n\t\t\t\t\t\tbase[key] = helpers.configMerge(base.hasOwnProperty(key) ? base[key] : {}, Chart.scaleService.getScaleDefaults(value.type), value);\r\n\t\t\t\t\t} else if (base.hasOwnProperty(key) && helpers.isArray(base[key]) && helpers.isArray(value)) {\r\n\t\t\t\t\t\t// In this case we have an array of objects replacing another array. Rather than doing a strict replace,\r\n\t\t\t\t\t\t// merge. This allows easy scale option merging\r\n\t\t\t\t\t\tvar baseArray = base[key];\r\n\r\n\t\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\r\n\t\t\t\t\t\t\tif (index < baseArray.length) {\r\n\t\t\t\t\t\t\t\tif (typeof baseArray[index] === 'object' && baseArray[index] !== null && typeof valueObj === 'object' && valueObj !== null) {\r\n\t\t\t\t\t\t\t\t\t// Two objects are coming together. Do a merge of them.\r\n\t\t\t\t\t\t\t\t\tbaseArray[index] = helpers.configMerge(baseArray[index], valueObj);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Just overwrite in this case since there is nothing to merge\r\n\t\t\t\t\t\t\t\t\tbaseArray[index] = valueObj;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbaseArray.push(valueObj); // nothing to merge\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.extendDeep = function(_base) {\r\n\t\treturn _extendDeep.apply(this, arguments);\r\n\r\n\t\tfunction _extendDeep(dst) {\r\n\t\t\thelpers.each(arguments, function(obj) {\r\n\t\t\t\tif (obj !== dst) {\r\n\t\t\t\t\thelpers.each(obj, function(value, key) {\r\n\t\t\t\t\t\tif (dst[key] && dst[key].constructor && dst[key].constructor === Object) {\r\n\t\t\t\t\t\t\t_extendDeep(dst[key], value);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdst[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn dst;\r\n\t\t}\r\n\t};\r\n\thelpers.scaleMerge = function(_base, extension) {\r\n\t\tvar base = helpers.clone(_base);\r\n\r\n\t\thelpers.each(extension, function(value, key) {\r\n\t\t\tif (extension.hasOwnProperty(key)) {\r\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\r\n\t\t\t\t\t// These properties are arrays of items\r\n\t\t\t\t\tif (base.hasOwnProperty(key)) {\r\n\t\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\t\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\r\n\t\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\r\n\t\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\r\n\t\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\r\n\t\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\r\n\t\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Type is the same\r\n\t\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbase[key] = [];\r\n\t\t\t\t\t\thelpers.each(value, function(valueObj) {\r\n\t\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\r\n\t\tif (value === undefined || value === null) {\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\r\n\t\tif (helpers.isArray(value)) {\r\n\t\t\treturn index < value.length ? value[index] : defaultValue;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\thelpers.getValueOrDefault = function(value, defaultValue) {\r\n\t\treturn value === undefined ? defaultValue : value;\r\n\t};\r\n\thelpers.indexOf = function(arrayToSearch, item) {\r\n\t\tif (Array.prototype.indexOf) {\r\n\t\t\treturn arrayToSearch.indexOf(item);\r\n\t\t} else {\r\n\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\r\n\t\t\t\tif (arrayToSearch[i] === item)\r\n\t\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t};\r\n\thelpers.where = function(collection, filterCallback) {\r\n\t\tvar filtered = [];\r\n\r\n\t\thelpers.each(collection, function(item) {\r\n\t\t\tif (filterCallback(item)) {\r\n\t\t\t\tfiltered.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn filtered;\r\n\t};\r\n\thelpers.findIndex = function(arrayToSearch, callback, thisArg) {\r\n\t\tvar index = -1;\r\n\t\tif (Array.prototype.findIndex) {\r\n\t\t\tindex = arrayToSearch.findIndex(callback, thisArg);\r\n\t\t} else {\r\n\t\t\tfor (var i = 0; i < arrayToSearch.length; ++i) {\r\n\t\t\t\tthisArg = thisArg !== undefined ? thisArg : arrayToSearch;\r\n\r\n\t\t\t\tif (callback.call(thisArg, arrayToSearch[i], i, arrayToSearch)) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t};\r\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to start of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = -1;\r\n\t\t}\r\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to end of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = arrayToSearch.length;\r\n\t\t}\r\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.inherits = function(extensions) {\r\n\t\t//Basic javascript inheritance based on the model created in Backbone.js\r\n\t\tvar parent = this;\r\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function() {\r\n\t\t\treturn parent.apply(this, arguments);\r\n\t\t};\r\n\r\n\t\tvar Surrogate = function() {\r\n\t\t\tthis.constructor = ChartElement;\r\n\t\t};\r\n\t\tSurrogate.prototype = parent.prototype;\r\n\t\tChartElement.prototype = new Surrogate();\r\n\r\n\t\tChartElement.extend = helpers.inherits;\r\n\r\n\t\tif (extensions) {\r\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\r\n\t\t}\r\n\r\n\t\tChartElement.__super__ = parent.prototype;\r\n\r\n\t\treturn ChartElement;\r\n\t};\r\n\thelpers.noop = function() {};\r\n\thelpers.uid = (function() {\r\n\t\tvar id = 0;\r\n\t\treturn function() {\r\n\t\t\treturn id++;\r\n\t\t};\r\n\t})();\r\n\thelpers.warn = function(str) {\r\n\t\t//Method for warning of errors\r\n\t\tif (console && typeof console.warn === \"function\") {\r\n\t\t\tconsole.warn(str);\r\n\t\t}\r\n\t};\r\n\t//-- Math methods\r\n\thelpers.isNumber = function(n) {\r\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\r\n\t};\r\n\thelpers.almostEquals = function(x, y, epsilon) {\r\n\t\treturn Math.abs(x - y) < epsilon;\r\n\t};\r\n\thelpers.max = function(array) {\r\n\t\treturn array.reduce(function(max, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.max(max, value);\r\n\t\t\t} else {\r\n\t\t\t\treturn max;\r\n\t\t\t}\r\n\t\t}, Number.NEGATIVE_INFINITY);\r\n\t};\r\n\thelpers.min = function(array) {\r\n\t\treturn array.reduce(function(min, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.min(min, value);\r\n\t\t\t} else {\r\n\t\t\t\treturn min;\r\n\t\t\t}\r\n\t\t}, Number.POSITIVE_INFINITY);\r\n\t};\r\n\thelpers.sign = function(x) {\r\n\t\tif (Math.sign) {\r\n\t\t\treturn Math.sign(x);\r\n\t\t} else {\r\n\t\t\tx = +x; // convert to a number\r\n\t\t\tif (x === 0 || isNaN(x)) {\r\n\t\t\t\treturn x;\r\n\t\t\t}\r\n\t\t\treturn x > 0 ? 1 : -1;\r\n\t\t}\r\n\t};\r\n\thelpers.log10 = function(x) {\r\n\t\tif (Math.log10) {\r\n\t\t\treturn Math.log10(x);\r\n\t\t} else {\r\n\t\t\treturn Math.log(x) / Math.LN10;\r\n\t\t}\r\n\t};\r\n\thelpers.toRadians = function(degrees) {\r\n\t\treturn degrees * (Math.PI / 180);\r\n\t};\r\n\thelpers.toDegrees = function(radians) {\r\n\t\treturn radians * (180 / Math.PI);\r\n\t};\r\n\t// Gets the angle from vertical upright to the point about a centre.\r\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\r\n\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\r\n\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n\t\tif (angle < (-0.5 * Math.PI)) {\r\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tangle: angle,\r\n\t\t\tdistance: radialDistanceFromCenter\r\n\t\t};\r\n\t};\r\n\thelpers.aliasPixel = function(pixelWidth) {\r\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n\t};\r\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\r\n\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n\t\t// This function must also respect \"skipped\" points\r\n\r\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\r\n\t\t\tcurrent = middlePoint,\r\n\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n\t\tvar s01 = d01 / (d01 + d12);\r\n\t\tvar s12 = d12 / (d01 + d12);\r\n\r\n\t\t// If all points are the same, s01 & s02 will be inf\r\n\t\ts01 = isNaN(s01) ? 0 : s01;\r\n\t\ts12 = isNaN(s12) ? 0 : s12;\r\n\r\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\r\n\t\tvar fb = t * s12;\r\n\r\n\t\treturn {\r\n\t\t\tprevious: {\r\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\r\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\r\n\t\t\t},\r\n\t\t\tnext: {\r\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\r\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\thelpers.nextItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n\t\t}\r\n\r\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n\t};\r\n\thelpers.previousItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n\t\t}\r\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\r\n\t};\r\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\r\n\thelpers.niceNum = function(range, round) {\r\n\t\tvar exponent = Math.floor(helpers.log10(range));\r\n\t\tvar fraction = range / Math.pow(10, exponent);\r\n\t\tvar niceFraction;\r\n\r\n\t\tif (round) {\r\n\t\t\tif (fraction < 1.5) {\r\n\t\t\t\tniceFraction = 1;\r\n\t\t\t} else if (fraction < 3) {\r\n\t\t\t\tniceFraction = 2;\r\n\t\t\t} else if (fraction < 7) {\r\n\t\t\t\tniceFraction = 5;\r\n\t\t\t} else {\r\n\t\t\t\tniceFraction = 10;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (fraction <= 1.0) {\r\n\t\t\t\tniceFraction = 1;\r\n\t\t\t} else if (fraction <= 2) {\r\n\t\t\t\tniceFraction = 2;\r\n\t\t\t} else if (fraction <= 5) {\r\n\t\t\t\tniceFraction = 5;\r\n\t\t\t} else {\r\n\t\t\t\tniceFraction = 10;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn niceFraction * Math.pow(10, exponent);\r\n\t};\r\n\t//Easing functions adapted from Robert Penner's easing equations\r\n\t//http://www.robertpenner.com/easing/\r\n\tvar easingEffects = helpers.easingEffects = {\r\n\t\tlinear: function(t) {\r\n\t\t\treturn t;\r\n\t\t},\r\n\t\teaseInQuad: function(t) {\r\n\t\t\treturn t * t;\r\n\t\t},\r\n\t\teaseOutQuad: function(t) {\r\n\t\t\treturn -1 * t * (t - 2);\r\n\t\t},\r\n\t\teaseInOutQuad: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\r\n\t\t},\r\n\t\teaseInCubic: function(t) {\r\n\t\t\treturn t * t * t;\r\n\t\t},\r\n\t\teaseOutCubic: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutCubic: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\r\n\t\t},\r\n\t\teaseInQuart: function(t) {\r\n\t\t\treturn t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuart: function(t) {\r\n\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\r\n\t\t},\r\n\t\teaseInOutQuart: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\r\n\t\t},\r\n\t\teaseInQuint: function(t) {\r\n\t\t\treturn 1 * (t /= 1) * t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuint: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutQuint: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\r\n\t\t},\r\n\t\teaseInSine: function(t) {\r\n\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\r\n\t\t},\r\n\t\teaseOutSine: function(t) {\r\n\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\r\n\t\t},\r\n\t\teaseInOutSine: function(t) {\r\n\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\r\n\t\t},\r\n\t\teaseInExpo: function(t) {\r\n\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\r\n\t\t},\r\n\t\teaseOutExpo: function(t) {\r\n\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\r\n\t\t},\r\n\t\teaseInOutExpo: function(t) {\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif (t === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\r\n\t\t},\r\n\t\teaseInCirc: function(t) {\r\n\t\t\tif (t >= 1) {\r\n\t\t\t\treturn t;\r\n\t\t\t}\r\n\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\r\n\t\t},\r\n\t\teaseOutCirc: function(t) {\r\n\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\r\n\t\t},\r\n\t\teaseInOutCirc: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n\t\t},\r\n\t\teaseInElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t},\r\n\t\teaseOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\r\n\t\t},\r\n\t\teaseInOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) === 2) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * (0.3 * 1.5);\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\tif (t < 1) {\r\n\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\t\t},\r\n\t\teaseInBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\r\n\t\t},\r\n\t\teaseOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\r\n\t\t},\r\n\t\teaseInOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n\t\t},\r\n\t\teaseInBounce: function(t) {\r\n\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\r\n\t\t},\r\n\t\teaseOutBounce: function(t) {\r\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * t * t);\r\n\t\t\t} else if (t < (2 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\r\n\t\t\t} else if (t < (2.5 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\r\n\t\t\t} else {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\r\n\t\t\t}\r\n\t\t},\r\n\t\teaseInOutBounce: function(t) {\r\n\t\t\tif (t < 1 / 2) {\r\n\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\r\n\t\t\t}\r\n\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\r\n\t\t}\r\n\t};\r\n\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n\thelpers.requestAnimFrame = (function() {\r\n\t\treturn window.requestAnimationFrame ||\r\n\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\twindow.mozRequestAnimationFrame ||\r\n\t\t\twindow.oRequestAnimationFrame ||\r\n\t\t\twindow.msRequestAnimationFrame ||\r\n\t\t\tfunction(callback) {\r\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\r\n\t\t\t};\r\n\t})();\r\n\thelpers.cancelAnimFrame = (function() {\r\n\t\treturn window.cancelAnimationFrame ||\r\n\t\t\twindow.webkitCancelAnimationFrame ||\r\n\t\t\twindow.mozCancelAnimationFrame ||\r\n\t\t\twindow.oCancelAnimationFrame ||\r\n\t\t\twindow.msCancelAnimationFrame ||\r\n\t\t\tfunction(callback) {\r\n\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\r\n\t\t\t};\r\n\t})();\r\n\t//-- DOM methods\r\n\thelpers.getRelativePosition = function(evt, chart) {\r\n\t\tvar mouseX, mouseY;\r\n\t\tvar e = evt.originalEvent || evt,\r\n\t\t\tcanvas = evt.currentTarget || evt.srcElement,\r\n\t\t\tboundingRect = canvas.getBoundingClientRect();\r\n\r\n\t\tif (e.touches && e.touches.length > 0) {\r\n\t\t\tmouseX = e.touches[0].clientX;\r\n\t\t\tmouseY = e.touches[0].clientY;\r\n\r\n\t\t} else {\r\n\t\t\tmouseX = e.clientX;\r\n\t\t\tmouseY = e.clientY;\r\n\t\t}\r\n\r\n\t\t// Scale mouse coordinates into canvas coordinates\r\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\r\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n\t\treturn {\r\n\t\t\tx: mouseX,\r\n\t\t\ty: mouseY\r\n\t\t};\r\n\r\n\t};\r\n\thelpers.addEvent = function(node, eventType, method) {\r\n\t\tif (node.addEventListener) {\r\n\t\t\tnode.addEventListener(eventType, method);\r\n\t\t} else if (node.attachEvent) {\r\n\t\t\tnode.attachEvent(\"on\" + eventType, method);\r\n\t\t} else {\r\n\t\t\tnode[\"on\" + eventType] = method;\r\n\t\t}\r\n\t};\r\n\thelpers.removeEvent = function(node, eventType, handler) {\r\n\t\tif (node.removeEventListener) {\r\n\t\t\tnode.removeEventListener(eventType, handler, false);\r\n\t\t} else if (node.detachEvent) {\r\n\t\t\tnode.detachEvent(\"on\" + eventType, handler);\r\n\t\t} else {\r\n\t\t\tnode[\"on\" + eventType] = helpers.noop;\r\n\t\t}\r\n\t};\r\n\thelpers.bindEvents = function(chartInstance, arrayOfEvents, handler) {\r\n\t\t// Create the events object if it's not already present\r\n\t\tif (!chartInstance.events)\r\n\t\t\tchartInstance.events = {};\r\n\r\n\t\thelpers.each(arrayOfEvents, function(eventName) {\r\n\t\t\tchartInstance.events[eventName] = function() {\r\n\t\t\t\thandler.apply(chartInstance, arguments);\r\n\t\t\t};\r\n\t\t\thelpers.addEvent(chartInstance.chart.canvas, eventName, chartInstance.events[eventName]);\r\n\t\t});\r\n\t};\r\n\thelpers.unbindEvents = function(chartInstance, arrayOfEvents) {\r\n\t\thelpers.each(arrayOfEvents, function(handler, eventName) {\r\n\t\t\thelpers.removeEvent(chartInstance.chart.canvas, eventName, handler);\r\n\t\t});\r\n\t};\r\n\r\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\r\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\r\n\t\tvar valueInPixels;\r\n\t\tif (typeof(styleValue) === 'string') {\r\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\r\n\r\n\t\t\tif (styleValue.indexOf('%') != -1) {\r\n\t\t\t\t// percentage * size in dimension\r\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvalueInPixels = styleValue;\r\n\t\t}\r\n\r\n\t\treturn valueInPixels;\r\n\t}\r\n\r\n\t// Private helper to get a constraint dimension\r\n\t// @param domNode : the node to check the constraint on\r\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (max-width / max-height)\r\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\r\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n\t\tvar constrainedDimension;\r\n\t\tvar constrainedNode = document.defaultView.getComputedStyle(domNode)[maxStyle];\r\n\t\tvar constrainedContainer = document.defaultView.getComputedStyle(domNode.parentNode)[maxStyle];\r\n\t\tvar hasCNode = constrainedNode !== null && constrainedNode !== \"none\";\r\n\t\tvar hasCContainer = constrainedContainer !== null && constrainedContainer !== \"none\";\r\n\r\n\t\tif (hasCNode || hasCContainer) {\r\n\t\t\tconstrainedDimension = Math.min((hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : Number.POSITIVE_INFINITY), (hasCContainer ? parseMaxStyle(constrainedContainer, domNode.parentNode, percentageProperty) : Number.POSITIVE_INFINITY));\r\n\t\t}\r\n\t\treturn constrainedDimension;\r\n\t}\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintWidth = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n\t};\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintHeight = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n\t};\r\n\thelpers.getMaximumWidth = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-left')) + parseInt(helpers.getStyle(container, 'padding-right'));\r\n\r\n\t\tvar w = container.clientWidth - padding;\r\n\t\tvar cw = helpers.getConstraintWidth(domNode);\r\n\t\tif (cw !== undefined) {\r\n\t\t\tw = Math.min(w, cw);\r\n\t\t}\r\n\r\n\t\treturn w;\r\n\t};\r\n\thelpers.getMaximumHeight = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-top')) + parseInt(helpers.getStyle(container, 'padding-bottom'));\r\n\r\n\t\tvar h = container.clientHeight - padding;\r\n\t\tvar ch = helpers.getConstraintHeight(domNode);\r\n\t\tif (ch !== undefined) {\r\n\t\t\th = Math.min(h, ch);\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t};\r\n\thelpers.getStyle = function(el, property) {\r\n\t\treturn el.currentStyle ?\r\n\t\t\tel.currentStyle[property] :\r\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n\t};\r\n\thelpers.retinaScale = function(chart) {\r\n\t\tvar ctx = chart.ctx;\r\n\t\tvar width = chart.canvas.width;\r\n\t\tvar height = chart.canvas.height;\r\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n\t\tif (pixelRatio !== 1) {\r\n\t\t\tctx.canvas.height = height * pixelRatio;\r\n\t\t\tctx.canvas.width = width * pixelRatio;\r\n\t\t\tctx.scale(pixelRatio, pixelRatio);\r\n\r\n\t\t\t// Store the device pixel ratio so that we can go backwards in `destroy`.\r\n\t\t\t// The devicePixelRatio changes with zoom, so there are no guarantees that it is the same\r\n\t\t\t// when destroy is called\r\n\t\t\tchart.originalDevicePixelRatio = chart.originalDevicePixelRatio || pixelRatio;\r\n\t\t}\r\n\r\n\t\tctx.canvas.style.width = width + 'px';\r\n\t\tctx.canvas.style.height = height + 'px';\r\n\t};\r\n\t//-- Canvas methods\r\n\thelpers.clear = function(chart) {\r\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n\t};\r\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n\t\treturn fontStyle + \" \" + pixelSize + \"px \" + fontFamily;\r\n\t};\r\n\thelpers.longestText = function(ctx, font, arrayOfStrings, cache) {\r\n\t\tcache = cache || {};\r\n\t\tcache.data = cache.data || {};\r\n\t\tcache.garbageCollect = cache.garbageCollect || [];\r\n\r\n\t\tif (cache.font !== font) {\r\n\t\t\tcache.data = {};\r\n\t\t\tcache.garbageCollect = [];\r\n\t\t\tcache.font = font;\r\n\t\t}\r\n\r\n\t\tctx.font = font;\r\n\t\tvar longest = 0;\r\n\t\thelpers.each(arrayOfStrings, function(string) {\r\n\t\t\t// Undefined strings should not be measured\r\n\t\t\tif (string !== undefined && string !== null) {\r\n\t\t\t\tvar textWidth = cache.data[string];\r\n\t\t\t\tif (!textWidth) {\r\n\t\t\t\t\ttextWidth = cache.data[string] = ctx.measureText(string).width;\r\n\t\t\t\t\tcache.garbageCollect.push(string);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (textWidth > longest) {\r\n\t\t\t\t\tlongest = textWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar gcLen = cache.garbageCollect.length / 2;\r\n\t\tif (gcLen > arrayOfStrings.length) {\r\n\t\t\tfor (var i = 0; i < gcLen; i++) {\r\n\t\t\t\tdelete cache.data[cache.garbageCollect[i]];\r\n\t\t\t}\r\n\t\t\tcache.garbageCollect.splice(0, gcLen);\r\n\t\t}\r\n\r\n\t\treturn longest;\r\n\t};\r\n\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(x + radius, y);\r\n\t\tctx.lineTo(x + width - radius, y);\r\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n\t\tctx.lineTo(x + width, y + height - radius);\r\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n\t\tctx.lineTo(x + radius, y + height);\r\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n\t\tctx.lineTo(x, y + radius);\r\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\r\n\t\tctx.closePath();\r\n\t};\r\n\thelpers.color = function(c) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.log('Color.js not found!');\r\n\t\t\treturn c;\r\n\t\t}\r\n\r\n\t\t/* global CanvasGradient */\r\n\t\tif (c instanceof CanvasGradient) {\r\n\t\t\treturn color(Chart.defaults.global.defaultColor);\r\n\t\t}\r\n\r\n\t\treturn color(c);\r\n\t};\r\n\thelpers.addResizeListener = function(node, callback) {\r\n\t\t// Hide an iframe before the node\r\n\t\tvar hiddenIframe = document.createElement('iframe');\r\n\t\tvar hiddenIframeClass = 'chartjs-hidden-iframe';\r\n\r\n\t\tif (hiddenIframe.classlist) {\r\n\t\t\t// can use classlist\r\n\t\t\thiddenIframe.classlist.add(hiddenIframeClass);\r\n\t\t} else {\r\n\t\t\thiddenIframe.setAttribute('class', hiddenIframeClass);\r\n\t\t}\r\n\r\n\t\t// Set the style\r\n\t\thiddenIframe.style.width = '100%';\r\n\t\thiddenIframe.style.display = 'block';\r\n\t\thiddenIframe.style.border = 0;\r\n\t\thiddenIframe.style.height = 0;\r\n\t\thiddenIframe.style.margin = 0;\r\n\t\thiddenIframe.style.position = 'absolute';\r\n\t\thiddenIframe.style.left = 0;\r\n\t\thiddenIframe.style.right = 0;\r\n\t\thiddenIframe.style.top = 0;\r\n\t\thiddenIframe.style.bottom = 0;\r\n\r\n\t\t// Insert the iframe so that contentWindow is available\r\n\t\tnode.insertBefore(hiddenIframe, node.firstChild);\r\n\r\n\t\t(hiddenIframe.contentWindow || hiddenIframe).onresize = function() {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\thelpers.removeResizeListener = function(node) {\r\n\t\tvar hiddenIframe = node.querySelector('.chartjs-hidden-iframe');\r\n\r\n\t\t// Remove the resize detect iframe\r\n\t\tif (hiddenIframe) {\r\n\t\t\thiddenIframe.parentNode.removeChild(hiddenIframe);\r\n\t\t}\r\n\t};\r\n\thelpers.isArray = function(obj) {\r\n\t\tif (!Array.isArray) {\r\n\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\r\n\t\t}\r\n\t\treturn Array.isArray(obj);\r\n\t};\r\n\thelpers.pushAllIfDefined = function(element, array) {\r\n\t\tif (typeof element === \"undefined\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (helpers.isArray(element)) {\r\n\t\t\tarray.push.apply(array, element);\r\n\t\t} else {\r\n\t\t\tarray.push(element);\r\n\t\t}\r\n\t};\r\n\thelpers.callCallback = function(fn, args, _tArg) {\r\n\t\tif (fn && typeof fn.call === 'function') {\r\n\t\t\tfn.apply(_tArg, args);\r\n\t\t}\r\n\t};\r\n\thelpers.getHoverColor = function(color) {\r\n\t\t/* global CanvasPattern */\r\n\t\treturn (color instanceof CanvasPattern) ?\r\n\t\t\tcolor :\r\n\t\t\thelpers.color(color).saturate(0.5).darken(0.1).rgbString();\r\n\t};\r\n};\r\n\n},{\"chartjs-color\":3}],26:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function() {\r\n\r\n\t//Occupy the global variable of Chart, and create a simple base class\r\n\tvar Chart = function(context, config) {\r\n\t\tthis.config = config;\r\n\r\n\t\t// Support a jQuery'd canvas element\r\n\t\tif (context.length && context[0].getContext) {\r\n\t\t\tcontext = context[0];\r\n\t\t}\r\n\r\n\t\t// Support a canvas domnode\r\n\t\tif (context.getContext) {\r\n\t\t\tcontext = context.getContext(\"2d\");\r\n\t\t}\r\n\r\n\t\tthis.ctx = context;\r\n\t\tthis.canvas = context.canvas;\r\n\r\n\t\t// Figure out what the size of the chart will be.\r\n\t\t// If the canvas has a specified width and height, we use those else\r\n\t\t// we look to see if the canvas node has a CSS width and height.\r\n\t\t// If there is still no height, fill the parent container\r\n\t\tthis.width = context.canvas.width || parseInt(Chart.helpers.getStyle(context.canvas, 'width')) || Chart.helpers.getMaximumWidth(context.canvas);\r\n\t\tthis.height = context.canvas.height || parseInt(Chart.helpers.getStyle(context.canvas, 'height')) || Chart.helpers.getMaximumHeight(context.canvas);\r\n\r\n\t\tthis.aspectRatio = this.width / this.height;\r\n\r\n\t\tif (isNaN(this.aspectRatio) || isFinite(this.aspectRatio) === false) {\r\n\t\t\t// If the canvas has no size, try and figure out what the aspect ratio will be.\r\n\t\t\t// Some charts prefer square canvases (pie, radar, etc). If that is specified, use that\r\n\t\t\t// else use the canvas default ratio of 2\r\n\t\t\tthis.aspectRatio = config.aspectRatio !== undefined ? config.aspectRatio : 2;\r\n\t\t}\r\n\r\n\t\t// Store the original style of the element so we can set it back\r\n\t\tthis.originalCanvasStyleWidth = context.canvas.style.width;\r\n\t\tthis.originalCanvasStyleHeight = context.canvas.style.height;\r\n\r\n\t\t// High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\r\n\t\tChart.helpers.retinaScale(this);\r\n\r\n\t\tif (config) {\r\n\t\t\tthis.controller = new Chart.Controller(this);\r\n\t\t}\r\n\r\n\t\t// Always bind this so that if the responsive state changes we still work\r\n\t\tvar _this = this;\r\n\t\tChart.helpers.addResizeListener(context.canvas.parentNode, function() {\r\n\t\t\tif (_this.controller && _this.controller.config.options.responsive) {\r\n\t\t\t\t_this.controller.resize();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn this.controller ? this.controller : this;\r\n\r\n\t};\r\n\r\n\t//Globally expose the defaults to allow for user updating/changing\r\n\tChart.defaults = {\r\n\t\tglobal: {\r\n\t\t\tresponsive: true,\r\n\t\t\tresponsiveAnimationDuration: 0,\r\n\t\t\tmaintainAspectRatio: true,\r\n\t\t\tevents: [\"mousemove\", \"mouseout\", \"click\", \"touchstart\", \"touchmove\"],\r\n\t\t\thover: {\r\n\t\t\t\tonHover: null,\r\n\t\t\t\tmode: 'single',\r\n\t\t\t\tanimationDuration: 400\r\n\t\t\t},\r\n\t\t\tonClick: null,\r\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\r\n\t\t\tdefaultFontColor: '#666',\r\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n\t\t\tdefaultFontSize: 12,\r\n\t\t\tdefaultFontStyle: 'normal',\r\n\t\t\tshowLines: true,\r\n\r\n\t\t\t// Element defaults defined in element extensions\r\n\t\t\telements: {},\r\n\r\n\t\t\t// Legend callback string\r\n\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\tvar text = [];\r\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n\t\t\t\t\tif (chart.data.datasets[i].label) {\r\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t\ttext.push('</ul>');\r\n\r\n\t\t\t\treturn text.join(\"\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn Chart;\r\n\r\n};\r\n\n},{}],27:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n\t// It is this service's responsibility of carrying out that layout.\r\n\tChart.layoutService = {\r\n\t\tdefaults: {},\r\n\r\n\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\r\n\t\taddBox: function(chartInstance, box) {\r\n\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\tchartInstance.boxes = [];\r\n\t\t\t}\r\n\t\t\tchartInstance.boxes.push(box);\r\n\t\t},\r\n\r\n\t\tremoveBox: function(chartInstance, box) {\r\n\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\r\n\t\t},\r\n\r\n\t\t// The most important function\r\n\t\tupdate: function(chartInstance, width, height) {\r\n\r\n\t\t\tif (!chartInstance) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar xPadding = 0;\r\n\t\t\tvar yPadding = 0;\r\n\r\n\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"left\";\r\n\t\t\t});\r\n\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"right\";\r\n\t\t\t});\r\n\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"top\";\r\n\t\t\t});\r\n\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"bottom\";\r\n\t\t\t});\r\n\r\n\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\r\n\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"chartArea\";\r\n\t\t\t});\r\n\r\n\t\t\t// Ensure that full width boxes are at the very top / bottom\r\n\t\t\ttopBoxes.sort(function(a, b) {\r\n\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\r\n\t\t\t});\r\n\t\t\tbottomBoxes.sort(function(a, b) {\r\n\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\r\n\t\t\t});\r\n\r\n\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\r\n\t\t\t// Our canvas looks like the following.\r\n\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n\t\t\t// B1 is the bottom axis\r\n\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n\t\t\t// an error will be thrown.\r\n\t\t\t//\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  T1 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |    |    |                 T2                  |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    | C1 |                           | C2 |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    | C3 |                           | C4 |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    |                 B1                  |    |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  B2 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t//\r\n\t\t\t// What we do to find the best sizing, we do the following\r\n\t\t\t// 1. Determine the minimum size of the chart area.\r\n\t\t\t// 2. Split the remaining width equally between each vertical axis\r\n\t\t\t// 3. Split the remaining height equally between each horizontal axis\r\n\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n\t\t\t// 6. Refit each axis\r\n\t\t\t// 7. Position each axis in the final location\r\n\t\t\t// 8. Tell the chart the final location of the chart area\r\n\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n\t\t\t// Step 1\r\n\t\t\tvar chartWidth = width - (2 * xPadding);\r\n\t\t\tvar chartHeight = height - (2 * yPadding);\r\n\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\r\n\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n\t\t\t// Step 2\r\n\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n\t\t\t// Step 3\r\n\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n\t\t\t// Step 4\r\n\t\t\tvar maxChartAreaWidth = chartWidth;\r\n\t\t\tvar maxChartAreaHeight = chartHeight;\r\n\t\t\tvar minBoxSizes = [];\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n\t\t\tfunction getMinimumBoxSize(box) {\r\n\t\t\t\tvar minSize;\r\n\t\t\t\tvar isHorizontal = box.isHorizontal();\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\r\n\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tminBoxSizes.push({\r\n\t\t\t\t\thorizontal: isHorizontal,\r\n\t\t\t\t\tminSize: minSize,\r\n\t\t\t\t\tbox: box\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n\t\t\t// be if the axes are drawn at their minimum sizes.\r\n\r\n\t\t\t// Steps 5 & 6\r\n\t\t\tvar totalLeftBoxesWidth = xPadding;\r\n\t\t\tvar totalRightBoxesWidth = xPadding;\r\n\t\t\tvar totalTopBoxesHeight = yPadding;\r\n\t\t\tvar totalBottomBoxesHeight = yPadding;\r\n\r\n\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\t// Set the Left and Right margins for the horizontal boxes\r\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n\t\t\t// Function to fit a box\r\n\t\t\tfunction fitBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\t\t\t\tright: totalRightBoxesWidth,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\tbottom: 0\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\r\n\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\t// Let the left layout know the final margin\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n\t\t\tfunction finalFitVerticalBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\t\tbottom: totalBottomBoxesHeight\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n\t\t\ttotalLeftBoxesWidth = xPadding;\r\n\t\t\ttotalRightBoxesWidth = xPadding;\r\n\t\t\ttotalTopBoxesHeight = yPadding;\r\n\t\t\ttotalBottomBoxesHeight = yPadding;\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n\t\t\t// without calling `fit` again\r\n\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\r\n\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\r\n\t\t\t}\r\n\r\n\t\t\t// Step 7 - Position the boxes\r\n\t\t\tvar left = xPadding;\r\n\t\t\tvar top = yPadding;\r\n\t\t\tvar right = 0;\r\n\t\t\tvar bottom = 0;\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n\t\t\t// Account for chart width and height\r\n\t\t\tleft += maxChartAreaWidth;\r\n\t\t\ttop += maxChartAreaHeight;\r\n\r\n\t\t\thelpers.each(rightBoxes, placeBox);\r\n\t\t\thelpers.each(bottomBoxes, placeBox);\r\n\r\n\t\t\tfunction placeBox(box) {\r\n\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\tbox.left = box.options.fullWidth ? xPadding : totalLeftBoxesWidth;\r\n\t\t\t\t\tbox.right = box.options.fullWidth ? width - xPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n\t\t\t\t\tbox.top = top;\r\n\t\t\t\t\tbox.bottom = top + box.height;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\ttop = box.bottom;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbox.left = left;\r\n\t\t\t\t\tbox.right = left + box.width;\r\n\t\t\t\t\tbox.top = totalTopBoxesHeight;\r\n\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\tleft = box.right;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Step 8\r\n\t\t\tchartInstance.chartArea = {\r\n\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\r\n\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\r\n\t\t\t};\r\n\r\n\t\t\t// Step 9\r\n\t\t\thelpers.each(chartAreaBoxes, function(box) {\r\n\t\t\t\tbox.left = chartInstance.chartArea.left;\r\n\t\t\t\tbox.top = chartInstance.chartArea.top;\r\n\t\t\t\tbox.right = chartInstance.chartArea.right;\r\n\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\r\n\r\n\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n\n},{}],28:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar noop = helpers.noop;\r\n\r\n\tChart.defaults.global.legend = {\r\n\r\n\t\tdisplay: true,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\t\treverse: false,\r\n\r\n\t\t// a callback that will handle\r\n\t\tonClick: function(e, legendItem) {\r\n\t\t\tvar index = legendItem.datasetIndex;\r\n\t\t\tvar ci = this.chart;\r\n\t\t\tvar meta = ci.getDatasetMeta(index);\r\n\r\n\t\t\t// See controller.isDatasetVisible comment\r\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\r\n\r\n\t\t\t// We hid a dataset ... rerender the chart\r\n\t\t\tci.update();\r\n\t\t},\r\n\r\n\t\tlabels: {\r\n\t\t\tboxWidth: 40,\r\n\t\t\tpadding: 10,\r\n\t\t\t// Generates labels shown in the legend\r\n\t\t\t// Valid properties to return:\r\n\t\t\t// text : text to display\r\n\t\t\t// fillStyle : fill of coloured box\r\n\t\t\t// strokeStyle: stroke of coloured box\r\n\t\t\t// hidden : if this legend item refers to a hidden item\r\n\t\t\t// lineCap : cap style for line\r\n\t\t\t// lineDash\r\n\t\t\t// lineDashOffset :\r\n\t\t\t// lineJoin :\r\n\t\t\t// lineWidth :\r\n\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttext: dataset.label,\r\n\t\t\t\t\t\tfillStyle: dataset.backgroundColor,\r\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\r\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\r\n\t\t\t\t\t\tlineDash: dataset.borderDash,\r\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\r\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\r\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\r\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\r\n\r\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\r\n\t\t\t\t\t\tdatasetIndex: i\r\n\t\t\t\t\t};\r\n\t\t\t\t}, this) : [];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Legend = Chart.Element.extend({\r\n\r\n\t\tinitialize: function(config) {\r\n\t\t\thelpers.extend(this, config);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tthis.legendHitBoxes = [];\r\n\r\n\t\t\t// Are we in doughnut mode which has a different data type\r\n\t\t\tthis.doughnutMode = false;\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all legend types.\r\n\t\t// Any function can be extended by the legend type\r\n\r\n\t\tbeforeUpdate: noop,\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tthis.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tthis.maxWidth = maxWidth;\r\n\t\t\tthis.maxHeight = maxHeight;\r\n\t\t\tthis.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tthis.beforeSetDimensions();\r\n\t\t\tthis.setDimensions();\r\n\t\t\tthis.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tthis.beforeBuildLabels();\r\n\t\t\tthis.buildLabels();\r\n\t\t\tthis.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tthis.beforeFit();\r\n\t\t\tthis.fit();\r\n\t\t\tthis.afterFit();\r\n\t\t\t//\r\n\t\t\tthis.afterUpdate();\r\n\r\n\t\t\treturn this.minSize;\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.width = this.maxWidth;\r\n\t\t\t\tthis.left = 0;\r\n\t\t\t\tthis.right = this.width;\r\n\t\t\t} else {\r\n\t\t\t\tthis.height = this.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.top = 0;\r\n\t\t\t\tthis.bottom = this.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tthis.paddingLeft = 0;\r\n\t\t\tthis.paddingTop = 0;\r\n\t\t\tthis.paddingRight = 0;\r\n\t\t\tthis.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tthis.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: function() {\r\n\t\t\tthis.legendItems = this.options.labels.generateLabels.call(this, this.chart);\r\n\t\t\tif(this.options.reverse){\r\n\t\t\t\tthis.legendItems.reverse();\r\n\t\t\t}\r\n\t\t},\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\t\t\tvar opts = this.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar display = opts.display;\r\n\r\n\t\t\tvar ctx = this.ctx;\r\n\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t// Reset hit boxes\r\n\t\t\tvar hitboxes = this.legendHitBoxes = [];\r\n\r\n\t\t\tvar minSize = this.minSize;\r\n\t\t\tvar isHorizontal = this.isHorizontal();\r\n\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.width = this.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? 10 : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? 10 : 0;\r\n\t\t\t\tminSize.height = this.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Increase sizes here\r\n\t\t\tif (display) {\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// Labels\r\n\r\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n\t\t\t\t\tvar lineWidths = this.lineWidths = [0];\r\n\t\t\t\t\tvar totalHeight = this.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\t\thelpers.each(this.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar width = labelOpts.boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= this.width) {\r\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = this.left;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\tminSize.height += totalHeight;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO vertical\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.width = minSize.width;\r\n\t\t\tthis.height = minSize.height;\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t},\r\n\r\n\t\t// Actualy draw the legend on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar opts = this.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\tlineDefault = globalDefault.elements.line,\r\n\t\t\t\tlegendWidth = this.width,\r\n\t\t\t\tlineWidths = this.lineWidths;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar ctx = this.ctx,\r\n\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\tx: this.left + ((legendWidth - lineWidths[0]) / 2),\r\n\t\t\t\t\t\ty: this.top + labelOpts.padding,\r\n\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\r\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\t// Labels\r\n\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\tctx.lineWidth = 0.5;\r\n\t\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\r\n\t\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\r\n\t\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\t\tvar boxWidth = labelOpts.boxWidth,\r\n\t\t\t\t\t\thitboxes = this.legendHitBoxes;\r\n\r\n\t\t\t\t\thelpers.each(this.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\r\n\t\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\r\n\t\t\t\t\t\t\tx = cursor.x,\r\n\t\t\t\t\t\t\ty = cursor.y;\r\n\r\n\t\t\t\t\t\tif (x + width >= legendWidth) {\r\n\t\t\t\t\t\t\ty = cursor.y += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t\t\tx = cursor.x = this.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Set the ctx for the box\r\n\t\t\t\t\t\tctx.save();\r\n\r\n\t\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n\t\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n\t\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n\t\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n\t\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n\t\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n\r\n\t\t\t\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\t\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Draw the box\r\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\r\n\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\r\n\r\n\t\t\t\t\t\tctx.restore();\r\n\r\n\t\t\t\t\t\thitboxes[i].left = x;\r\n\t\t\t\t\t\thitboxes[i].top = y;\r\n\r\n\t\t\t\t\t\t// Fill the actual label\r\n\t\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\r\n\r\n\t\t\t\t\t\tif (legendItem.hidden) {\r\n\t\t\t\t\t\t\t// Strikethrough the text if hidden\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\tctx.lineWidth = 2;\r\n\t\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\r\n\t\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\r\n\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Handle an event\r\n\t\thandleEvent: function(e) {\r\n\t\t\tvar position = helpers.getRelativePosition(e, this.chart.chart),\r\n\t\t\t\tx = position.x,\r\n\t\t\t\ty = position.y,\r\n\t\t\t\topts = this.options;\r\n\r\n\t\t\tif (x >= this.left && x <= this.right && y >= this.top && y <= this.bottom) {\r\n\t\t\t\t// See if we are touching one of the dataset boxes\r\n\t\t\t\tvar lh = this.legendHitBoxes;\r\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\r\n\t\t\t\t\tvar hitBox = lh[i];\r\n\r\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n\t\t\t\t\t\t// Touching an element\r\n\t\t\t\t\t\tif (opts.onClick) {\r\n\t\t\t\t\t\t\topts.onClick.call(this, e, this.legendItems[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n};\r\n\n},{}],29:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t// Plugins are stored here\r\n\tChart.plugins = [];\r\n\tChart.pluginService = {\r\n\t\t// Register a new plugin\r\n\t\tregister: function(plugin) {\r\n\t\t\tvar p = Chart.plugins;\r\n\t\t\tif (p.indexOf(plugin) === -1) {\r\n\t\t\t\tp.push(plugin);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Remove a registered plugin\r\n\t\tremove: function(plugin) {\r\n\t\t\tvar p = Chart.plugins;\r\n\t\t\tvar idx = p.indexOf(plugin);\r\n\t\t\tif (idx !== -1) {\r\n\t\t\t\tp.splice(idx, 1);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Iterate over all plugins\r\n\t\tnotifyPlugins: function(method, args, scope) {\r\n\t\t\thelpers.each(Chart.plugins, function(plugin) {\r\n\t\t\t\tif (plugin[method] && typeof plugin[method] === 'function') {\r\n\t\t\t\t\tplugin[method].apply(scope, args);\r\n\t\t\t\t}\r\n\t\t\t}, scope);\r\n\t\t}\r\n\t};\r\n\r\n\tvar noop = helpers.noop;\r\n\tChart.PluginBase = Chart.Element.extend({\r\n\t\t// Plugin methods. All functions are passed the chart instance\r\n\r\n\t\t// Called at start of chart init\r\n\t\tbeforeInit: noop,\r\n\r\n\t\t// Called at end of chart init\r\n\t\tafterInit: noop,\r\n\r\n\t\t// Called at start of update\r\n\t\tbeforeUpdate: noop,\r\n\r\n\t\t// Called at end of update\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t// Called at start of draw\r\n\t\tbeforeDraw: noop,\r\n\r\n\t\t// Called at end of draw\r\n\t\tafterDraw: noop,\r\n\r\n\t\t// Called during destroy\r\n\t\tdestroy: noop,\r\n\t});\r\n};\r\n\n},{}],30:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.scale = {\r\n\t\tdisplay: true,\r\n\t\tposition: \"left\",\r\n\r\n\t\t// grid line settings\r\n\t\tgridLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\tlineWidth: 1,\r\n\t\t\tdrawOnChartArea: true,\r\n\t\t\tdrawTicks: true,\r\n\t\t\ttickMarkLength: 10,\r\n\t\t\tzeroLineWidth: 1,\r\n\t\t\tzeroLineColor: \"rgba(0,0,0,0.25)\",\r\n\t\t\toffsetGridLines: false\r\n\t\t},\r\n\r\n\t\t// scale label\r\n\t\tscaleLabel: {\r\n\t\t\t// actual label\r\n\t\t\tlabelString: '',\r\n\r\n\t\t\t// display property\r\n\t\t\tdisplay: false\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tbeginAtZero: false,\r\n\t\t\tminRotation: 0,\r\n\t\t\tmaxRotation: 50,\r\n\t\t\tmirror: false,\r\n\t\t\tpadding: 10,\r\n\t\t\treverse: false,\r\n\t\t\tdisplay: true,\r\n\t\t\tautoSkip: true,\r\n\t\t\tautoSkipPadding: 0,\r\n\t\t\tlabelOffset: 0,\r\n\t\t\tcallback: function(value) {\r\n\t\t\t\treturn '' + value;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Scale = Chart.Element.extend({\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all scale types.\r\n\t\t// Any function can be extended by the scale type\r\n\r\n\t\tbeforeUpdate: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\r\n\t\t},\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tthis.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tthis.maxWidth = maxWidth;\r\n\t\t\tthis.maxHeight = maxHeight;\r\n\t\t\tthis.margins = helpers.extend({\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}, margins);\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tthis.beforeSetDimensions();\r\n\t\t\tthis.setDimensions();\r\n\t\t\tthis.afterSetDimensions();\r\n\r\n\t\t\t// Data min/max\r\n\t\t\tthis.beforeDataLimits();\r\n\t\t\tthis.determineDataLimits();\r\n\t\t\tthis.afterDataLimits();\r\n\r\n\t\t\t// Ticks\r\n\t\t\tthis.beforeBuildTicks();\r\n\t\t\tthis.buildTicks();\r\n\t\t\tthis.afterBuildTicks();\r\n\r\n\t\t\tthis.beforeTickToLabelConversion();\r\n\t\t\tthis.convertTicksToLabels();\r\n\t\t\tthis.afterTickToLabelConversion();\r\n\r\n\t\t\t// Tick Rotation\r\n\t\t\tthis.beforeCalculateTickRotation();\r\n\t\t\tthis.calculateTickRotation();\r\n\t\t\tthis.afterCalculateTickRotation();\r\n\t\t\t// Fit\r\n\t\t\tthis.beforeFit();\r\n\t\t\tthis.fit();\r\n\t\t\tthis.afterFit();\r\n\t\t\t//\r\n\t\t\tthis.afterUpdate();\r\n\r\n\t\t\treturn this.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: function() {\r\n\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\r\n\t\t},\r\n\t\tsetDimensions: function() {\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.width = this.maxWidth;\r\n\t\t\t\tthis.left = 0;\r\n\t\t\t\tthis.right = this.width;\r\n\t\t\t} else {\r\n\t\t\t\tthis.height = this.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.top = 0;\r\n\t\t\t\tthis.bottom = this.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tthis.paddingLeft = 0;\r\n\t\t\tthis.paddingTop = 0;\r\n\t\t\tthis.paddingRight = 0;\r\n\t\t\tthis.paddingBottom = 0;\r\n\t\t},\r\n\t\tafterSetDimensions: function() {\r\n\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\r\n\t\t},\r\n\r\n\t\t// Data limits\r\n\t\tbeforeDataLimits: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\r\n\t\t},\r\n\t\tdetermineDataLimits: helpers.noop,\r\n\t\tafterDataLimits: function() {\r\n\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\t\tbeforeBuildTicks: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\r\n\t\t},\r\n\t\tbuildTicks: helpers.noop,\r\n\t\tafterBuildTicks: function() {\r\n\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\r\n\t\t},\r\n\r\n\t\tbeforeTickToLabelConversion: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\t// Convert ticks to strings\r\n\t\t\tthis.ticks = this.ticks.map(function(numericalTick, index, ticks) {\r\n\t\t\t\t\tif (this.options.ticks.userCallback) {\r\n\t\t\t\t\t\treturn this.options.ticks.userCallback(numericalTick, index, ticks);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.options.ticks.callback(numericalTick, index, ticks);\r\n\t\t\t\t},\r\n\t\t\t\tthis);\r\n\t\t},\r\n\t\tafterTickToLabelConversion: function() {\r\n\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeCalculateTickRotation: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\r\n\t\t},\r\n\t\tcalculateTickRotation: function() {\r\n\t\t\t//Get the width of each grid by calculating the difference\r\n\t\t\t//between x offsets between 0 and 1.\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tthis.ctx.font = tickLabelFont;\r\n\r\n\t\t\tvar firstWidth = this.ctx.measureText(this.ticks[0]).width;\r\n\t\t\tvar lastWidth = this.ctx.measureText(this.ticks[this.ticks.length - 1]).width;\r\n\t\t\tvar firstRotated;\r\n\r\n\t\t\tthis.labelRotation = this.options.ticks.minRotation || 0;\r\n\t\t\tthis.paddingRight = 0;\r\n\t\t\tthis.paddingLeft = 0;\r\n\r\n\t\t\tif (this.options.display) {\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\tthis.paddingRight = lastWidth / 2 + 3;\r\n\t\t\t\t\tthis.paddingLeft = firstWidth / 2 + 3;\r\n\r\n\t\t\t\t\tif (!this.longestTextCache) {\r\n\t\t\t\t\t\tthis.longestTextCache = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar originalLabelWidth = helpers.longestText(this.ctx, tickLabelFont, this.ticks, this.longestTextCache);\r\n\t\t\t\t\tvar labelWidth = originalLabelWidth;\r\n\t\t\t\t\tvar cosRotation;\r\n\t\t\t\t\tvar sinRotation;\r\n\r\n\t\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\r\n\t\t\t\t\t// only the index matters for a dataset scale, but we want a consistent interface between scales\r\n\t\t\t\t\tvar tickWidth = this.getPixelForTick(1) - this.getPixelForTick(0) - 6;\r\n\r\n\t\t\t\t\t//Max label rotation can be set or default to 90 - also act as a loop counter\r\n\t\t\t\t\twhile (labelWidth > tickWidth && this.labelRotation < this.options.ticks.maxRotation) {\r\n\t\t\t\t\t\tcosRotation = Math.cos(helpers.toRadians(this.labelRotation));\r\n\t\t\t\t\t\tsinRotation = Math.sin(helpers.toRadians(this.labelRotation));\r\n\r\n\t\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\r\n\r\n\t\t\t\t\t\t// We're right aligning the text now.\r\n\t\t\t\t\t\tif (firstRotated + tickFontSize / 2 > this.yLabelWidth) {\r\n\t\t\t\t\t\t\tthis.paddingLeft = firstRotated + tickFontSize / 2;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.paddingRight = tickFontSize / 2;\r\n\r\n\t\t\t\t\t\tif (sinRotation * originalLabelWidth > this.maxHeight) {\r\n\t\t\t\t\t\t\t// go back one step\r\n\t\t\t\t\t\t\tthis.labelRotation--;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.labelRotation++;\r\n\t\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.margins) {\r\n\t\t\t\tthis.paddingLeft = Math.max(this.paddingLeft - this.margins.left, 0);\r\n\t\t\t\tthis.paddingRight = Math.max(this.paddingRight - this.margins.right, 0);\r\n\t\t\t}\r\n\t\t},\r\n\t\tafterCalculateTickRotation: function() {\r\n\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\t// Reset\r\n\t\t\tvar minSize = this.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\r\n\t\t\tvar opts = this.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\r\n\t\t\tvar globalOpts = Chart.defaults.global;\r\n\t\t\tvar display = opts.display;\r\n\t\t\tvar isHorizontal = this.isHorizontal();\r\n\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalOpts.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(tickOpts.fontStyle, globalOpts.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(tickOpts.fontFamily, globalOpts.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\r\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabelOpts.fontSize, globalOpts.defaultFontSize);\r\n\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabelOpts.fontStyle, globalOpts.defaultFontStyle);\r\n\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabelOpts.fontFamily, globalOpts.defaultFontFamily);\r\n\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\r\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n\t\t\t// Width\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\r\n\t\t\t\tminSize.width = this.isFullWidth() ? this.maxWidth - this.margins.left - this.margins.right : this.maxWidth;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? tickMarkLength : 0;\r\n\t\t\t}\r\n\r\n\t\t\t// height\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.height = display ? tickMarkLength : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.height = this.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Are we showing a title for the scale?\r\n\t\t\tif (scaleLabelOpts.display && display) {\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize.height += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.display && display) {\r\n\t\t\t\t// Don't bother fitting the ticks if we are not showing them\r\n\t\t\t\tif (!this.longestTextCache) {\r\n\t\t\t\t\tthis.longestTextCache = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar largestTextWidth = helpers.longestText(this.ctx, tickLabelFont, this.ticks, this.longestTextCache);\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\r\n\t\t\t\t\tthis.longestLabelWidth = largestTextWidth;\r\n\r\n\t\t\t\t\t// TODO - improve this calculation\r\n\t\t\t\t\tvar labelHeight = (Math.sin(helpers.toRadians(this.labelRotation)) * this.longestLabelWidth) + 1.5 * tickFontSize;\r\n\r\n\t\t\t\t\tminSize.height = Math.min(this.maxHeight, minSize.height + labelHeight);\r\n\t\t\t\t\tthis.ctx.font = tickLabelFont;\r\n\r\n\t\t\t\t\tvar firstLabelWidth = this.ctx.measureText(this.ticks[0]).width;\r\n\t\t\t\t\tvar lastLabelWidth = this.ctx.measureText(this.ticks[this.ticks.length - 1]).width;\r\n\r\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\r\n\t\t\t\t\t// by the font height\r\n\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(this.labelRotation));\r\n\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(this.labelRotation));\r\n\t\t\t\t\tthis.paddingLeft = this.labelRotation !== 0 ? (cosRotation * firstLabelWidth) + 3 : firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n\t\t\t\t\tthis.paddingRight = this.labelRotation !== 0 ? (sinRotation * (tickFontSize / 2)) + 3 : lastLabelWidth / 2 + 3; // when rotated\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\r\n\t\t\t\t\tvar maxLabelWidth = this.maxWidth - minSize.width;\r\n\r\n\t\t\t\t\t// Account for padding\r\n\t\t\t\t\tvar mirror = tickOpts.mirror;\r\n\t\t\t\t\tif (!mirror) {\r\n\t\t\t\t\t\tlargestTextWidth += this.options.ticks.padding;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// If mirrored text is on the inside so don't expand\r\n\t\t\t\t\t\tlargestTextWidth = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (largestTextWidth < maxLabelWidth) {\r\n\t\t\t\t\t\t// We don't need all the room\r\n\t\t\t\t\t\tminSize.width += largestTextWidth;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Expand to max size\r\n\t\t\t\t\t\tminSize.width = this.maxWidth;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.paddingTop = tickFontSize / 2;\r\n\t\t\t\t\tthis.paddingBottom = tickFontSize / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.margins) {\r\n\t\t\t\tthis.paddingLeft = Math.max(this.paddingLeft - this.margins.left, 0);\r\n\t\t\t\tthis.paddingTop = Math.max(this.paddingTop - this.margins.top, 0);\r\n\t\t\t\tthis.paddingRight = Math.max(this.paddingRight - this.margins.right, 0);\r\n\t\t\t\tthis.paddingBottom = Math.max(this.paddingBottom - this.margins.bottom, 0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.width = minSize.width;\r\n\t\t\tthis.height = minSize.height;\r\n\r\n\t\t},\r\n\t\tafterFit: function() {\r\n\t\t\thelpers.callCallback(this.options.afterFit, [this]);\r\n\t\t},\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t},\r\n\t\tisFullWidth: function() {\r\n\t\t\treturn (this.options.fullWidth);\r\n\t\t},\r\n\r\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n\t\tgetRightValue: function getRightValue(rawValue) {\r\n\t\t\t// Null and undefined values first\r\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number\r\n\t\t\tif (typeof(rawValue) === 'number' && isNaN(rawValue)) {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// If it is in fact an object, dive in one more level\r\n\t\t\tif (typeof(rawValue) === \"object\") {\r\n\t\t\t\tif (rawValue instanceof Date) {\r\n\t\t\t\t\treturn rawValue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Value is good, return it\r\n\t\t\treturn rawValue;\r\n\t\t},\r\n\r\n\t\t// Used to get the value to display in the tooltip for the data at the given index\r\n\t\t// function getLabelForIndex(index, datasetIndex)\r\n\t\tgetLabelForIndex: helpers.noop,\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: helpers.noop,\r\n\r\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n\t\tgetValueForPixel: helpers.noop,\r\n\r\n\t\t// Used for tick location, should\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\tvar tickWidth = innerWidth / Math.max((this.ticks.length - ((this.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\t\tvar pixel = (tickWidth * index) + this.paddingLeft;\r\n\r\n\t\t\t\tif (includeOffset) {\r\n\t\t\t\t\tpixel += tickWidth / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar finalVal = this.left + Math.round(pixel);\r\n\t\t\t\tfinalVal += this.isFullWidth() ? this.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t} else {\r\n\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\treturn this.top + (index * (innerHeight / (this.ticks.length - 1)));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Utility for getting the pixel location of a percentage of scale\r\n\t\tgetPixelForDecimal: function(decimal /*, includeOffset*/ ) {\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + this.paddingLeft;\r\n\r\n\t\t\t\tvar finalVal = this.left + Math.round(valueOffset);\r\n\t\t\t\tfinalVal += this.isFullWidth() ? this.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.top + (decimal * this.height);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Actualy draw the scale on the canvas\r\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n\t\tdraw: function(chartArea) {\r\n\t\t\tif (this.options.display) {\r\n\r\n\t\t\t\tvar setContextLineSettings;\r\n\t\t\t\tvar isRotated = this.labelRotation !== 0;\r\n\t\t\t\tvar skipRatio;\r\n\t\t\t\tvar scaleLabelX;\r\n\t\t\t\tvar scaleLabelY;\r\n\t\t\t\tvar useAutoskipper = this.options.ticks.autoSkip;\r\n\r\n\r\n\t\t\t\t// figure out the maximum number of gridlines to show\r\n\t\t\t\tvar maxTicks;\r\n\r\n\t\t\t\tif (this.options.ticks.maxTicksLimit) {\r\n\t\t\t\t\tmaxTicks = this.options.ticks.maxTicksLimit;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tickFontColor = helpers.getValueOrDefault(this.options.ticks.fontColor, Chart.defaults.global.defaultFontColor);\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\t\tvar tl = this.options.gridLines.tickMarkLength;\r\n\r\n\t\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(this.options.scaleLabel.fontColor, Chart.defaults.global.defaultFontColor);\r\n\t\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(this.options.scaleLabel.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(this.options.scaleLabel.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(this.options.scaleLabel.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\r\n\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(this.labelRotation));\r\n\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(this.labelRotation));\r\n\t\t\t\tvar longestRotatedLabel = this.longestLabelWidth * cosRotation;\r\n\t\t\t\tvar rotatedLabelHeight = tickFontSize * sinRotation;\r\n\r\n\t\t\t\t// Make sure we draw text in the correct color and font\r\n\t\t\t\tthis.ctx.fillStyle = tickFontColor;\r\n\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\tsetContextLineSettings = true;\r\n\t\t\t\t\tvar yTickStart = this.options.position === \"bottom\" ? this.top : this.bottom - tl;\r\n\t\t\t\t\tvar yTickEnd = this.options.position === \"bottom\" ? this.top + tl : this.bottom;\r\n\t\t\t\t\tskipRatio = false;\r\n\r\n\t\t\t\t\tif (((longestRotatedLabel / 2) + this.options.ticks.autoSkipPadding) * this.ticks.length > (this.width - (this.paddingLeft + this.paddingRight))) {\r\n\t\t\t\t\t\tskipRatio = 1 + Math.floor((((longestRotatedLabel / 2) + this.options.ticks.autoSkipPadding) * this.ticks.length) / (this.width - (this.paddingLeft + this.paddingRight)));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if they defined a max number of ticks,\r\n\t\t\t\t\t// increase skipRatio until that number is met\r\n\t\t\t\t\tif (maxTicks && this.ticks.length > maxTicks) {\r\n\t\t\t\t\t\twhile (!skipRatio || this.ticks.length / (skipRatio || 1) > maxTicks) {\r\n\t\t\t\t\t\t\tif (!skipRatio) {\r\n\t\t\t\t\t\t\t\tskipRatio = 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tskipRatio += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!useAutoskipper) {\r\n\t\t\t\t\t\tskipRatio = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thelpers.each(this.ticks, function(label, index) {\r\n\t\t\t\t\t\t// Blank ticks\r\n\t\t\t\t\t\tvar isLastTick = this.ticks.length === index + 1;\r\n\r\n\t\t\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\r\n\t\t\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio > this.ticks.length);\r\n\t\t\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar xLineValue = this.getPixelForTick(index); // xvalues for grid lines\r\n\t\t\t\t\t\tvar xLabelValue = this.getPixelForTick(index, this.options.gridLines.offsetGridLines); // x values for ticks (need to consider offsetLabel option)\r\n\r\n\t\t\t\t\t\tif (this.options.gridLines.display) {\r\n\t\t\t\t\t\t\tif (index === (typeof this.zeroLineIndex !== 'undefined' ? this.zeroLineIndex : 0)) {\r\n\t\t\t\t\t\t\t\t// Draw the first index specially\r\n\t\t\t\t\t\t\t\tthis.ctx.lineWidth = this.options.gridLines.zeroLineWidth;\r\n\t\t\t\t\t\t\t\tthis.ctx.strokeStyle = this.options.gridLines.zeroLineColor;\r\n\t\t\t\t\t\t\t\tsetContextLineSettings = true; // reset next time\r\n\t\t\t\t\t\t\t} else if (setContextLineSettings) {\r\n\t\t\t\t\t\t\t\tthis.ctx.lineWidth = this.options.gridLines.lineWidth;\r\n\t\t\t\t\t\t\t\tthis.ctx.strokeStyle = this.options.gridLines.color;\r\n\t\t\t\t\t\t\t\tsetContextLineSettings = false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\txLineValue += helpers.aliasPixel(this.ctx.lineWidth);\r\n\r\n\t\t\t\t\t\t\t// Draw the label area\r\n\t\t\t\t\t\t\tthis.ctx.beginPath();\r\n\r\n\t\t\t\t\t\t\tif (this.options.gridLines.drawTicks) {\r\n\t\t\t\t\t\t\t\tthis.ctx.moveTo(xLineValue, yTickStart);\r\n\t\t\t\t\t\t\t\tthis.ctx.lineTo(xLineValue, yTickEnd);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Draw the chart area\r\n\t\t\t\t\t\t\tif (this.options.gridLines.drawOnChartArea) {\r\n\t\t\t\t\t\t\t\tthis.ctx.moveTo(xLineValue, chartArea.top);\r\n\t\t\t\t\t\t\t\tthis.ctx.lineTo(xLineValue, chartArea.bottom);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Need to stroke in the loop because we are potentially changing line widths & colours\r\n\t\t\t\t\t\t\tthis.ctx.stroke();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.options.ticks.display) {\r\n\t\t\t\t\t\t\tthis.ctx.save();\r\n\t\t\t\t\t\t\tthis.ctx.translate(xLabelValue + this.options.ticks.labelOffset, (isRotated) ? this.top + 12 : this.options.position === \"top\" ? this.bottom - tl : this.top + tl);\r\n\t\t\t\t\t\t\tthis.ctx.rotate(helpers.toRadians(this.labelRotation) * -1);\r\n\t\t\t\t\t\t\tthis.ctx.font = tickLabelFont;\r\n\t\t\t\t\t\t\tthis.ctx.textAlign = (isRotated) ? \"right\" : \"center\";\r\n\t\t\t\t\t\t\tthis.ctx.textBaseline = (isRotated) ? \"middle\" : this.options.position === \"top\" ? \"bottom\" : \"top\";\r\n\t\t\t\t\t\t\tthis.ctx.fillText(label, 0, 0);\r\n\t\t\t\t\t\t\tthis.ctx.restore();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\tif (this.options.scaleLabel.display) {\r\n\t\t\t\t\t\t// Draw the scale label\r\n\t\t\t\t\t\tthis.ctx.textAlign = \"center\";\r\n\t\t\t\t\t\tthis.ctx.textBaseline = 'middle';\r\n\t\t\t\t\t\tthis.ctx.fillStyle = scaleLabelFontColor; // render in correct colour\r\n\t\t\t\t\t\tthis.ctx.font = scaleLabelFont;\r\n\r\n\t\t\t\t\t\tscaleLabelX = this.left + ((this.right - this.left) / 2); // midpoint of the width\r\n\t\t\t\t\t\tscaleLabelY = this.options.position === 'bottom' ? this.bottom - (scaleLabelFontSize / 2) : this.top + (scaleLabelFontSize / 2);\r\n\r\n\t\t\t\t\t\tthis.ctx.fillText(this.options.scaleLabel.labelString, scaleLabelX, scaleLabelY);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetContextLineSettings = true;\r\n\t\t\t\t\tvar xTickStart = this.options.position === \"right\" ? this.left : this.right - 5;\r\n\t\t\t\t\tvar xTickEnd = this.options.position === \"right\" ? this.left + 5 : this.right;\r\n\r\n\t\t\t\t\thelpers.each(this.ticks, function(label, index) {\r\n\t\t\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\r\n\t\t\t\t\t\tif (label === undefined || label === null) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar yLineValue = this.getPixelForTick(index); // xvalues for grid lines\r\n\r\n\t\t\t\t\t\tif (this.options.gridLines.display) {\r\n\t\t\t\t\t\t\tif (index === (typeof this.zeroLineIndex !== 'undefined' ? this.zeroLineIndex : 0)) {\r\n\t\t\t\t\t\t\t\t// Draw the first index specially\r\n\t\t\t\t\t\t\t\tthis.ctx.lineWidth = this.options.gridLines.zeroLineWidth;\r\n\t\t\t\t\t\t\t\tthis.ctx.strokeStyle = this.options.gridLines.zeroLineColor;\r\n\t\t\t\t\t\t\t\tsetContextLineSettings = true; // reset next time\r\n\t\t\t\t\t\t\t} else if (setContextLineSettings) {\r\n\t\t\t\t\t\t\t\tthis.ctx.lineWidth = this.options.gridLines.lineWidth;\r\n\t\t\t\t\t\t\t\tthis.ctx.strokeStyle = this.options.gridLines.color;\r\n\t\t\t\t\t\t\t\tsetContextLineSettings = false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tyLineValue += helpers.aliasPixel(this.ctx.lineWidth);\r\n\r\n\t\t\t\t\t\t\t// Draw the label area\r\n\t\t\t\t\t\t\tthis.ctx.beginPath();\r\n\r\n\t\t\t\t\t\t\tif (this.options.gridLines.drawTicks) {\r\n\t\t\t\t\t\t\t\tthis.ctx.moveTo(xTickStart, yLineValue);\r\n\t\t\t\t\t\t\t\tthis.ctx.lineTo(xTickEnd, yLineValue);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Draw the chart area\r\n\t\t\t\t\t\t\tif (this.options.gridLines.drawOnChartArea) {\r\n\t\t\t\t\t\t\t\tthis.ctx.moveTo(chartArea.left, yLineValue);\r\n\t\t\t\t\t\t\t\tthis.ctx.lineTo(chartArea.right, yLineValue);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Need to stroke in the loop because we are potentially changing line widths & colours\r\n\t\t\t\t\t\t\tthis.ctx.stroke();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.options.ticks.display) {\r\n\t\t\t\t\t\t\tvar xLabelValue;\r\n\t\t\t\t\t\t\tvar yLabelValue = this.getPixelForTick(index, this.options.gridLines.offsetGridLines); // x values for ticks (need to consider offsetLabel option)\r\n\r\n\t\t\t\t\t\t\tthis.ctx.save();\r\n\r\n\t\t\t\t\t\t\tif (this.options.position === \"left\") {\r\n\t\t\t\t\t\t\t\tif (this.options.ticks.mirror) {\r\n\t\t\t\t\t\t\t\t\txLabelValue = this.right + this.options.ticks.padding;\r\n\t\t\t\t\t\t\t\t\tthis.ctx.textAlign = \"left\";\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\txLabelValue = this.right - this.options.ticks.padding;\r\n\t\t\t\t\t\t\t\t\tthis.ctx.textAlign = \"right\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// right side\r\n\t\t\t\t\t\t\t\tif (this.options.ticks.mirror) {\r\n\t\t\t\t\t\t\t\t\txLabelValue = this.left - this.options.ticks.padding;\r\n\t\t\t\t\t\t\t\t\tthis.ctx.textAlign = \"right\";\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\txLabelValue = this.left + this.options.ticks.padding;\r\n\t\t\t\t\t\t\t\t\tthis.ctx.textAlign = \"left\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.ctx.translate(xLabelValue, yLabelValue + this.options.ticks.labelOffset);\r\n\t\t\t\t\t\t\tthis.ctx.rotate(helpers.toRadians(this.labelRotation) * -1);\r\n\t\t\t\t\t\t\tthis.ctx.font = tickLabelFont;\r\n\t\t\t\t\t\t\tthis.ctx.textBaseline = \"middle\";\r\n\t\t\t\t\t\t\tthis.ctx.fillText(label, 0, 0);\r\n\t\t\t\t\t\t\tthis.ctx.restore();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\tif (this.options.scaleLabel.display) {\r\n\t\t\t\t\t\t// Draw the scale label\r\n\t\t\t\t\t\tscaleLabelX = this.options.position === 'left' ? this.left + (scaleLabelFontSize / 2) : this.right - (scaleLabelFontSize / 2);\r\n\t\t\t\t\t\tscaleLabelY = this.top + ((this.bottom - this.top) / 2);\r\n\t\t\t\t\t\tvar rotation = this.options.position === 'left' ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n\r\n\t\t\t\t\t\tthis.ctx.save();\r\n\t\t\t\t\t\tthis.ctx.translate(scaleLabelX, scaleLabelY);\r\n\t\t\t\t\t\tthis.ctx.rotate(rotation);\r\n\t\t\t\t\t\tthis.ctx.textAlign = \"center\";\r\n\t\t\t\t\t\tthis.ctx.fillStyle =scaleLabelFontColor; // render in correct colour\r\n\t\t\t\t\t\tthis.ctx.font = scaleLabelFont;\r\n\t\t\t\t\t\tthis.ctx.textBaseline = 'middle';\r\n\t\t\t\t\t\tthis.ctx.fillText(this.options.scaleLabel.labelString, 0, 0);\r\n\t\t\t\t\t\tthis.ctx.restore();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Draw the line at the edge of the axis\r\n\t\t\t\tthis.ctx.lineWidth = this.options.gridLines.lineWidth;\r\n\t\t\t\tthis.ctx.strokeStyle = this.options.gridLines.color;\r\n\t\t\t\tvar x1 = this.left,\r\n\t\t\t\t\tx2 = this.right,\r\n\t\t\t\t\ty1 = this.top,\r\n\t\t\t\t\ty2 = this.bottom;\r\n\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\ty1 = y2 = this.options.position === 'top' ? this.bottom : this.top;\r\n\t\t\t\t\ty1 += helpers.aliasPixel(this.ctx.lineWidth);\r\n\t\t\t\t\ty2 += helpers.aliasPixel(this.ctx.lineWidth);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = x2 = this.options.position === 'left' ? this.right : this.left;\r\n\t\t\t\t\tx1 += helpers.aliasPixel(this.ctx.lineWidth);\r\n\t\t\t\t\tx2 += helpers.aliasPixel(this.ctx.lineWidth);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.ctx.beginPath();\r\n\t\t\t\tthis.ctx.moveTo(x1, y1);\r\n\t\t\t\tthis.ctx.lineTo(x2, y2);\r\n\t\t\t\tthis.ctx.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],31:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.scaleService = {\r\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n\t\t// use the new chart options to grab the correct scale\r\n\t\tconstructors: {},\r\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n\t\t// old browsers\r\n\r\n\t\t// Scale config defaults\r\n\t\tdefaults: {},\r\n\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\r\n\t\t\tthis.constructors[type] = scaleConstructor;\r\n\t\t\tthis.defaults[type] = helpers.clone(defaults);\r\n\t\t},\r\n\t\tgetScaleConstructor: function(type) {\r\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n\t\t},\r\n\t\tgetScaleDefaults: function(type) {\r\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\r\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\r\n\t\t},\r\n\t\tupdateScaleDefaults: function(type, additions) {\r\n\t\t\tvar defaults = this.defaults;\r\n\t\t\tif (defaults.hasOwnProperty(type)) {\r\n\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\r\n\t\t\t}\r\n\t\t},\r\n\t\taddScalesToLayout: function(chartInstance) {\r\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\r\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\r\n\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\n},{}],32:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.title = {\r\n\t\tdisplay: false,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\r\n\t\tfontStyle: 'bold',\r\n\t\tpadding: 10,\r\n\r\n\t\t// actual title\r\n\t\ttext: ''\r\n\t};\r\n\r\n\tvar noop = helpers.noop;\r\n\tChart.Title = Chart.Element.extend({\r\n\r\n\t\tinitialize: function(config) {\r\n\t\t\thelpers.extend(this, config);\r\n\t\t\tthis.options = helpers.configMerge(Chart.defaults.global.title, config.options);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tthis.legendHitBoxes = [];\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\r\n\t\tbeforeUpdate: noop,\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tthis.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tthis.maxWidth = maxWidth;\r\n\t\t\tthis.maxHeight = maxHeight;\r\n\t\t\tthis.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tthis.beforeSetDimensions();\r\n\t\t\tthis.setDimensions();\r\n\t\t\tthis.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tthis.beforeBuildLabels();\r\n\t\t\tthis.buildLabels();\r\n\t\t\tthis.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tthis.beforeFit();\r\n\t\t\tthis.fit();\r\n\t\t\tthis.afterFit();\r\n\t\t\t//\r\n\t\t\tthis.afterUpdate();\r\n\r\n\t\t\treturn this.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.width = this.maxWidth;\r\n\t\t\t\tthis.left = 0;\r\n\t\t\t\tthis.right = this.width;\r\n\t\t\t} else {\r\n\t\t\t\tthis.height = this.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tthis.top = 0;\r\n\t\t\t\tthis.bottom = this.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tthis.paddingLeft = 0;\r\n\t\t\tthis.paddingTop = 0;\r\n\t\t\tthis.paddingRight = 0;\r\n\t\t\tthis.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tthis.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: noop,\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\r\n\t\t\tvar ctx = this.ctx,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = this.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global,\r\n\t\t\t\tdisplay = opts.display,\r\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\tminSize = this.minSize;\r\n\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tminSize.width = this.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t\tminSize.height = this.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\tthis.width = minSize.width;\r\n\t\t\tthis.height = minSize.height;\r\n\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\tvar pos = this.options.position;\r\n\t\t\treturn pos === \"top\" || pos === \"bottom\";\r\n\t\t},\r\n\r\n\t\t// Actualy draw the title block on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar ctx = this.ctx,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = this.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\r\n\t\t\t\t\trotation = 0,\r\n\t\t\t\t\ttitleX, \r\n\t\t\t\t\ttitleY;\r\n\r\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n\t\t\t\tctx.font = titleFont;\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\ttitleX = this.left + ((this.right - this.left) / 2); // midpoint of the width\r\n\t\t\t\t\ttitleY = this.top + ((this.bottom - this.top) / 2); // midpoint of the height\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttitleX = opts.position === 'left' ? this.left + (fontSize / 2) : this.right - (fontSize / 2);\r\n\t\t\t\t\ttitleY = this.top + ((this.bottom - this.top) / 2);\r\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.save();\r\n\t\t\t\tctx.translate(titleX, titleY);\r\n\t\t\t\tctx.rotate(rotation);\r\n\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\tctx.fillText(opts.text, 0, 0);\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\n},{}],33:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.tooltips = {\r\n\t\tenabled: true,\r\n\t\tcustom: null,\r\n\t\tmode: 'single',\r\n\t\tbackgroundColor: \"rgba(0,0,0,0.8)\",\r\n\t\ttitleFontStyle: \"bold\",\r\n\t\ttitleSpacing: 2,\r\n\t\ttitleMarginBottom: 6,\r\n\t\ttitleColor: \"#fff\",\r\n\t\ttitleAlign: \"left\",\r\n\t\tbodySpacing: 2,\r\n\t\tbodyColor: \"#fff\",\r\n\t\tbodyAlign: \"left\",\r\n\t\tfooterFontStyle: \"bold\",\r\n\t\tfooterSpacing: 2,\r\n\t\tfooterMarginTop: 6,\r\n\t\tfooterColor: \"#fff\",\r\n\t\tfooterAlign: \"left\",\r\n\t\tyPadding: 6,\r\n\t\txPadding: 6,\r\n\t\tyAlign : 'center',\r\n\t\txAlign : 'center',\r\n\t\tcaretSize: 5,\r\n\t\tcornerRadius: 6,\r\n\t\tmultiKeyBackground: '#fff',\r\n\t\tcallbacks: {\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeTitle: helpers.noop,\r\n\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\tvar title = '';\r\n\r\n\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\tif (tooltipItems[0].xLabel) {\r\n\t\t\t\t\t\ttitle = tooltipItems[0].xLabel;\r\n\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn title;\r\n\t\t\t},\r\n\t\t\tafterTitle: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tbeforeLabel: helpers.noop,\r\n\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\r\n\t\t\t},\r\n\t\t\tafterLabel: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tafterBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeFooter: helpers.noop,\r\n\t\t\tfooter: helpers.noop,\r\n\t\t\tafterFooter: helpers.noop\r\n\t\t}\r\n\t};\r\n\r\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\r\n\tfunction pushOrConcat(base, toPush) {\r\n\t\tif (toPush) {\r\n\t\t\tif (helpers.isArray(toPush)) {\r\n\t\t\t\tbase = base.concat(toPush);\r\n\t\t\t} else {\r\n\t\t\t\tbase.push(toPush);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn base;\r\n\t}\r\n\r\n\tChart.Tooltip = Chart.Element.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tvar options = this._options;\r\n\t\t\thelpers.extend(this, {\r\n\t\t\t\t_model: {\r\n\t\t\t\t\t// Positioning\r\n\t\t\t\t\txPadding: options.tooltips.xPadding,\r\n\t\t\t\t\tyPadding: options.tooltips.yPadding,\r\n\t\t\t\t\txAlign : options.tooltips.yAlign,\r\n\t\t\t\t\tyAlign : options.tooltips.xAlign,\r\n\r\n\t\t\t\t\t// Body\r\n\t\t\t\t\tbodyColor: options.tooltips.bodyColor,\r\n\t\t\t\t\t_bodyFontFamily: helpers.getValueOrDefault(options.tooltips.bodyFontFamily, Chart.defaults.global.defaultFontFamily),\r\n\t\t\t\t\t_bodyFontStyle: helpers.getValueOrDefault(options.tooltips.bodyFontStyle, Chart.defaults.global.defaultFontStyle),\r\n\t\t\t\t\t_bodyAlign: options.tooltips.bodyAlign,\r\n\t\t\t\t\tbodyFontSize: helpers.getValueOrDefault(options.tooltips.bodyFontSize, Chart.defaults.global.defaultFontSize),\r\n\t\t\t\t\tbodySpacing: options.tooltips.bodySpacing,\r\n\r\n\t\t\t\t\t// Title\r\n\t\t\t\t\ttitleColor: options.tooltips.titleColor,\r\n\t\t\t\t\t_titleFontFamily: helpers.getValueOrDefault(options.tooltips.titleFontFamily, Chart.defaults.global.defaultFontFamily),\r\n\t\t\t\t\t_titleFontStyle: helpers.getValueOrDefault(options.tooltips.titleFontStyle, Chart.defaults.global.defaultFontStyle),\r\n\t\t\t\t\ttitleFontSize: helpers.getValueOrDefault(options.tooltips.titleFontSize, Chart.defaults.global.defaultFontSize),\r\n\t\t\t\t\t_titleAlign: options.tooltips.titleAlign,\r\n\t\t\t\t\ttitleSpacing: options.tooltips.titleSpacing,\r\n\t\t\t\t\ttitleMarginBottom: options.tooltips.titleMarginBottom,\r\n\r\n\t\t\t\t\t// Footer\r\n\t\t\t\t\tfooterColor: options.tooltips.footerColor,\r\n\t\t\t\t\t_footerFontFamily: helpers.getValueOrDefault(options.tooltips.footerFontFamily, Chart.defaults.global.defaultFontFamily),\r\n\t\t\t\t\t_footerFontStyle: helpers.getValueOrDefault(options.tooltips.footerFontStyle, Chart.defaults.global.defaultFontStyle),\r\n\t\t\t\t\tfooterFontSize: helpers.getValueOrDefault(options.tooltips.footerFontSize, Chart.defaults.global.defaultFontSize),\r\n\t\t\t\t\t_footerAlign: options.tooltips.footerAlign,\r\n\t\t\t\t\tfooterSpacing: options.tooltips.footerSpacing,\r\n\t\t\t\t\tfooterMarginTop: options.tooltips.footerMarginTop,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tcaretSize: options.tooltips.caretSize,\r\n\t\t\t\t\tcornerRadius: options.tooltips.cornerRadius,\r\n\t\t\t\t\tbackgroundColor: options.tooltips.backgroundColor,\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tlegendColorBackground: options.tooltips.multiKeyBackground\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// Get the title\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetTitle: function() {\r\n\t\t\tvar beforeTitle = this._options.tooltips.callbacks.beforeTitle.apply(this, arguments),\r\n\t\t\t\ttitle = this._options.tooltips.callbacks.title.apply(this, arguments),\r\n\t\t\t\tafterTitle = this._options.tooltips.callbacks.afterTitle.apply(this, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\r\n\t\t\tlines = pushOrConcat(lines, title);\r\n\t\t\tlines = pushOrConcat(lines, afterTitle);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBeforeBody: function() {\r\n\t\t\tvar lines = this._options.tooltips.callbacks.beforeBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBody: function(tooltipItems, data) {\r\n\t\t\tvar lines = [];\r\n\r\n\t\t\thelpers.each(tooltipItems, function(bodyItem) {\r\n\t\t\t\thelpers.pushAllIfDefined(this._options.tooltips.callbacks.beforeLabel.call(this, bodyItem, data), lines);\r\n\t\t\t\thelpers.pushAllIfDefined(this._options.tooltips.callbacks.label.call(this, bodyItem, data), lines);\r\n\t\t\t\thelpers.pushAllIfDefined(this._options.tooltips.callbacks.afterLabel.call(this, bodyItem, data), lines);\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetAfterBody: function() {\r\n\t\t\tvar lines = this._options.tooltips.callbacks.afterBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Get the footer and beforeFooter and afterFooter lines\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetFooter: function() {\r\n\t\t\tvar beforeFooter = this._options.tooltips.callbacks.beforeFooter.apply(this, arguments);\r\n\t\t\tvar footer = this._options.tooltips.callbacks.footer.apply(this, arguments);\r\n\t\t\tvar afterFooter = this._options.tooltips.callbacks.afterFooter.apply(this, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\r\n\t\t\tlines = pushOrConcat(lines, footer);\r\n\t\t\tlines = pushOrConcat(lines, afterFooter);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\tgetAveragePosition: function(elements) {\r\n\r\n\t\t\tif (!elements.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar xPositions = [];\r\n\t\t\tvar yPositions = [];\r\n\r\n\t\t\thelpers.each(elements, function(el) {\r\n\t\t\t\tif (el) {\r\n\t\t\t\t\tvar pos = el.tooltipPosition();\r\n\t\t\t\t\txPositions.push(pos.x);\r\n\t\t\t\t\tyPositions.push(pos.y);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar x = 0,\r\n\t\t\t\ty = 0;\r\n\t\t\tfor (var i = 0; i < xPositions.length; i++) {\r\n\t\t\t\tx += xPositions[i];\r\n\t\t\t\ty += yPositions[i];\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: Math.round(x / xPositions.length),\r\n\t\t\t\ty: Math.round(y / xPositions.length)\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\tupdate: function(changed) {\r\n\t\t\tif (this._active.length) {\r\n\t\t\t\tthis._model.opacity = 1;\r\n\r\n\t\t\t\tvar element = this._active[0],\r\n\t\t\t\t\tlabelColors = [],\r\n\t\t\t\t\ttooltipPosition;\r\n\r\n\t\t\t\tvar tooltipItems = [];\r\n\r\n\t\t\t\tif (this._options.tooltips.mode === 'single') {\r\n\t\t\t\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n\t\t\t\t\ttooltipItems.push({\r\n\t\t\t\t\t\txLabel: element._xScale ? element._xScale.getLabelForIndex(element._index, element._datasetIndex) : '',\r\n\t\t\t\t\t\tyLabel: yScale ? yScale.getLabelForIndex(element._index, element._datasetIndex) : '',\r\n\t\t\t\t\t\tindex: element._index,\r\n\t\t\t\t\t\tdatasetIndex: element._datasetIndex\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttooltipPosition = this.getAveragePosition(this._active);\r\n\t\t\t\t} else {\r\n\t\t\t\t\thelpers.each(this._data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\t\tif (!this._chartInstance.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar meta = this._chartInstance.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\tvar currentElement = meta.data[element._index];\r\n\t\t\t\t\t\tif (currentElement) {\r\n\t\t\t\t\t\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n\r\n\t\t\t\t\t\t\ttooltipItems.push({\r\n\t\t\t\t\t\t\t\txLabel: currentElement._xScale ? currentElement._xScale.getLabelForIndex(currentElement._index, currentElement._datasetIndex) : '',\r\n\t\t\t\t\t\t\t\tyLabel: yScale ? yScale.getLabelForIndex(currentElement._index, currentElement._datasetIndex) : '',\r\n\t\t\t\t\t\t\t\tindex: element._index,\r\n\t\t\t\t\t\t\t\tdatasetIndex: datasetIndex\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\thelpers.each(this._active, function(active) {\r\n\t\t\t\t\t\tif (active) {\r\n\t\t\t\t\t\t\tlabelColors.push({\r\n\t\t\t\t\t\t\t\tborderColor: active._view.borderColor,\r\n\t\t\t\t\t\t\t\tbackgroundColor: active._view.backgroundColor\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, null);\r\n\r\n\t\t\t\t\ttooltipPosition = this.getAveragePosition(this._active);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build the Text Lines\r\n\t\t\t\thelpers.extend(this._model, {\r\n\t\t\t\t\ttitle: this.getTitle(tooltipItems, this._data),\r\n\t\t\t\t\tbeforeBody: this.getBeforeBody(tooltipItems, this._data),\r\n\t\t\t\t\tbody: this.getBody(tooltipItems, this._data),\r\n\t\t\t\t\tafterBody: this.getAfterBody(tooltipItems, this._data),\r\n\t\t\t\t\tfooter: this.getFooter(tooltipItems, this._data)\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.extend(this._model, {\r\n\t\t\t\t\tx: Math.round(tooltipPosition.x),\r\n\t\t\t\t\ty: Math.round(tooltipPosition.y),\r\n\t\t\t\t\tcaretPadding: helpers.getValueOrDefault(tooltipPosition.padding, 2),\r\n\t\t\t\t\tlabelColors: labelColors\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// We need to determine alignment of\r\n\t\t\t\tvar tooltipSize = this.getTooltipSize(this._model);\r\n\t\t\t\tthis.determineAlignment(tooltipSize); // Smart Tooltip placement to stay on the canvas\r\n\r\n\t\t\t\thelpers.extend(this._model, this.getBackgroundPoint(this._model, tooltipSize));\r\n\t\t\t} else {\r\n\t\t\t\tthis._model.opacity = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (changed && this._options.tooltips.custom) {\r\n\t\t\t\tthis._options.tooltips.custom.call(this, this._model);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tgetTooltipSize: function getTooltipSize(vm) {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\r\n\t\t\tvar size = {\r\n\t\t\t\theight: vm.yPadding * 2, // Tooltip Padding\r\n\t\t\t\twidth: 0\r\n\t\t\t};\r\n\t\t\tvar combinedBodyLength = vm.body.length + vm.beforeBody.length + vm.afterBody.length;\r\n\r\n\t\t\tsize.height += vm.title.length * vm.titleFontSize; // Title Lines\r\n\t\t\tsize.height += (vm.title.length - 1) * vm.titleSpacing; // Title Line Spacing\r\n\t\t\tsize.height += vm.title.length ? vm.titleMarginBottom : 0; // Title's bottom Margin\r\n\t\t\tsize.height += combinedBodyLength * vm.bodyFontSize; // Body Lines\r\n\t\t\tsize.height += combinedBodyLength ? (combinedBodyLength - 1) * vm.bodySpacing : 0; // Body Line Spacing\r\n\t\t\tsize.height += vm.footer.length ? vm.footerMarginTop : 0; // Footer Margin\r\n\t\t\tsize.height += vm.footer.length * (vm.footerFontSize); // Footer Lines\r\n\t\t\tsize.height += vm.footer.length ? (vm.footer.length - 1) * vm.footerSpacing : 0; // Footer Line Spacing\r\n\r\n\t\t\t// Width\r\n\t\t\tctx.font = helpers.fontString(vm.titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\t\t\thelpers.each(vm.title, function(line) {\r\n\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width);\r\n\t\t\t});\r\n\r\n\t\t\tctx.font = helpers.fontString(vm.bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\t\t\thelpers.each(vm.beforeBody.concat(vm.afterBody), function(line) {\r\n\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width);\r\n\t\t\t});\r\n\t\t\thelpers.each(vm.body, function(line) {\r\n\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width + (this._options.tooltips.mode !== 'single' ? (vm.bodyFontSize + 2) : 0));\r\n\t\t\t}, this);\r\n\r\n\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\t\t\thelpers.each(vm.footer, function(line) {\r\n\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width);\r\n\t\t\t});\r\n\t\t\tsize.width += 2 * vm.xPadding;\r\n\r\n\t\t\treturn size;\r\n\t\t},\r\n\t\tdetermineAlignment: function determineAlignment(size) {\r\n\t\t\tif (this._model.y < size.height) {\r\n\t\t\t\tthis._model.yAlign = 'top';\r\n\t\t\t} else if (this._model.y > (this._chart.height - size.height)) {\r\n\t\t\t\tthis._model.yAlign = 'bottom';\r\n\t\t\t}\r\n\r\n\t\t\tvar lf, rf; // functions to determine left, right alignment\r\n\t\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n\t\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n\t\t\tvar _this = this;\r\n\t\t\tvar midX = (this._chartInstance.chartArea.left + this._chartInstance.chartArea.right) / 2;\r\n\t\t\tvar midY = (this._chartInstance.chartArea.top + this._chartInstance.chartArea.bottom) / 2;\r\n\r\n\t\t\tif (this._model.yAlign === 'center') {\r\n\t\t\t\tlf = function(x) {\r\n\t\t\t\t\treturn x <= midX;\r\n\t\t\t\t};\r\n\t\t\t\trf = function(x) {\r\n\t\t\t\t\treturn x > midX;\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tlf = function(x) {\r\n\t\t\t\t\treturn x <= (size.width / 2);\r\n\t\t\t\t};\r\n\t\t\t\trf = function(x) {\r\n\t\t\t\t\treturn x >= (_this._chart.width - (size.width / 2));\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tolf = function(x) {\r\n\t\t\t\treturn x + size.width > _this._chart.width;\r\n\t\t\t};\r\n\t\t\torf = function(x) {\r\n\t\t\t\treturn x - size.width < 0;\r\n\t\t\t};\r\n\t\t\tyf = function(y) {\r\n\t\t\t\treturn y <= midY ? 'top' : 'bottom';\r\n\t\t\t};\r\n\r\n\t\t\tif (lf(this._model.x)) {\r\n\t\t\t\tthis._model.xAlign = 'left';\r\n\r\n\t\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\r\n\t\t\t\tif (olf(this._model.x)) {\r\n\t\t\t\t\tthis._model.xAlign = 'center';\r\n\t\t\t\t\tthis._model.yAlign = yf(this._model.y);\r\n\t\t\t\t}\r\n\t\t\t} else if (rf(this._model.x)) {\r\n\t\t\t\tthis._model.xAlign = 'right';\r\n\r\n\t\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\r\n\t\t\t\tif (orf(this._model.x)) {\r\n\t\t\t\t\tthis._model.xAlign = 'center';\r\n\t\t\t\t\tthis._model.yAlign = yf(this._model.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetBackgroundPoint: function getBackgroundPoint(vm, size) {\r\n\t\t\t// Background Position\r\n\t\t\tvar pt = {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\r\n\t\t\tif (vm.xAlign === 'right') {\r\n\t\t\t\tpt.x -= size.width;\r\n\t\t\t} else if (vm.xAlign === 'center') {\r\n\t\t\t\tpt.x -= (size.width / 2);\r\n\t\t\t}\r\n\r\n\t\t\tif (vm.yAlign === 'top') {\r\n\t\t\t\tpt.y += vm.caretPadding + vm.caretSize;\r\n\t\t\t} else if (vm.yAlign === 'bottom') {\r\n\t\t\t\tpt.y -= size.height + vm.caretPadding + vm.caretSize;\r\n\t\t\t} else {\r\n\t\t\t\tpt.y -= (size.height / 2);\r\n\t\t\t}\r\n\r\n\t\t\tif (vm.yAlign === 'center') {\r\n\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\tpt.x += vm.caretPadding + vm.caretSize;\r\n\t\t\t\t} else if (vm.xAlign === 'right') {\r\n\t\t\t\t\tpt.x -= vm.caretPadding + vm.caretSize;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\tpt.x -= vm.cornerRadius + vm.caretPadding;\r\n\t\t\t\t} else if (vm.xAlign === 'right') {\r\n\t\t\t\t\tpt.x += vm.cornerRadius + vm.caretPadding;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn pt;\r\n\t\t},\r\n\t\tdrawCaret: function drawCaret(tooltipPoint, size, opacity, caretPadding) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar x1, x2, x3;\r\n\t\t\tvar y1, y2, y3;\r\n\r\n\t\t\tif (vm.yAlign === 'center') {\r\n\t\t\t\t// Left or right side\r\n\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\tx1 = tooltipPoint.x;\r\n\t\t\t\t\tx2 = x1 - vm.caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = tooltipPoint.x + size.width;\r\n\t\t\t\t\tx2 = x1 + vm.caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ty2 = tooltipPoint.y + (size.height / 2);\r\n\t\t\t\ty1 = y2 - vm.caretSize;\r\n\t\t\t\ty3 = y2 + vm.caretSize;\r\n\t\t\t} else {\r\n\t\t\t\tif (vm.xAlign === 'left') {\r\n\t\t\t\t\tx1 = tooltipPoint.x + vm.cornerRadius;\r\n\t\t\t\t\tx2 = x1 + vm.caretSize;\r\n\t\t\t\t\tx3 = x2 + vm.caretSize;\r\n\t\t\t\t} else if (vm.xAlign === 'right') {\r\n\t\t\t\t\tx1 = tooltipPoint.x + size.width - vm.cornerRadius;\r\n\t\t\t\t\tx2 = x1 - vm.caretSize;\r\n\t\t\t\t\tx3 = x2 - vm.caretSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx2 = tooltipPoint.x + (size.width / 2);\r\n\t\t\t\t\tx1 = x2 - vm.caretSize;\r\n\t\t\t\t\tx3 = x2 + vm.caretSize;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vm.yAlign === 'top') {\r\n\t\t\t\t\ty1 = tooltipPoint.y;\r\n\t\t\t\t\ty2 = y1 - vm.caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty1 = tooltipPoint.y + size.height;\r\n\t\t\t\t\ty2 = y1 + vm.caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x1, y1);\r\n\t\t\tctx.lineTo(x2, y2);\r\n\t\t\tctx.lineTo(x3, y3);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t},\r\n\t\tdrawTitle: function drawTitle(pt, vm, ctx, opacity) {\r\n\t\t\tif (vm.title.length) {\r\n\t\t\t\tctx.textAlign = vm._titleAlign;\r\n\t\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\t\tvar titleColor = helpers.color(vm.titleColor);\r\n\t\t\t\tctx.fillStyle = titleColor.alpha(opacity * titleColor.alpha()).rgbString();\r\n\t\t\t\tctx.font = helpers.fontString(vm.titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n\t\t\t\thelpers.each(vm.title, function(title, i) {\r\n\t\t\t\t\tctx.fillText(title, pt.x, pt.y);\r\n\t\t\t\t\tpt.y += vm.titleFontSize + vm.titleSpacing; // Line Height and spacing\r\n\r\n\t\t\t\t\tif (i + 1 === vm.title.length) {\r\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - vm.titleSpacing; // If Last, add margin, remove spacing\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrawBody: function drawBody(pt, vm, ctx, opacity) {\r\n\t\t\tctx.textAlign = vm._bodyAlign;\r\n\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\tvar bodyColor = helpers.color(vm.bodyColor);\r\n\t\t\tctx.fillStyle = bodyColor.alpha(opacity * bodyColor.alpha()).rgbString();\r\n\t\t\tctx.font = helpers.fontString(vm.bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n\t\t\t// Before Body\r\n\t\t\thelpers.each(vm.beforeBody, function(beforeBody) {\r\n\t\t\t\tctx.fillText(beforeBody, pt.x, pt.y);\r\n\t\t\t\tpt.y += vm.bodyFontSize + vm.bodySpacing;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(vm.body, function(body, i) {\r\n\t\t\t\t// Draw Legend-like boxes if needed\r\n\t\t\t\tif (this._options.tooltips.mode !== 'single') {\r\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\r\n\t\t\t\t\tctx.fillStyle = helpers.color(vm.legendColorBackground).alpha(opacity).rgbaString();\r\n\t\t\t\t\tctx.fillRect(pt.x, pt.y, vm.bodyFontSize, vm.bodyFontSize);\r\n\r\n\t\t\t\t\t// Border\r\n\t\t\t\t\tctx.strokeStyle = helpers.color(vm.labelColors[i].borderColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\tctx.strokeRect(pt.x, pt.y, vm.bodyFontSize, vm.bodyFontSize);\r\n\r\n\t\t\t\t\t// Inner square\r\n\t\t\t\t\tctx.fillStyle = helpers.color(vm.labelColors[i].backgroundColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, vm.bodyFontSize - 2, vm.bodyFontSize - 2);\r\n\r\n\t\t\t\t\tctx.fillStyle = helpers.color(vm.bodyColor).alpha(opacity).rgbaString(); // Return fill style for text\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Body Line\r\n\t\t\t\tctx.fillText(body, pt.x + (this._options.tooltips.mode !== 'single' ? (vm.bodyFontSize + 2) : 0), pt.y);\r\n\r\n\t\t\t\tpt.y += vm.bodyFontSize + vm.bodySpacing;\r\n\t\t\t}, this);\r\n\r\n\t\t\t// After Body\r\n\t\t\thelpers.each(vm.afterBody, function(afterBody) {\r\n\t\t\t\tctx.fillText(afterBody, pt.x, pt.y);\r\n\t\t\t\tpt.y += vm.bodyFontSize;\r\n\t\t\t});\r\n\r\n\t\t\tpt.y -= vm.bodySpacing; // Remove last body spacing\r\n\t\t},\r\n\t\tdrawFooter: function drawFooter(pt, vm, ctx, opacity) {\r\n\t\t\tif (vm.footer.length) {\r\n\t\t\t\tpt.y += vm.footerMarginTop;\r\n\r\n\t\t\t\tctx.textAlign = vm._footerAlign;\r\n\t\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\t\tvar footerColor = helpers.color(vm.footerColor);\r\n\t\t\t\tctx.fillStyle = footerColor.alpha(opacity * footerColor.alpha()).rgbString();\r\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n\t\t\t\thelpers.each(vm.footer, function(footer) {\r\n\t\t\t\t\tctx.fillText(footer, pt.x, pt.y);\r\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tdraw: function draw() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tif (vm.opacity === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar caretPadding = vm.caretPadding;\r\n\t\t\tvar tooltipSize = this.getTooltipSize(vm);\r\n\t\t\tvar pt = {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\r\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\r\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n\t\t\tif (this._options.tooltips.enabled) {\r\n\t\t\t\t// Draw Background\r\n\t\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\r\n\t\t\t\tctx.fill();\r\n\r\n\t\t\t\t// Draw Caret\r\n\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity, caretPadding);\r\n\r\n\t\t\t\t// Draw Title, Body, and Footer\r\n\t\t\t\tpt.x += vm.xPadding;\r\n\t\t\t\tpt.y += vm.yPadding;\r\n\r\n\t\t\t\t// Titles\r\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Body\r\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Footer\r\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],34:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart, moment) {\r\n\r\n  var helpers = Chart.helpers,\r\n    globalOpts = Chart.defaults.global;\r\n\r\n  globalOpts.elements.arc = {\r\n    backgroundColor: globalOpts.defaultColor,\r\n    borderColor: \"#fff\",\r\n    borderWidth: 2\r\n  };\r\n\r\n  Chart.elements.Arc = Chart.Element.extend({\r\n    inLabelRange: function(mouseX) {\r\n      var vm = this._view;\r\n\r\n      if (vm) {\r\n        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    inRange: function(chartX, chartY) {\r\n      var vm = this._view;\r\n\r\n      if (vm) {\r\n        var pointRelativePosition = helpers.getAngleFromPoint(vm, {\r\n            x: chartX,\r\n            y: chartY\r\n          }),\r\n          angle = pointRelativePosition.angle,\r\n          distance = pointRelativePosition.distance;\r\n\r\n        //Sanitise angle range\r\n        var startAngle = vm.startAngle;\r\n        var endAngle = vm.endAngle;\r\n        while (endAngle < startAngle) {\r\n          endAngle += 2.0 * Math.PI;\r\n        }\r\n        while (angle > endAngle) {\r\n          angle -= 2.0 * Math.PI;\r\n        }\r\n        while (angle < startAngle) {\r\n          angle += 2.0 * Math.PI;\r\n        }\r\n\r\n        //Check if within the range of the open/close angle\r\n        var betweenAngles = (angle >= startAngle && angle <= endAngle),\r\n          withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n        return (betweenAngles && withinRadius);\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    tooltipPosition: function() {\r\n      var vm = this._view;\r\n\r\n      var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\r\n        rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n      return {\r\n        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n      };\r\n    },\r\n    draw: function() {\r\n\r\n      var ctx = this._chart.ctx,\r\n        vm = this._view,\r\n        sA = vm.startAngle,\r\n        eA = vm.endAngle;\r\n\r\n      ctx.beginPath();\r\n\r\n      ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n      ctx.closePath();\r\n      ctx.strokeStyle = vm.borderColor;\r\n      ctx.lineWidth = vm.borderWidth;\r\n\r\n      ctx.fillStyle = vm.backgroundColor;\r\n\r\n      ctx.fill();\r\n      ctx.lineJoin = 'bevel';\r\n\r\n      if (vm.borderWidth) {\r\n        ctx.stroke();\r\n      }\r\n    }\r\n  });\r\n};\r\n\n},{}],35:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.elements.line = {\r\n\t\ttension: 0.4,\r\n\t\tbackgroundColor: Chart.defaults.global.defaultColor,\r\n\t\tborderWidth: 3,\r\n\t\tborderColor: Chart.defaults.global.defaultColor,\r\n\t\tborderCapStyle: 'butt',\r\n\t\tborderDash: [],\r\n\t\tborderDashOffset: 0.0,\r\n\t\tborderJoinStyle: 'miter',\r\n\t\tfill: true // do we fill in the area between the line and its base axis\r\n\t};\r\n\r\n\tChart.elements.Line = Chart.Element.extend({\r\n\t\tlineToNextPoint: function(previousPoint, point, nextPoint, skipHandler, previousSkipHandler) {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\r\n\t\t\tif (point._view.skip) {\r\n\t\t\t\tskipHandler.call(this, previousPoint, point, nextPoint);\r\n\t\t\t} else if (previousPoint._view.skip) {\r\n\t\t\t\tpreviousSkipHandler.call(this, previousPoint, point, nextPoint);\r\n\t\t\t} else if (point._view.tension === 0) {\r\n\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t} else {\r\n\t\t\t\t// Line between points\r\n\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\tpreviousPoint._view.controlPointNextX,\r\n\t\t\t\t\tpreviousPoint._view.controlPointNextY,\r\n\t\t\t\t\tpoint._view.controlPointPreviousX,\r\n\t\t\t\t\tpoint._view.controlPointPreviousY,\r\n\t\t\t\t\tpoint._view.x,\r\n\t\t\t\t\tpoint._view.y\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tvar _this = this;\r\n\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar first = this._children[0];\r\n\t\t\tvar last = this._children[this._children.length - 1];\r\n\r\n\t\t\tfunction loopBackToStart(drawLineToCenter) {\r\n\t\t\t\tif (!first._view.skip && !last._view.skip) {\r\n\t\t\t\t\t// Draw a bezier line from last to first\r\n\t\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\t\tlast._view.controlPointNextX,\r\n\t\t\t\t\t\tlast._view.controlPointNextY,\r\n\t\t\t\t\t\tfirst._view.controlPointPreviousX,\r\n\t\t\t\t\t\tfirst._view.controlPointPreviousY,\r\n\t\t\t\t\t\tfirst._view.x,\r\n\t\t\t\t\t\tfirst._view.y\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (drawLineToCenter) {\r\n\t\t\t\t\t// Go to center\r\n\t\t\t\t\tctx.lineTo(_this._view.scaleZero.x, _this._view.scaleZero.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.save();\r\n\r\n\t\t\t// If we had points and want to fill this line, do so.\r\n\t\t\tif (this._children.length > 0 && vm.fill) {\r\n\t\t\t\t// Draw the background first (so the border is always on top)\r\n\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\thelpers.each(this._children, function(point, index) {\r\n\t\t\t\t\tvar previous = helpers.previousItem(this._children, index);\r\n\t\t\t\t\tvar next = helpers.nextItem(this._children, index);\r\n\r\n\t\t\t\t\t// First point moves to it's starting position no matter what\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\tif (this._loop) {\r\n\t\t\t\t\t\t\tctx.moveTo(vm.scaleZero.x, vm.scaleZero.y);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.moveTo(point._view.x, vm.scaleZero);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (point._view.skip) {\r\n\t\t\t\t\t\t\tif (!this._loop) {\r\n\t\t\t\t\t\t\t\tctx.moveTo(next._view.x, this._view.scaleZero);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\t\tif (this._loop) {\r\n\t\t\t\t\t\t\t\t// Go to center\r\n\t\t\t\t\t\t\t\tctx.lineTo(this._view.scaleZero.x, this._view.scaleZero.y);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.lineTo(previousPoint._view.x, this._view.scaleZero);\r\n\t\t\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, this._view.scaleZero);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t\t// If we skipped the last point, draw a line to ourselves so that the fill is nice\r\n\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\t// For radial scales, loop back around to the first point\r\n\t\t\t\tif (this._loop) {\r\n\t\t\t\t\tloopBackToStart(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\r\n\t\t\t\t\tctx.lineTo(this._children[this._children.length - 1]._view.x, vm.scaleZero);\r\n\t\t\t\t\tctx.lineTo(this._children[0]._view.x, vm.scaleZero);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.fillStyle = vm.backgroundColor || Chart.defaults.global.defaultColor;\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\r\n\t\t\t// Now draw the line between all the points with any borders\r\n\t\t\tctx.lineCap = vm.borderCapStyle || Chart.defaults.global.elements.line.borderCapStyle;\r\n\r\n\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\tctx.setLineDash(vm.borderDash || Chart.defaults.global.elements.line.borderDash);\r\n\t\t\t}\r\n\r\n\t\t\tctx.lineDashOffset = vm.borderDashOffset || Chart.defaults.global.elements.line.borderDashOffset;\r\n\t\t\tctx.lineJoin = vm.borderJoinStyle || Chart.defaults.global.elements.line.borderJoinStyle;\r\n\t\t\tctx.lineWidth = vm.borderWidth || Chart.defaults.global.elements.line.borderWidth;\r\n\t\t\tctx.strokeStyle = vm.borderColor || Chart.defaults.global.defaultColor;\r\n\t\t\tctx.beginPath();\r\n\r\n\t\t\thelpers.each(this._children, function(point, index) {\r\n\t\t\t\tvar previous = helpers.previousItem(this._children, index);\r\n\t\t\t\tvar next = helpers.nextItem(this._children, index);\r\n\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, nextPoint._view.y);\r\n\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t// If we skipped the last point, move up to our point preventing a line from being drawn\r\n\t\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\tif (this._loop && this._children.length > 0) {\r\n\t\t\t\tloopBackToStart();\r\n\t\t\t}\r\n\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t});\r\n};\n},{}],36:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global;\r\n\r\n\tglobalOpts.elements.point = {\r\n\t\tradius: 3,\r\n\t\tpointStyle: 'circle',\r\n\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: globalOpts.defaultColor,\r\n\t\t// Hover\r\n\t\thitRadius: 1,\r\n\t\thoverRadius: 4,\r\n\t\thoverBorderWidth: 1\r\n\t};\r\n\r\n\r\n\tChart.elements.Point = Chart.Element.extend({\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n\t\t},\r\n\t\tinLabelRange: function(mouseX) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false; \r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y,\r\n\t\t\t\tpadding: vm.radius + vm.borderWidth\r\n\t\t\t};\r\n\t\t},\r\n\t\tdraw: function() {\r\n\t\t\tvar vm = this._view,\r\n\t\t\t\tx = vm.x,\r\n\t\t\t\ty = vm.y;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\r\n\t\t\tif (vm.skip) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar pointStyle = vm.pointStyle;\r\n\t\t\tif (typeof pointStyle === 'object' && ((pointStyle.toString() === '[object HTMLImageElement]') || (pointStyle.toString() === '[object HTMLCanvasElement]'))) {\r\n\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!isNaN(vm.radius) && vm.radius > 0) {\r\n\r\n\t\t\t\tctx.strokeStyle = vm.borderColor || Chart.defaults.global.defaultColor;\r\n\t\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, Chart.defaults.global.elements.point.borderWidth);\r\n\r\n\t\t\t\tctx.fillStyle = vm.backgroundColor || Chart.defaults.global.defaultColor;\r\n\r\n\t\t\t\tvar radius = vm.radius;\r\n\r\n\t\t\t\tvar xOffset,\r\n\t\t\t\t\tyOffset;\r\n\r\n\t\t\t\tswitch (pointStyle) {\r\n\t\t\t\t\t// Default includes circle\r\n\t\t\t\t\tdefault: \r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\r\n\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'triangle':\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tvar edgeLength = 3 * radius / Math.sqrt(3);\r\n\t\t\t\t\t\tvar height = edgeLength * Math.sqrt(3) / 2;\r\n\t\t\t\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n\t\t\t\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n\t\t\t\t\t\tctx.lineTo(x, y - 2 * height / 3);\r\n\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'rect':\r\n\t\t\t\t\t\tctx.fillRect(x - 1 / Math.SQRT2 * radius, y - 1 / Math.SQRT2 * radius, 2 / Math.SQRT2 * radius, 2 / Math.SQRT2 * radius);\r\n\t\t\t\t\t\tctx.strokeRect(x - 1 / Math.SQRT2 * radius, y - 1 / Math.SQRT2 * radius, 2 / Math.SQRT2 * radius, 2 / Math.SQRT2 * radius);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'rectRot':\r\n\t\t\t\t\t\tctx.translate(x, y);\r\n\t\t\t\t\t\tctx.rotate(Math.PI / 4);\r\n\t\t\t\t\t\tctx.fillRect(-1 / Math.SQRT2 * radius, -1 / Math.SQRT2 * radius, 2 / Math.SQRT2 * radius, 2 / Math.SQRT2 * radius);\r\n\t\t\t\t\t\tctx.strokeRect(-1 / Math.SQRT2 * radius, -1 / Math.SQRT2 * radius, 2 / Math.SQRT2 * radius, 2 / Math.SQRT2 * radius);\r\n\t\t\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cross':\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'crossRot':\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'star':\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'line':\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'dash':\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.moveTo(x, y);\r\n\t\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\n},{}],37:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global;\r\n\r\n\tglobalOpts.elements.rectangle = {\r\n\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\tborderWidth: 0,\r\n\t\tborderColor: globalOpts.defaultColor,\r\n\t\tborderSkipped: 'bottom'\r\n\t};\r\n\r\n\tChart.elements.Rectangle = Chart.Element.extend({\r\n\t\tdraw: function() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tvar halfWidth = vm.width / 2,\r\n\t\t\t\tleftX = vm.x - halfWidth,\r\n\t\t\t\trightX = vm.x + halfWidth,\r\n\t\t\t\ttop = vm.base - (vm.base - vm.y),\r\n\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\r\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\tif (vm.borderWidth) {\r\n\t\t\t\tleftX += halfStroke;\r\n\t\t\t\trightX -= halfStroke;\r\n\t\t\t\ttop += halfStroke;\r\n\t\t\t}\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\tctx.lineWidth = vm.borderWidth;\r\n\r\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t// | 1 2 |\r\n\t\t\t// | 0 3 |\r\n\t\t\tvar corners = [\r\n\t\t\t\t[leftX, vm.base],\r\n\t\t\t\t[leftX, top],\r\n\t\t\t\t[rightX, top],\r\n\t\t\t\t[rightX, vm.base]\r\n\t\t\t];\r\n\r\n\t\t\t// Find first (starting) corner with fallback to 'bottom' \r\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\tif (startCorner === -1)\r\n\t\t\t\tstartCorner = 0;\r\n\r\n\t\t\tfunction cornerAt(index) {\r\n\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t}\r\n\r\n\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\r\n\t\t\tctx.fill();\r\n\t\t\tif (vm.borderWidth) {\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t},\r\n\t\theight: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm.base - vm.y;\r\n\t\t},\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? \r\n\t\t\t\t\t(vm.y < vm.base ? \r\n\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.y && mouseY <= vm.base) :\r\n\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.base && mouseY <= vm.y)) :\r\n\t\t\t\t\tfalse;\r\n\t\t},\r\n\t\tinLabelRange: function(mouseX) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? (mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) : false;\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n};\n},{}],38:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\t// Default config for a category scale\r\n\tvar defaultConfig = {\r\n\t\tposition: \"bottom\"\r\n\t};\r\n\r\n\tvar DatasetScale = Chart.Scale.extend({\r\n\t\t// Implement this so that \r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tthis.minIndex = 0;\r\n\t\t\tthis.maxIndex = this.chart.data.labels.length - 1;\r\n\t\t\tvar findIndex;\r\n\r\n\t\t\tif (this.options.ticks.min !== undefined) {\r\n\t\t\t\t// user specified min value\r\n\t\t\t\tfindIndex = helpers.indexOf(this.chart.data.labels, this.options.ticks.min);\r\n\t\t\t\tthis.minIndex = findIndex !== -1 ? findIndex : this.minIndex;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.ticks.max !== undefined) {\r\n\t\t\t\t// user specified max value\r\n\t\t\t\tfindIndex = helpers.indexOf(this.chart.data.labels, this.options.ticks.max);\r\n\t\t\t\tthis.maxIndex = findIndex !== -1 ? findIndex : this.maxIndex;\r\n\t\t\t}\r\n\r\n\t\t\tthis.min = this.chart.data.labels[this.minIndex];\r\n\t\t\tthis.max = this.chart.data.labels[this.maxIndex];\r\n\t\t},\r\n\r\n\t\tbuildTicks: function(index) {\r\n\t\t\t// If we are viewing some subset of labels, slice the original array\r\n\t\t\tthis.ticks = (this.minIndex === 0 && this.maxIndex === this.chart.data.labels.length - 1) ? this.chart.data.labels : this.chart.data.labels.slice(this.minIndex, this.maxIndex + 1);\r\n\t\t},\r\n\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn this.ticks[index];\r\n\t\t},\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t// 1 is added because we need the length but we have the indexes\r\n\t\t\tvar offsetAmt = Math.max((this.maxIndex + 1 - this.minIndex - ((this.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\tvar valueWidth = innerWidth / offsetAmt;\r\n\t\t\t\tvar widthOffset = (valueWidth * (index - this.minIndex)) + this.paddingLeft;\r\n\r\n\t\t\t\tif (this.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\twidthOffset += (valueWidth / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.left + Math.round(widthOffset);\r\n\t\t\t} else {\r\n\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\tvar valueHeight = innerHeight / offsetAmt;\r\n\t\t\t\tvar heightOffset = (valueHeight * (index - this.minIndex)) + this.paddingTop;\r\n\r\n\t\t\t\tif (this.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\theightOffset += (valueHeight / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.top + Math.round(heightOffset);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar value\r\n;\t\t\tvar offsetAmt = Math.max((this.ticks.length - ((this.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\tvar horz = this.isHorizontal();\r\n\t\t\tvar innerDimension = horz ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\tvar valueDimension = innerDimension / offsetAmt;\r\n\r\n\t\t\tif (this.options.gridLines.offsetGridLines) {\r\n\t\t\t\tpixel -= (valueDimension / 2);\r\n\t\t\t}\r\n\t\t\tpixel -= horz ? this.paddingLeft : this.paddingTop;\r\n\r\n\t\t\tif (pixel <= 0) {\r\n\t\t\t\tvalue = 0;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t});\r\n\r\n\tChart.scaleService.registerScaleType(\"category\", DatasetScale, defaultConfig);\r\n\r\n};\n},{}],39:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"left\",\r\n\t\tticks: {\r\n\t\t\tcallback: function(tickValue, index, ticks) {\r\n\t\t\t\t// If we have lots of ticks, don't use the ones\r\n\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n\t\t\t\tif (Math.abs(delta) > 1) {\r\n\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\r\n\t\t\t\t\t\t// not an integer\r\n\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\r\n\t\t\t\tvar tickString = '';\r\n\r\n\t\t\t\tif (tickValue !== 0) {\r\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\r\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttickString = '0'; // never show decimal places for 0\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tickString;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LinearScale = Chart.Scale.extend({\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\t// First Calculate the range\r\n\t\t\tthis.min = null;\r\n\t\t\tthis.max = null;\r\n\r\n\t\t\tif (this.options.stacked) {\r\n\t\t\t\tvar valuesPerType = {};\r\n\t\t\t\tvar hasPositiveValues = false;\r\n\t\t\t\tvar hasNegativeValues = false;\r\n\r\n\t\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = this.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\tvaluesPerType[meta.type] = {\r\n\t\t\t\t\t\t\tpositiveValues: [],\r\n\t\t\t\t\t\t\tnegativeValues: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Store these per type\r\n\t\t\t\t\tvar positiveValues = valuesPerType[meta.type].positiveValues;\r\n\t\t\t\t\tvar negativeValues = valuesPerType[meta.type].negativeValues;\r\n\r\n\t\t\t\t\tif (this.chart.isDatasetVisible(datasetIndex) && (this.isHorizontal() ? meta.xAxisID === this.id : meta.yAxisID === this.id)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\r\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (this.options.relativePoints) {\r\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\t\t\t\thasNegativeValues = true;\r\n\t\t\t\t\t\t\t\t\tnegativeValues[index] += value;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\thasPositiveValues = true;\r\n\t\t\t\t\t\t\t\t\tpositiveValues[index] += value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n\t\t\t\t\tvar minVal = helpers.min(values);\r\n\t\t\t\t\tvar maxVal = helpers.max(values);\r\n\t\t\t\t\tthis.min = this.min === null ? minVal : Math.min(this.min, minVal);\r\n\t\t\t\t\tthis.max = this.max === null ? maxVal : Math.max(this.max, maxVal);\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = this.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (this.chart.isDatasetVisible(datasetIndex) && (this.isHorizontal() ? meta.xAxisID === this.id : meta.yAxisID === this.id)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.min === null) {\r\n\t\t\t\t\t\t\t\tthis.min = value;\r\n\t\t\t\t\t\t\t} else if (value < this.min) {\r\n\t\t\t\t\t\t\t\tthis.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.max === null) {\r\n\t\t\t\t\t\t\t\tthis.max = value;\r\n\t\t\t\t\t\t\t} else if (value > this.max) {\r\n\t\t\t\t\t\t\t\tthis.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\r\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\r\n\t\t\t// axis, they can manually override it\r\n\t\t\tif (this.options.ticks.beginAtZero) {\r\n\t\t\t\tvar minSign = helpers.sign(this.min);\r\n\t\t\t\tvar maxSign = helpers.sign(this.max);\r\n\r\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\r\n\t\t\t\t\t// move the top up to 0\r\n\t\t\t\t\tthis.max = 0;\r\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\r\n\t\t\t\t\t// move the botttom down to 0\r\n\t\t\t\t\tthis.min = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.ticks.min !== undefined) {\r\n\t\t\t\tthis.min = this.options.ticks.min;\r\n\t\t\t} else if (this.options.ticks.suggestedMin !== undefined) {\r\n\t\t\t\tthis.min = Math.min(this.min, this.options.ticks.suggestedMin);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.ticks.max !== undefined) {\r\n\t\t\t\tthis.max = this.options.ticks.max;\r\n\t\t\t} else if (this.options.ticks.suggestedMax !== undefined) {\r\n\t\t\t\tthis.max = Math.max(this.max, this.options.ticks.suggestedMax);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.min === this.max) {\r\n\t\t\t\tthis.max++;\r\n\r\n\t\t\t\tif (!this.options.ticks.beginAtZero) {\r\n\t\t\t\t\tthis.min--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\r\n\t\t\t// Then calulate the ticks\r\n\t\t\tthis.ticks = [];\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph\r\n\r\n\t\t\tvar maxTicks;\r\n\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tmaxTicks = Math.min(this.options.ticks.maxTicksLimit ? this.options.ticks.maxTicksLimit : 11, Math.ceil(this.width / 50));\r\n\t\t\t} else {\r\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\tmaxTicks = Math.min(this.options.ticks.maxTicksLimit ? this.options.ticks.maxTicksLimit : 11, Math.ceil(this.height / (2 * tickFontSize)));\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure we always have at least 2 ticks\r\n\t\t\tmaxTicks = Math.max(2, maxTicks);\r\n\r\n\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n\t\t\t// for details.\r\n\r\n\t\t\tvar spacing;\r\n\t\t\tvar fixedStepSizeSet = (this.options.ticks.fixedStepSize && this.options.ticks.fixedStepSize > 0) || (this.options.ticks.stepSize && this.options.ticks.stepSize > 0);\r\n\t\t\tif (fixedStepSizeSet) {\r\n\t\t\t\tspacing = helpers.getValueOrDefault(this.options.ticks.fixedStepSize, this.options.ticks.stepSize);\r\n\t\t\t} else {\r\n\t\t\t\tvar niceRange = helpers.niceNum(this.max - this.min, false);\r\n\t\t\t\tspacing = helpers.niceNum(niceRange / (maxTicks - 1), true);\r\n\t\t\t}\r\n\t\t\tvar niceMin = Math.floor(this.min / spacing) * spacing;\r\n\t\t\tvar niceMax = Math.ceil(this.max / spacing) * spacing;\r\n\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\r\n\r\n\t\t\t// If very close to our rounded value, use it.\r\n\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n\t\t\t\tnumSpaces = Math.round(numSpaces);\r\n\t\t\t} else {\r\n\t\t\t\tnumSpaces = Math.ceil(numSpaces);\r\n\t\t\t}\r\n\r\n\t\t\t// Put the values into the ticks array\r\n\t\t\tthis.ticks.push(this.options.ticks.min !== undefined ? this.options.ticks.min : niceMin);\r\n\t\t\tfor (var j = 1; j < numSpaces; ++j) {\r\n\t\t\t\tthis.ticks.push(niceMin + (j * spacing));\r\n\t\t\t}\r\n\t\t\tthis.ticks.push(this.options.ticks.max !== undefined ? this.options.ticks.max : niceMax);\r\n\r\n\t\t\tif (this.options.position === \"left\" || this.options.position === \"right\") {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tthis.ticks.reverse();\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tthis.max = helpers.max(this.ticks);\r\n\t\t\tthis.min = helpers.min(this.ticks);\r\n\r\n\t\t\tif (this.options.ticks.reverse) {\r\n\t\t\t\tthis.ticks.reverse();\r\n\r\n\t\t\t\tthis.start = this.max;\r\n\t\t\t\tthis.end = this.min;\r\n\t\t\t} else {\r\n\t\t\t\tthis.start = this.min;\r\n\t\t\t\tthis.end = this.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tthis.ticksAsNumbers = this.ticks.slice();\r\n\t\t\tthis.zeroLineIndex = this.ticks.indexOf(0);\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\t\t},\r\n\t\t// Utils\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t// This must be called after fit has been run so that\r\n\t\t\t//      this.left, this.top, this.right, and this.bottom have been defined\r\n\t\t\tvar rightValue = +this.getRightValue(value);\r\n\t\t\tvar pixel;\r\n\t\t\tvar range = this.end - this.start;\r\n\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\tpixel = this.left + (innerWidth / range * (rightValue - this.start));\r\n\t\t\t\treturn Math.round(pixel + this.paddingLeft);\r\n\t\t\t} else {\r\n\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\tpixel = (this.bottom - this.paddingBottom) - (innerHeight / range * (rightValue - this.start));\r\n\t\t\t\treturn Math.round(pixel);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar offset;\r\n\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\toffset = (pixel - this.left - this.paddingLeft) / innerWidth;\r\n\t\t\t} else {\r\n\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\toffset = (this.bottom - this.paddingBottom - pixel) / innerHeight;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.start + ((this.end - this.start) * offset);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index], null, null, includeOffset);\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"linear\", LinearScale, defaultConfig);\r\n\r\n};\n},{}],40:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"left\",\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tcallback: function(value, index, arr) {\r\n\t\t\t\tvar remain = value / (Math.pow(10, Math.floor(Chart.helpers.log10(value))));\r\n\r\n\t\t\t\tif (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === arr.length - 1) {\r\n\t\t\t\t\treturn value.toExponential();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LogarithmicScale = Chart.Scale.extend({\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\t// Calculate Range\r\n\t\t\tthis.min = null;\r\n\t\t\tthis.max = null;\r\n\r\n\t\t\tif (this.options.stacked) {\r\n\t\t\t\tvar valuesPerType = {};\r\n\r\n\t\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = this.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (this.chart.isDatasetVisible(datasetIndex) && (this.isHorizontal() ? meta.xAxisID === this.id : meta.yAxisID === this.id)) {\r\n\t\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\t\tvaluesPerType[meta.type] = [];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar values = valuesPerType[meta.type];\r\n\t\t\t\t\t\t\tvar value = +this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (this.options.relativePoints) {\r\n\t\t\t\t\t\t\t\tvalues[index] = 100;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\r\n\t\t\t\t\t\t\t\tvalues[index] += value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\tvar minVal = helpers.min(valuesForType);\r\n\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\r\n\t\t\t\t\tthis.min = this.min === null ? minVal : Math.min(this.min, minVal);\r\n\t\t\t\t\tthis.max = this.max === null ? maxVal : Math.max(this.max, maxVal);\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = this.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (this.chart.isDatasetVisible(datasetIndex) && (this.isHorizontal() ? meta.xAxisID === this.id : meta.yAxisID === this.id)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +this.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.min === null) {\r\n\t\t\t\t\t\t\t\tthis.min = value;\r\n\t\t\t\t\t\t\t} else if (value < this.min) {\r\n\t\t\t\t\t\t\t\tthis.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.max === null) {\r\n\t\t\t\t\t\t\t\tthis.max = value;\r\n\t\t\t\t\t\t\t} else if (value > this.max) {\r\n\t\t\t\t\t\t\t\tthis.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.min = this.options.ticks.min !== undefined ? this.options.ticks.min : this.min;\r\n\t\t\tthis.max = this.options.ticks.max !== undefined ? this.options.ticks.max : this.max;\r\n\r\n\t\t\tif (this.min === this.max) {\r\n\t\t\t\tif (this.min !== 0 && this.min !== null) {\r\n\t\t\t\t\tthis.min = Math.pow(10, Math.floor(helpers.log10(this.min)) - 1);\r\n\t\t\t\t\tthis.max = Math.pow(10, Math.floor(helpers.log10(this.max)) + 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.min = 1;\r\n\t\t\t\t\tthis.max = 10;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\t\t\t// Reset the ticks array. Later on, we will draw a grid line at these positions\r\n\t\t\t// The array simply contains the numerical value of the spots where ticks will be\r\n\t\t\tthis.ticks = [];\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph\r\n\r\n\t\t\tvar tickVal = this.options.ticks.min !== undefined ? this.options.ticks.min : Math.pow(10, Math.floor(helpers.log10(this.min)));\r\n\r\n\t\t\twhile (tickVal < this.max) {\r\n\t\t\t\tthis.ticks.push(tickVal);\r\n\r\n\t\t\t\tvar exp = Math.floor(helpers.log10(tickVal));\r\n\t\t\t\tvar significand = Math.floor(tickVal / Math.pow(10, exp)) + 1;\r\n\r\n\t\t\t\tif (significand === 10) {\r\n\t\t\t\t\tsignificand = 1;\r\n\t\t\t\t\t++exp;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttickVal = significand * Math.pow(10, exp);\r\n\t\t\t}\r\n\r\n\t\t\tvar lastTick = this.options.ticks.max !== undefined ? this.options.ticks.max : tickVal;\r\n\t\t\tthis.ticks.push(lastTick);\r\n\r\n\t\t\tif (this.options.position === \"left\" || this.options.position === \"right\") {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tthis.ticks.reverse();\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tthis.max = helpers.max(this.ticks);\r\n\t\t\tthis.min = helpers.min(this.ticks);\r\n\r\n\t\t\tif (this.options.ticks.reverse) {\r\n\t\t\t\tthis.ticks.reverse();\r\n\r\n\t\t\t\tthis.start = this.max;\r\n\t\t\t\tthis.end = this.min;\r\n\t\t\t} else {\r\n\t\t\t\tthis.start = this.min;\r\n\t\t\t\tthis.end = this.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tthis.tickValues = this.ticks.slice();\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\t\t},\r\n\t\t// Get the correct tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.tickValues[index], null, null, includeOffset);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar pixel;\r\n\r\n\t\t\tvar newVal = +this.getRightValue(value)\r\n;\t\t\tvar range = helpers.log10(this.end) - helpers.log10(this.start);\r\n\r\n\t\t\tif (this.isHorizontal()) {\r\n\r\n\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\tpixel = this.left + this.paddingLeft;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\t\tpixel = this.left + (innerWidth / range * (helpers.log10(newVal) - helpers.log10(this.start)));\r\n\t\t\t\t\tpixel += this.paddingLeft;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Bottom - top since pixels increase downard on a screen\r\n\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\tpixel = this.top + this.paddingTop;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\t\tpixel = (this.bottom - this.paddingBottom) - (innerHeight / range * (helpers.log10(newVal) - helpers.log10(this.start)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn pixel;\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar offset;\r\n\t\t\tvar range = helpers.log10(this.end) - helpers.log10(this.start);\r\n\t\t\tvar value;\r\n\r\n\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\tvalue = this.start * Math.pow(10, (pixel - this.left - this.paddingLeft) * range / innerWidth);\r\n\t\t\t} else {\r\n\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\tvalue = Math.pow(10, (this.bottom - this.paddingBottom - pixel) * range / innerHeight) / this.start;\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"logarithmic\", LogarithmicScale, defaultConfig);\r\n\r\n};\n},{}],41:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tdisplay: true,\r\n\r\n\t\t//Boolean - Whether to animate scaling the chart from the centre\r\n\t\tanimate: true,\r\n\t\tlineArc: false,\r\n\t\tposition: \"chartArea\",\r\n\r\n\t\tangleLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\tlineWidth: 1\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\t//Boolean - Show a backdrop to the scale label\r\n\t\t\tshowLabelBackdrop: true,\r\n\r\n\t\t\t//String - The colour of the label backdrop\r\n\t\t\tbackdropColor: \"rgba(255,255,255,0.75)\",\r\n\r\n\t\t\t//Number - The backdrop padding above & below the label in pixels\r\n\t\t\tbackdropPaddingY: 2,\r\n\r\n\t\t\t//Number - The backdrop padding to the side of the label in pixels\r\n\t\t\tbackdropPaddingX: 2\r\n\t\t},\r\n\r\n\t\tpointLabels: {\r\n\t\t\t//Number - Point label font size in pixels\r\n\t\t\tfontSize: 10,\r\n\r\n\t\t\t//Function - Used to convert point labels\r\n\t\t\tcallback: function(label) {\r\n\t\t\t\treturn label;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LinearRadialScale = Chart.Scale.extend({\r\n\t\tgetValueCount: function() {\r\n\t\t\treturn this.chart.data.labels.length;\r\n\t\t},\r\n\t\tsetDimensions: function() {\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tthis.width = this.maxWidth;\r\n\t\t\tthis.height = this.maxHeight;\r\n\t\t\tthis.xCenter = Math.round(this.width / 2);\r\n\t\t\tthis.yCenter = Math.round(this.height / 2);\r\n\r\n\t\t\tvar minSize = helpers.min([this.height, this.width]);\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\tthis.drawingArea = (this.options.display) ? (minSize / 2) - (tickFontSize / 2 + this.options.ticks.backdropPaddingY) : (minSize / 2);\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tthis.min = null;\r\n\t\t\tthis.max = null;\r\n\r\n\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (this.chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = this.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\tvar value = +this.getRightValue(rawValue);\r\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.min === null) {\r\n\t\t\t\t\t\t\tthis.min = value;\r\n\t\t\t\t\t\t} else if (value < this.min) {\r\n\t\t\t\t\t\t\tthis.min = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.max === null) {\r\n\t\t\t\t\t\t\tthis.max = value;\r\n\t\t\t\t\t\t} else if (value > this.max) {\r\n\t\t\t\t\t\t\tthis.max = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\r\n\t\t\t// axis, they can manually override it\r\n\t\t\tif (this.options.ticks.beginAtZero) {\r\n\t\t\t\tvar minSign = helpers.sign(this.min);\r\n\t\t\t\tvar maxSign = helpers.sign(this.max);\r\n\r\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\r\n\t\t\t\t\t// move the top up to 0\r\n\t\t\t\t\tthis.max = 0;\r\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\r\n\t\t\t\t\t// move the botttom down to 0\r\n\t\t\t\t\tthis.min = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.ticks.min !== undefined) {\r\n\t\t\t\tthis.min = this.options.ticks.min;\r\n\t\t\t} else if (this.options.ticks.suggestedMin !== undefined) {\r\n\t\t\t\tthis.min = Math.min(this.min, this.options.ticks.suggestedMin);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.ticks.max !== undefined) {\r\n\t\t\t\tthis.max = this.options.ticks.max;\r\n\t\t\t} else if (this.options.ticks.suggestedMax !== undefined) {\r\n\t\t\t\tthis.max = Math.max(this.max, this.options.ticks.suggestedMax);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.min === this.max) {\r\n\t\t\t\tthis.min--;\r\n\t\t\t\tthis.max++;\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\r\n\r\n\t\t\tthis.ticks = [];\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\tvar maxTicks = Math.min(this.options.ticks.maxTicksLimit ? this.options.ticks.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\r\n\t\t\tmaxTicks = Math.max(2, maxTicks); // Make sure we always have at least 2 ticks\r\n\r\n\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n\t\t\t// for details.\r\n\r\n\t\t\tvar niceRange = helpers.niceNum(this.max - this.min, false);\r\n\t\t\tvar spacing = helpers.niceNum(niceRange / (maxTicks - 1), true);\r\n\t\t\tvar niceMin = Math.floor(this.min / spacing) * spacing;\r\n\t\t\tvar niceMax = Math.ceil(this.max / spacing) * spacing;\r\n\r\n\t\t\tvar numSpaces = Math.ceil((niceMax - niceMin) / spacing);\r\n\r\n\t\t\t// Put the values into the ticks array\r\n\t\t\tthis.ticks.push(this.options.ticks.min !== undefined ? this.options.ticks.min : niceMin);\r\n\t\t\tfor (var j = 1; j < numSpaces; ++j) {\r\n\t\t\t\tthis.ticks.push(niceMin + (j * spacing));\r\n\t\t\t}\r\n\t\t\tthis.ticks.push(this.options.ticks.max !== undefined ? this.options.ticks.max : niceMax);\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tthis.max = helpers.max(this.ticks);\r\n\t\t\tthis.min = helpers.min(this.ticks);\r\n\r\n\t\t\tif (this.options.ticks.reverse) {\r\n\t\t\t\tthis.ticks.reverse();\r\n\r\n\t\t\t\tthis.start = this.max;\r\n\t\t\t\tthis.end = this.min;\r\n\t\t\t} else {\r\n\t\t\t\tthis.start = this.min;\r\n\t\t\t\tthis.end = this.max;\r\n\t\t\t}\r\n\r\n\t\t\tthis.zeroLineIndex = this.ticks.indexOf(0);\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\r\n\t\t\t// Point labels\r\n\t\t\tthis.pointLabels = this.chart.data.labels.map(this.options.pointLabels.callback, this);\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\t/*\r\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\r\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\r\n\t\t\t *\r\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\r\n\t\t\t *\r\n\t\t\t * Solution:\r\n\t\t\t *\r\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\r\n\t\t\t * at each index we check if the text overlaps.\r\n\t\t\t *\r\n\t\t\t * Where it does, we store that angle and that index.\r\n\t\t\t *\r\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\r\n\t\t\t * from the shape radius to move the point inwards by that x.\r\n\t\t\t *\r\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\r\n\t\t\t * along with labels.\r\n\t\t\t *\r\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\r\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\r\n\t\t\t *\r\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\r\n\t\t\t * and position it in the most space efficient manner\r\n\t\t\t *\r\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\r\n\t\t\t */\r\n\r\n\t\t\tvar pointLabelFontSize = helpers.getValueOrDefault(this.options.pointLabels.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\tvar pointLabeFontStyle = helpers.getValueOrDefault(this.options.pointLabels.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\tvar pointLabeFontFamily = helpers.getValueOrDefault(this.options.pointLabels.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\r\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\r\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\r\n\t\t\tvar largestPossibleRadius = helpers.min([(this.height / 2 - pointLabelFontSize - 5), this.width / 2]),\r\n\t\t\t\tpointPosition,\r\n\t\t\t\ti,\r\n\t\t\t\ttextWidth,\r\n\t\t\t\thalfTextWidth,\r\n\t\t\t\tfurthestRight = this.width,\r\n\t\t\t\tfurthestRightIndex,\r\n\t\t\t\tfurthestRightAngle,\r\n\t\t\t\tfurthestLeft = 0,\r\n\t\t\t\tfurthestLeftIndex,\r\n\t\t\t\tfurthestLeftAngle,\r\n\t\t\t\txProtrusionLeft,\r\n\t\t\t\txProtrusionRight,\r\n\t\t\t\tradiusReductionRight,\r\n\t\t\t\tradiusReductionLeft,\r\n\t\t\t\tmaxWidthRadius;\r\n\t\t\tthis.ctx.font = pointLabeFont;\r\n\r\n\t\t\tfor (i = 0; i < this.getValueCount(); i++) {\r\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\r\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\r\n\t\t\t\ttextWidth = this.ctx.measureText(this.pointLabels[i] ? this.pointLabels[i] : '').width + 5;\r\n\t\t\t\tif (i === 0 || i === this.getValueCount() / 2) {\r\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\r\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\r\n\t\t\t\t\t// w/left and right text sizes\r\n\t\t\t\t\thalfTextWidth = textWidth / 2;\r\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\r\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\r\n\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\r\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\r\n\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (i < this.getValueCount() / 2) {\r\n\t\t\t\t\t// Less than half the values means we'll left align the text\r\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\r\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\r\n\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (i > this.getValueCount() / 2) {\r\n\t\t\t\t\t// More than half the values means we'll right align the text\r\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\r\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\r\n\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\txProtrusionLeft = furthestLeft;\r\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\r\n\r\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\r\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\r\n\r\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);\r\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2);\r\n\r\n\t\t\t// Ensure we actually need to reduce the size of the chart\r\n\t\t\tradiusReductionRight = (helpers.isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\r\n\t\t\tradiusReductionLeft = (helpers.isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\r\n\r\n\t\t\tthis.drawingArea = Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2);\r\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\r\n\t\t},\r\n\t\tsetCenterPoint: function(leftMovement, rightMovement) {\r\n\r\n\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\r\n\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\r\n\r\n\t\t\tthis.xCenter = Math.round(((maxLeft + maxRight) / 2) + this.left);\r\n\t\t\t// Always vertically in the centre as the text height doesn't change\r\n\t\t\tthis.yCenter = Math.round((this.height / 2) + this.top);\r\n\t\t},\r\n\r\n\t\tgetIndexAngle: function(index) {\r\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.getValueCount();\r\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\r\n\r\n\t\t\treturn index * angleMultiplier - (Math.PI / 2);\r\n\t\t},\r\n\t\tgetDistanceFromCenterForValue: function(value) {\r\n\t\t\tif (value === null) {\r\n\t\t\t\treturn 0; // null always in center\r\n\t\t\t}\r\n\r\n\t\t\t// Take into account half font size + the yPadding of the top value\r\n\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\r\n\t\t\tif (this.options.reverse) {\r\n\t\t\t\treturn (this.max - value) * scalingFactor;\r\n\t\t\t} else {\r\n\t\t\t\treturn (value - this.min) * scalingFactor;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPointPosition: function(index, distanceFromCenter) {\r\n\t\t\tvar thisAngle = this.getIndexAngle(index);\r\n\t\t\treturn {\r\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\r\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetPointPositionForValue: function(index, value) {\r\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n\t\t},\r\n\t\tdraw: function() {\r\n\t\t\tif (this.options.display) {\r\n\t\t\t\tvar ctx = this.ctx;\r\n\t\t\t\thelpers.each(this.ticks, function(label, index) {\r\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\r\n\t\t\t\t\tif (index > 0 || this.options.reverse) {\r\n\t\t\t\t\t\tvar yCenterOffset = this.getDistanceFromCenterForValue(this.ticks[index]);\r\n\t\t\t\t\t\tvar yHeight = this.yCenter - yCenterOffset;\r\n\r\n\t\t\t\t\t\t// Draw circular lines around the scale\r\n\t\t\t\t\t\tif (this.options.gridLines.display) {\r\n\t\t\t\t\t\t\tctx.strokeStyle = this.options.gridLines.color;\r\n\t\t\t\t\t\t\tctx.lineWidth = this.options.gridLines.lineWidth;\r\n\r\n\t\t\t\t\t\t\tif (this.options.lineArc) {\r\n\t\t\t\t\t\t\t\t// Draw circular arcs between the points\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI * 2);\r\n\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Draw straight lines connecting each index\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tfor (var i = 0; i < this.getValueCount(); i++) {\r\n\t\t\t\t\t\t\t\t\tvar pointPosition = this.getPointPosition(i, this.getDistanceFromCenterForValue(this.ticks[index]));\r\n\t\t\t\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.options.ticks.display) {\r\n\t\t\t\t\t\t\tvar tickFontColor = helpers.getValueOrDefault(this.options.ticks.fontColor, Chart.defaults.global.defaultFontColor);\r\n\t\t\t\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\t\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\t\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\r\n\r\n\t\t\t\t\t\t\tif (this.options.ticks.showLabelBackdrop) {\r\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\r\n\t\t\t\t\t\t\t\tctx.fillStyle = this.options.ticks.backdropColor;\r\n\t\t\t\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth / 2 - this.options.ticks.backdropPaddingX,\r\n\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - this.options.ticks.backdropPaddingY,\r\n\t\t\t\t\t\t\t\t\tlabelWidth + this.options.ticks.backdropPaddingX * 2,\r\n\t\t\t\t\t\t\t\t\ttickFontSize + this.options.ticks.backdropPaddingY * 2\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\r\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\r\n\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\tif (!this.options.lineArc) {\r\n\t\t\t\t\tctx.lineWidth = this.options.angleLines.lineWidth;\r\n\t\t\t\t\tctx.strokeStyle = this.options.angleLines.color;\r\n\r\n\t\t\t\t\tfor (var i = this.getValueCount() - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tif (this.options.angleLines.display) {\r\n\t\t\t\t\t\t\tvar outerPosition = this.getPointPosition(i, this.getDistanceFromCenterForValue(this.options.reverse ? this.min : this.max));\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\r\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\r\n\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Extra 3px out for some label spacing\r\n\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.getDistanceFromCenterForValue(this.options.reverse ? this.min : this.max) + 5);\r\n\r\n\t\t\t\t\t\tvar pointLabelFontColor = helpers.getValueOrDefault(this.options.pointLabels.fontColor, Chart.defaults.global.defaultFontColor);\r\n\t\t\t\t\t\tvar pointLabelFontSize = helpers.getValueOrDefault(this.options.pointLabels.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\t\t\tvar pointLabeFontStyle = helpers.getValueOrDefault(this.options.pointLabels.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\t\t\t\tvar pointLabeFontFamily = helpers.getValueOrDefault(this.options.pointLabels.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\t\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\r\n\t\t\t\t\t\tctx.font = pointLabeFont;\r\n\t\t\t\t\t\tctx.fillStyle = pointLabelFontColor;\r\n\r\n\t\t\t\t\t\tvar labelsCount = this.pointLabels.length,\r\n\t\t\t\t\t\t\thalfLabelsCount = this.pointLabels.length / 2,\r\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount / 2,\r\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\r\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t} else if (i === halfLabelsCount) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t} else if (i < halfLabelsCount) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'left';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.textAlign = 'right';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\r\n\t\t\t\t\t\tif (exactQuarter) {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\t\t\t} else if (upperHalf) {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tctx.fillText(this.pointLabels[i] ? this.pointLabels[i] : '', pointLabelPosition.x, pointLabelPosition.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"radialLinear\", LinearRadialScale, defaultConfig);\r\n\r\n};\n},{}],42:[function(require,module,exports){\n/*global window: false */\r\n\"use strict\";\r\n\r\nvar moment = require('moment');\r\nmoment = typeof(moment) === 'function' ? moment : window.moment;\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar time = {\r\n\t\tunits: [{\r\n\t\t\tname: 'millisecond',\r\n\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\r\n\t\t}, {\r\n\t\t\tname: 'second',\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t}, {\r\n\t\t\tname: 'minute',\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t}, {\r\n\t\t\tname: 'hour',\r\n\t\t\tsteps: [1, 2, 3, 6, 12]\r\n\t\t}, {\r\n\t\t\tname: 'day',\r\n\t\t\tsteps: [1, 2, 5]\r\n\t\t}, {\r\n\t\t\tname: 'week',\r\n\t\t\tmaxStep: 4\r\n\t\t}, {\r\n\t\t\tname: 'month',\r\n\t\t\tmaxStep: 3\r\n\t\t}, {\r\n\t\t\tname: 'quarter',\r\n\t\t\tmaxStep: 4\r\n\t\t}, {\r\n\t\t\tname: 'year',\r\n\t\t\tmaxStep: false\r\n\t\t}]\r\n\t};\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"bottom\",\r\n\r\n\t\ttime: {\r\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\r\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\r\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\r\n\t\t\tround: false, // none, or override with week, month, year, etc.\r\n\t\t\tdisplayFormat: false, // DEPRECATED\r\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\r\n\r\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\r\n\t\t\tdisplayFormats: {\r\n\t\t\t\t'millisecond': 'h:mm:ss.SSS a', // 11:20:01.123 AM,\r\n\t\t\t\t'second': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t'minute': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t'hour': 'MMM D, hA', // Sept 4, 5PM\r\n\t\t\t\t'day': 'll', // Sep 4 2015\r\n\t\t\t\t'week': 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\r\n\t\t\t\t'month': 'MMM YYYY', // Sept 2015\r\n\t\t\t\t'quarter': '[Q]Q - YYYY', // Q3\r\n\t\t\t\t'year': 'YYYY' // 2015\r\n\t\t\t}\r\n\t\t},\r\n\t\tticks: {\r\n\t\t\tautoSkip: false\r\n\t\t}\r\n\t};\r\n\r\n\tvar TimeScale = Chart.Scale.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tif (!moment) {\r\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\r\n\t\t\t}\r\n\r\n\t\t\tChart.Scale.prototype.initialize.call(this);\r\n\t\t},\r\n\t\tgetLabelMoment: function(datasetIndex, index) {\r\n\t\t\treturn this.labelMoments[datasetIndex][index];\r\n\t\t},\r\n\t\tgetMomentStartOf: function(tick) {\r\n\t\t\tif (this.options.time.unit === 'week' && this.options.time.isoWeekday !== false) {\r\n\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(this.options.time.isoWeekday);\r\n\t\t\t} else {\r\n\t\t\t\treturn tick.clone().startOf(this.tickUnit);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tthis.labelMoments = [];\r\n\r\n\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\r\n\t\t\t// these\r\n\t\t\tvar scaleLabelMoments = [];\r\n\t\t\tif (this.chart.data.labels && this.chart.data.labels.length > 0) {\r\n\t\t\t\thelpers.each(this.chart.data.labels, function(label, index) {\r\n\t\t\t\t\tvar labelMoment = this.parseTime(label);\r\n\r\n\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\tif (this.options.time.round) {\r\n\t\t\t\t\t\t\tlabelMoment.startOf(this.options.time.round);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\tthis.firstTick = moment.min.call(this, scaleLabelMoments);\r\n\t\t\t\tthis.lastTick = moment.max.call(this, scaleLabelMoments);\r\n\t\t\t} else {\r\n\t\t\t\tthis.firstTick = null;\r\n\t\t\t\tthis.lastTick = null;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar momentsForDataset = [];\r\n\t\t\t\tvar datasetVisible = this.chart.isDatasetVisible(datasetIndex);\r\n\r\n\t\t\t\tif (typeof dataset.data[0] === 'object') {\r\n\t\t\t\t\thelpers.each(dataset.data, function(value, index) {\r\n\t\t\t\t\t\tvar labelMoment = this.parseTime(this.getRightValue(value));\r\n\r\n\t\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\t\tif (this.options.time.round) {\r\n\t\t\t\t\t\t\t\tlabelMoment.startOf(this.options.time.round);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\r\n\r\n\t\t\t\t\t\t\tif (datasetVisible) {\r\n\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\r\n\t\t\t\t\t\t\t\tthis.firstTick = this.firstTick !== null ? moment.min(this.firstTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t\tthis.lastTick = this.lastTick !== null ? moment.max(this.lastTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// We have no labels. Use the ones from the scale\r\n\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.labelMoments.push(momentsForDataset);\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Set these after we've done all the data\r\n\t\t\tif (this.options.time.min) {\r\n\t\t\t\tthis.firstTick = this.parseTime(this.options.time.min);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.time.max) {\r\n\t\t\t\tthis.lastTick = this.parseTime(this.options.time.max);\r\n\t\t\t}\r\n\r\n\t\t\t// We will modify these, so clone for later\r\n\t\t\tthis.firstTick = (this.firstTick || moment()).clone();\r\n\t\t\tthis.lastTick = (this.lastTick || moment()).clone();\r\n\t\t},\r\n\t\tbuildTicks: function(index) {\r\n\r\n\t\t\tthis.ctx.save();\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(this.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(this.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(this.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tthis.ctx.font = tickLabelFont;\r\n\r\n\t\t\tthis.ticks = [];\r\n\t\t\tthis.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\r\n\t\t\tthis.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\r\n\r\n\t\t\t// Set unit override if applicable\r\n\t\t\tif (this.options.time.unit) {\r\n\t\t\t\tthis.tickUnit = this.options.time.unit || 'day';\r\n\t\t\t\tthis.displayFormat = this.options.time.displayFormats[this.tickUnit];\r\n\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true);\r\n\t\t\t\tthis.unitScale = helpers.getValueOrDefault(this.options.time.unitStepSize, 1);\r\n\t\t\t} else {\r\n\t\t\t\t// Determine the smallest needed unit of the time\r\n\t\t\t\tvar innerWidth = this.isHorizontal() ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom);\r\n\r\n\t\t\t\t// Crude approximation of what the label length might be\r\n\t\t\t\tvar tempFirstLabel = this.tickFormatFunction(this.firstTick, 0, []);\r\n\t\t\t\tvar tickLabelWidth = this.ctx.measureText(tempFirstLabel).width;\r\n\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(this.options.ticks.maxRotation));\r\n\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(this.options.ticks.maxRotation));\r\n\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\r\n\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\r\n\r\n\t\t\t\t// Start as small as possible\r\n\t\t\t\tthis.tickUnit = 'millisecond';\r\n\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true);\r\n\t\t\t\tthis.displayFormat = this.options.time.displayFormats[this.tickUnit];\r\n\r\n\t\t\t\tvar unitDefinitionIndex = 0;\r\n\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\r\n\r\n\t\t\t\t// While we aren't ideal and we don't have units left\r\n\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\r\n\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\r\n\t\t\t\t\tthis.unitScale = 1;\r\n\r\n\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(this.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\r\n\t\t\t\t\t\t// Use one of the prefedined steps\r\n\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\r\n\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(this.scaleSizeInUnits / labelCapacity)) {\r\n\t\t\t\t\t\t\t\tthis.unitScale = helpers.getValueOrDefault(this.options.time.unitStepSize, unitDefinition.steps[idx]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(this.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\r\n\t\t\t\t\t\t// We have a max step. Scale this unit\r\n\t\t\t\t\t\tthis.unitScale = helpers.getValueOrDefault(this.options.time.unitStepSize, Math.ceil(this.scaleSizeInUnits / labelCapacity));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Move to the next unit up\r\n\t\t\t\t\t\t++unitDefinitionIndex;\r\n\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\r\n\r\n\t\t\t\t\t\tthis.tickUnit = unitDefinition.name;\r\n\t\t\t\t\t\tvar leadingUnitBuffer = this.firstTick.diff(this.getMomentStartOf(this.firstTick), this.tickUnit, true);\r\n\t\t\t\t\t\tvar trailingUnitBuffer = this.getMomentStartOf(this.lastTick.clone().add(1, this.tickUnit)).diff(this.lastTick, this.tickUnit, true);\r\n\t\t\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\r\n\t\t\t\t\t\tthis.displayFormat = this.options.time.displayFormats[unitDefinition.name];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar roundedStart;\r\n\r\n\t\t\t// Only round the first tick if we have no hard minimum\r\n\t\t\tif (!this.options.time.min) {\r\n\t\t\t\tthis.firstTick = this.getMomentStartOf(this.firstTick);\r\n\t\t\t\troundedStart = this.firstTick;\r\n\t\t\t} else {\r\n\t\t\t\troundedStart = this.getMomentStartOf(this.firstTick);\r\n\t\t\t}\r\n\r\n\t\t\t// Only round the last tick if we have no hard maximum\r\n\t\t\tif (!this.options.time.max) {\r\n\t\t\t\tvar roundedEnd = this.getMomentStartOf(this.lastTick);\r\n\t\t\t\tif (roundedEnd.diff(this.lastTick, this.tickUnit, true) !== 0) {\r\n\t\t\t\t\t// Do not use end of because we need this to be in the next time unit\r\n\t\t\t\t\tthis.lastTick = this.getMomentStartOf(this.lastTick.add(1, this.tickUnit));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.smallestLabelSeparation = this.width;\r\n\r\n\t\t\thelpers.each(this.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tfor (var i = 1; i < this.labelMoments[datasetIndex].length; i++) {\r\n\t\t\t\t\tthis.smallestLabelSeparation = Math.min(this.smallestLabelSeparation, this.labelMoments[datasetIndex][i].diff(this.labelMoments[datasetIndex][i - 1], this.tickUnit, true));\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Tick displayFormat override\r\n\t\t\tif (this.options.time.displayFormat) {\r\n\t\t\t\tthis.displayFormat = this.options.time.displayFormat;\r\n\t\t\t}\r\n\r\n\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\r\n\t\t\tthis.ticks.push(this.firstTick.clone());\r\n\r\n\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\r\n\t\t\tfor (var i = 1; i <= this.scaleSizeInUnits; ++i) {\r\n\t\t\t\tvar newTick = roundedStart.clone().add(i, this.tickUnit);\r\n\r\n\t\t\t\t// Are we greater than the max time\r\n\t\t\t\tif (this.options.time.max && newTick.diff(this.lastTick, this.tickUnit, true) >= 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i % this.unitScale === 0) {\r\n\t\t\t\t\tthis.ticks.push(newTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Always show the right tick\r\n\t\t\tvar diff = this.ticks[this.ticks.length - 1].diff(this.lastTick, this.tickUnit);\r\n\t\t\tif (diff !== 0 || this.scaleSizeInUnits === 0) {\r\n\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\r\n\t\t\t\t// but the last tick was not rounded.\r\n\t\t\t\tif (this.options.time.max) {\r\n\t\t\t\t\tthis.ticks.push(this.lastTick.clone());\r\n\t\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.ticks[0], this.tickUnit, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ticks.push(this.lastTick.clone());\r\n\t\t\t\t\tthis.scaleSizeInUnits = this.lastTick.diff(this.firstTick, this.tickUnit, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.ctx.restore();\r\n\t\t},\r\n\t\t// Get tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\tvar label = this.chart.data.labels && index < this.chart.data.labels.length ? this.chart.data.labels[index] : '';\r\n\r\n\t\t\tif (typeof this.chart.data.datasets[datasetIndex].data[0] === 'object') {\r\n\t\t\t\tlabel = this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t}\r\n\r\n\t\t\t// Format nicely\r\n\t\t\tif (this.options.time.tooltipFormat) {\r\n\t\t\t\tlabel = this.parseTime(label).format(this.options.time.tooltipFormat);\r\n\t\t\t}\r\n\r\n\t\t\treturn label;\r\n\t\t},\r\n\t\t// Function to format an individual tick mark\r\n\t\ttickFormatFunction: function tickFormatFunction(tick, index, ticks) {\r\n\t\t\tvar formattedTick = tick.format(this.displayFormat);\r\n\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\treturn callback(formattedTick, index, ticks);\r\n\t\t\t} else {\r\n\t\t\t\treturn formattedTick;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tthis.tickMoments = this.ticks;\r\n\t\t\tthis.ticks = this.ticks.map(this.tickFormatFunction, this);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar labelMoment = value && value.isValid && value.isValid() ? value : this.getLabelMoment(datasetIndex, index);\r\n\r\n\t\t\tif (labelMoment) {\r\n\t\t\t\tvar offset = labelMoment.diff(this.firstTick, this.tickUnit, true);\r\n\r\n\t\t\t\tvar decimal = offset / this.scaleSizeInUnits;\r\n\r\n\t\t\t\tif (this.isHorizontal()) {\r\n\t\t\t\t\tvar innerWidth = this.width - (this.paddingLeft + this.paddingRight);\r\n\t\t\t\t\tvar valueWidth = innerWidth / Math.max(this.ticks.length - 1, 1);\r\n\t\t\t\t\tvar valueOffset = (innerWidth * decimal) + this.paddingLeft;\r\n\r\n\t\t\t\t\treturn this.left + Math.round(valueOffset);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar innerHeight = this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\t\t\tvar valueHeight = innerHeight / Math.max(this.ticks.length - 1, 1);\r\n\t\t\t\t\tvar heightOffset = (innerHeight * decimal) + this.paddingTop;\r\n\r\n\t\t\t\t\treturn this.top + Math.round(heightOffset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null, includeOffset);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar innerDimension = this.isHorizontal() ? this.width - (this.paddingLeft + this.paddingRight) : this.height - (this.paddingTop + this.paddingBottom);\r\n\t\t\tvar offset = (pixel - (this.isHorizontal() ? this.left + this.paddingLeft : this.top + this.paddingTop)) / innerDimension;\r\n\t\t\toffset *= this.scaleSizeInUnits;\r\n\t\t\treturn this.firstTick.clone().add(moment.duration(offset, this.tickUnit).asSeconds(), 'seconds');\r\n\t\t},\r\n\t\tparseTime: function(label) {\r\n\t\t\tif (typeof this.options.time.parser === 'string') {\r\n\t\t\t\treturn moment(label, this.options.time.parser);\r\n\t\t\t}\r\n\t\t\tif (typeof this.options.time.parser === 'function') {\r\n\t\t\t\treturn this.options.time.parser(label);\r\n\t\t\t}\r\n\t\t\t// Date objects\r\n\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\r\n\t\t\t\treturn moment(label);\r\n\t\t\t}\r\n\t\t\t// Moment support\r\n\t\t\tif (label.isValid && label.isValid()) {\r\n\t\t\t\treturn label;\r\n\t\t\t}\r\n\t\t\t// Custom parsing (return an instance of moment)\r\n\t\t\tif (typeof this.options.time.format !== 'string' && this.options.time.format.call) {\r\n\t\t\t\tconsole.warn(\"options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale\");\r\n\t\t\t\treturn this.options.time.format(label);\r\n\t\t\t}\r\n\t\t\t// Moment format parsing\r\n\t\t\treturn moment(label, this.options.time.format);\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"time\", TimeScale, defaultConfig);\r\n\r\n};\r\n\n},{\"moment\":1}]},{},[7]);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/chart.js/dist/Chart.js"],"sourceRoot":"webpack:///"}