{"version":3,"sources":["/home/tg/github/freeng/node_modules/core-js/library/fn/object/assign.js","/home/tg/github/freeng/node_modules/core-js/library/fn/object/define-property.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_object-dps.js","/home/tg/github/freeng/node_modules/babel-runtime/core-js/object/define-property.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_iobject.js","/home/tg/github/freeng/node_modules/babel-runtime/helpers/classCallCheck.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_library.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_ctx.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_object-create.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_to-iobject.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_object-assign.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_wks.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_shared.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_object-gops.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_html.js","/home/tg/github/freeng/src/app/democase/main-validation/main-validation.module.ts","/home/tg/github/freeng/src/app/component/validation/util/api.ts","/home/tg/github/freeng/src/app/component/validation/email/validator.ts","/home/tg/github/freeng/src/app/component/validation/email/directive.ts","/home/tg/github/freeng/src/app/component/validation/date/validator.ts","/home/tg/github/freeng/src/app/component/validation/date/directive.ts","/home/tg/github/freeng/src/app/component/validation/url/validator.ts","/home/tg/github/freeng/src/app/component/validation/url/directive.ts","/home/tg/github/freeng/src/app/component/validation/cn/validator.ts","/home/tg/github/freeng/src/app/component/validation/cn/directive.ts","/home/tg/github/freeng/src/app/component/validation/range/validator.ts","/home/tg/github/freeng/src/app/component/validation/range/directive.ts","/home/tg/github/freeng/src/app/component/validation/number/validator.ts","/home/tg/github/freeng/src/app/component/validation/number/directive.ts","/home/tg/github/freeng/node_modules/libphonenumber-js/es6/common.js","/home/tg/github/freeng/node_modules/libphonenumber-js/es6/metadata.js","/home/tg/github/freeng/node_modules/libphonenumber-js/es6/format.js","/home/tg/github/freeng/node_modules/libphonenumber-js/es6/get number type.js","/home/tg/github/freeng/node_modules/libphonenumber-js/es6/parse.js","/home/tg/github/freeng/node_modules/libphonenumber-js/es6/as you type.js","/home/tg/github/freeng/node_modules/libphonenumber-js/index.es6.js","/home/tg/github/freeng/src/app/component/validation/phone/validator.ts","/home/tg/github/freeng/node_modules/libphonenumber-js/es6/validate.js","/home/tg/github/freeng/src/app/component/validation/phone/directive.ts","/home/tg/github/freeng/src/app/component/validation/custom-form-validator.module.ts","/home/tg/github/freeng/src/app/democase/main-validation/main-validation.component.ts","/home/tg/github/freeng/src/app/democase/main-validation/main-validation.component.ngfactory.js.pre-build-optimizer.js","/home/tg/github/freeng/src/app/democase/main-validation/main-validation.component.scss.shim.ngstyle.js.pre-build-optimizer.js","/home/tg/github/freeng/src/app/democase/main-validation/main-validation.component.html","/home/tg/github/freeng/src/app/democase/main-validation/main-validation-routing.module.ts","/home/tg/github/freeng/src/app/democase/main-validation/main-validation.module.ngfactory.js.pre-build-optimizer.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_an-object.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_array-includes.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_to-integer.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_enum-bug-keys.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_hide.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_redefine.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_classof.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_has.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_object-dp.js","/home/tg/github/freeng/node_modules/libphonenumber-js/metadata.min.json","/home/tg/github/freeng/node_modules/babel-runtime/helpers/extends.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_iter-create.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_dom-create.js","/home/tg/github/freeng/node_modules/babel-runtime/core-js/get-iterator.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_is-object.js","/home/tg/github/freeng/node_modules/core-js/library/modules/es6.string.iterator.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_property-desc.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_shared-key.js","/home/tg/github/freeng/node_modules/core-js/library/modules/es6.array.iterator.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_object-keys.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_ie8-dom-define.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_add-to-unscopables.js","/home/tg/github/freeng/node_modules/core-js/library/fn/get-iterator.js","/home/tg/github/freeng/node_modules/core-js/library/modules/es6.object.define-property.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_to-absolute-index.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_iter-define.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_object-gpo.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_set-to-string-tag.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_iterators.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_to-length.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_export.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_global.js","/home/tg/github/freeng/node_modules/babel-runtime/helpers/createClass.js","/home/tg/github/freeng/node_modules/core-js/library/modules/web.dom.iterable.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_cof.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_fails.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_object-pie.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_core.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_to-object.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_a-function.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_string-at.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_to-primitive.js","/home/tg/github/freeng/node_modules/core-js/library/modules/es6.object.assign.js","/home/tg/github/freeng/node_modules/babel-runtime/core-js/object/assign.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_defined.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_descriptors.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_object-keys-internal.js","/home/tg/github/freeng/node_modules/core-js/library/modules/core.get-iterator-method.js","/home/tg/github/freeng/node_modules/core-js/library/modules/core.get-iterator.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_uid.js","/home/tg/github/freeng/node_modules/core-js/library/modules/_iter-step.js"],"names":["__webpack_require__","module","exports","Object","assign","$Object","it","key","desc","defineProperty","dP","anObject","getKeys","defineProperties","O","Properties","P","keys","length","i","f","default","__esModule","cof","propertyIsEnumerable","split","instance","Constructor","TypeError","aFunction","fn","that","undefined","a","call","b","c","apply","arguments","dPs","enumBugKeys","IE_PROTO","Empty","createDict","iframeDocument","iframe","style","display","appendChild","src","contentWindow","document","open","write","lt","close","F","create","result","IObject","defined","gOPS","pIE","toObject","$assign","A","B","S","Symbol","forEach","k","join","target","source","T","aLen","index","getSymbols","isEnum","concat","j","store","uid","USE_SYMBOL","name","global","getOwnPropertySymbols","documentElement","MainValidationModule","isValueExited","obj","email","control","esm5_forms","required","test","value","directive_EmailValidator","core","EmailValidator","prototype","validate","date","Date","toString","directive_DateValidator","DateValidator","url","directive_UrlValidator","UrlValidator","cn","directive_CnValidator","CnValidator","validator_range","range","v","actualValue","requiredValue","directive_RangeValidator","RangeValidator","ngOnInit","this","validator","ngOnChanges","changes","hasOwnProperty","currentValue","onChange","registerOnValidatorChange","validator_number","number","directive_NumberValidator","NumberValidator","matches_entirely","text","regular_expression","matched_groups","match","get_phone_code","country_metadata","get_national_number_pattern","get_leading_digits","get_format_pattern","format_array","metadata_get_format_format","get_format_leading_digits_patterns","get_format_national_prefix_formatting_rule","get_format_national_prefix_is_optional_when_formatting","get_format_uses_national_prefix","national_prefix_formatting_rule","replace","get_format_international_format","get_metadata_by_country_phone_code","country_phone_code","metadata","countries","country_phone_code_to_countries","get_types","get_type","get_type_mobile","FIRST_GROUP_PATTERN","format_national_number_using_format","format","international","enforce_national_prefix","format_pattern_matcher","RegExp","national_prefix_may_be_omitted","formatted_number","local_to_international_style","local","VALID_PUNCTUATION","trim","get_number_type","first_argument","second_argument","third_argument","_sort_out_arguments","get_number_type_sort_out_arguments","input","Error","country","national_number","phone","is_of_type","type","String","is_viable_phone_number","parse","VALID_DIGITS","VALID_PHONE_NUMBER_PATTERN","MIN_LENGTH_FOR_NSN","PHONE_NUMBER_START_PATTERN","AFTER_PHONE_NUMBER_END_PATTERN","LEADING_PLUS_CHARS_PATTERN","DIGIT_MAPPINGS","0","1","2","3","4","5","6","7","8","9","０","１","２","３","４","５","６","７","８","９","٠","١","٢","٣","٤","٥","٦","٧","٨","٩","۰","۱","۲","۳","۴","۵","۶","۷","۸","۹","MAX_LENGTH_COUNTRY_CODE","MAX_LENGTH_FOR_NSN","MAX_INPUT_STRING_LENGTH","default_options","options","restrict_to_country","extends_default","restrict","parse_sort_out_arguments","formatted_phone_number","extract_formatted_phone_number","_parse_phone_number_a","parse_phone_number_and_country_phone_code","is_international","normalize","strip_national_prefix","find_country_code","replacements","replaced","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","next","done","replacement","toUpperCase","err","return","replace_characters","starts_at","search","slice","parse_phone_number","national_prefix_for_parsing","get_national_prefix_for_parsing","national_prefix_pattern","national_prefix_matcher","exec","national_significant_number","national_prefix_transform_rule","national_number_rule","national_phone_number","possible_countries","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","country_code","DUMMY_DIGIT_MATCHER","LONGEST_DUMMY_PHONE_NUMBER","repeat","DIGIT_PLACEHOLDER_MATCHER","DIGIT_PLACEHOLDER_MATCHER_GLOBAL","CHARACTER_CLASS_PATTERN","STANDALONE_DIGIT_PATTERN","ELIGIBLE_FORMAT_PATTERN","VALID_INCOMPLETE_PHONE_NUMBER_PATTERN","es6_as_you_type","as_you_type","classCallCheck_default","default_country","reset","createClass_default","extracted_number","indexOf","process_input","current_output","parsed_input","reset_countriness","determine_the_country","extract_country_phone_code","initialize_phone_number_formats_for_this_country_phone_code","reset_format","previous_national_prefix","national_prefix","extract_national_prefix","matching_formats","available_formats","should_format","format_as_non_formatted_number","match_formats_by_leading_digits","formatted_national_phone_number","format_national_phone_number","full_phone_number","template","next_digits","national_number_formatted_with_previous_format","chosen_format","format_next_national_number_digits","attempt_to_format_complete_phone_number","choose_another_format","reformat_national_number","reset_country","partially_populated_template","last_match_position","filter","leading_digits","index_of_leading_digits_pattern","leading_digits_pattern_count","leading_digits_pattern_index","Math","min","leading_digits_pattern","validate_format","create_formatting_template","full_number","formatted_national_number","get_format_national_prefix_is_mandatory_when_formatting","get_template_for_phone_number_format_pattern","number_pattern","dummy_phone_number_matching_format_pattern","number_format","get_format_format","strict_pattern","national_number_dummy_digits","digits","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","digit","cut_before","retained_template","dangling_braces","count_occurences","close_dangling_braces","symbol","string","count","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","times","index_es6_as_you_type","metadata_min_default","constructor","asYouType","parameters","Array","push","isValidNumber","directive_PhoneValidator","PhoneValidator","CustomFormValidator","main_validation_component_MainValidationComponent","MainValidationComponent","fb","testForm","group","password","minLength","maxLength","age","max","onSubmit","RenderType_MainValidationComponent","encapsulation","styles","data","animation","definitions","opacity","transform","offset","expr","timings","View_MainValidationComponent_2","_l","View_MainValidationComponent_1","common","ngIf","_ck","_v","component","get","hasError","View_MainValidationComponent_4","View_MainValidationComponent_5","View_MainValidationComponent_3","_co","View_MainValidationComponent_7","View_MainValidationComponent_8","View_MainValidationComponent_6","View_MainValidationComponent_10","View_MainValidationComponent_11","View_MainValidationComponent_9","View_MainValidationComponent_13","View_MainValidationComponent_14","View_MainValidationComponent_12","View_MainValidationComponent_16","View_MainValidationComponent_17","View_MainValidationComponent_15","View_MainValidationComponent_0","dom","grid_directive","grid","tab_component_ngfactory","tab_component","direction","header","templates","en","$event","ad","onReset","form","ngSubmit","inputtext_component_ngfactory","inputtext_component","placeholder","p0_0","button_directive","theme","code_component_ngfactory","code_component","lang","translate_pipe","translate_service","valid","dirty","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","MainValidationComponentNgFactory","fadeInUpState","MainValidationRoutingModule","d","__webpack_exports__","MainValidationModuleNgFactory","translate_loader","translate_compiler","translate_parser","missing_translation_handler","translate_store","share","pagination_component","table_component","_ngx_translate_core","language","router","path","isObject","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","ceil","floor","isNaN","createDesc","object","TAG","ARG","e","tryGet","callee","IE8_DOM_DEFINE","toPrimitive","Attributes","20","27","30","31","32","33","34","36","39","40","41","43","44","45","46","47","48","49","51","52","53","54","55","56","57","58","60","61","62","63","64","65","66","81","82","84","86","90","91","92","93","94","95","98","211","212","213","216","218","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","260","261","262","263","264","265","266","267","268","269","290","291","297","298","299","350","351","352","353","354","355","356","357","358","359","370","371","372","373","374","375","376","377","378","380","381","382","385","386","387","389","420","421","423","500","501","502","503","504","505","506","507","508","509","590","591","592","593","594","595","596","597","598","599","670","672","673","674","675","676","677","678","679","680","681","682","683","685","686","687","688","689","690","691","692","800","808","850","852","853","855","856","870","878","880","881","882","883","886","888","960","961","962","963","964","965","966","967","968","970","971","972","973","974","975","976","977","979","992","993","994","995","996","998","AC","AD","AE","AF","AG","AI","AL","AM","AO","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GT","GU","GW","GY","HK","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TA","TC","TD","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","001","_assign2","descriptor","setToStringTag","IteratorPrototype","NAME","is","createElement","$at","iterated","_t","_i","point","bitmap","enumerable","configurable","writable","shared","addToUnscopables","step","Iterators","kind","_k","Arguments","$keys","$export","toInteger","LIBRARY","redefine","hide","has","$iterCreate","getPrototypeOf","ITERATOR","BUGGY","returnThis","Base","DEFAULT","IS_SET","FORCED","methods","getMethod","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","values","ObjectProto","def","tag","stat","ctx","own","out","IS_FORCED","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","W","expProto","C","Function","virtual","R","U","window","self","__g","_defineProperty2","props","protoProps","staticProps","TO_STRING_TAG","DOMIterables","Collection","version","__e","TO_STRING","pos","s","l","charCodeAt","charAt","val","valueOf","arrayIndexOf","names","classof","getIteratorMethod","getIterator","iterFn","id","px","random"],"mappings":"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","file":"3.0bf9edc429e4dda6f5ed.chunk.js","sourcesContent":["require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/fn/object/assign.js\n// module id = +drv\n// module chunks = 3","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/fn/object/define-property.js\n// module id = 0aOR\n// module chunks = 3","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_object-dps.js\n// module id = 0dXn\n// module chunks = 3","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/babel-runtime/core-js/object/define-property.js\n// module id = 0hsw\n// module chunks = 3","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_iobject.js\n// module id = 1qma\n// module chunks = 3","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/babel-runtime/helpers/classCallCheck.js\n// module id = 4WdS\n// module chunks = 3","module.exports = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_library.js\n// module id = 5D9A\n// module chunks = 3","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_ctx.js\n// module id = 6RMp\n// module chunks = 3","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_object-create.js\n// module id = 6lsr\n// module chunks = 3","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_to-iobject.js\n// module id = 7Xl6\n// module chunks = 3","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_object-assign.js\n// module id = Afhp\n// module chunks = 3","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_wks.js\n// module id = B5Yj\n// module chunks = 3","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_shared.js\n// module id = DBd0\n// module chunks = 3","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_object-gops.js\n// module id = E5ub\n// module chunks = 3","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_html.js\n// module id = FUUR\n// module chunks = 3","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {GridModule} from '../../component/grid/grid.directive';\nimport {TableModule} from '../../component/table/table.component';\nimport {CodeModule} from '../../component/code/code.component';\nimport {TabGroupModule} from '../../component/tab/tab.component';\nimport {LanguageModule} from '../common/language';\nimport {MainValidationRoutingModule} from './main-validation-routing.module';\nimport {MainValidationComponent} from './main-validation.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {InputtextModule} from '../../component/inputtext/inputtext.component';\nimport {ButtonModule} from '../../component/button/button.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TabGroupModule,\n    CodeModule,\n    TableModule,\n    GridModule,\n    LanguageModule,\n    InputtextModule,\n    ButtonModule,\n    MainValidationRoutingModule\n  ],\n  declarations: [MainValidationComponent]\n})\n\nexport class MainValidationModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/democase/main-validation/main-validation.module.ts","export function isValueExited(obj: any): boolean {\n  return obj !== undefined && obj !== null;\n}\n\nexport function isDate(obj: any): boolean {\n  return !/Invalid|NaN/.test(new Date(obj).toString());\n}\n\nexport function isEmail(obj: any): boolean {\n  const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return regexp.test(obj);\n}\n\nexport function isNumeric(obj: any): boolean {\n  const numeric = /^[-+]?[0-9]+$/;\n  return numeric.test(obj);\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/util/api.ts","import {AbstractControl, ValidatorFn, Validators} from '@angular/forms';\nimport {isEmail, isValueExited} from '../util/api';\nexport const email: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (isValueExited(Validators.required(control))) {\n    return null;\n  }\n  return isEmail(control.value) ? null : {email: true};\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/email/validator.ts","import {Directive, forwardRef} from '@angular/core';\nimport {email} from './validator';\nimport {NG_VALIDATORS, Validator, AbstractControl} from '@angular/forms';\n\nconst EMAIL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EmailValidator),\n  multi: true\n};\n@Directive({\n  selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n  providers: [EMAIL_VALIDATOR]\n})\nexport class EmailValidator implements Validator {\n  validate(control: AbstractControl): { [key: string]: any } {\n    return email(control);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/email/directive.ts","import {AbstractControl, ValidatorFn, Validators} from '@angular/forms';\nimport {isDate, isValueExited} from '../util/api';\nexport const date: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (isValueExited(Validators.required(control))) {\n    return null;\n  }\n  const value: string = control.value;\n  return isDate(value) ? null : {date: true};\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/date/validator.ts","import {Directive, forwardRef} from '@angular/core';\nimport {NG_VALIDATORS, Validator, AbstractControl} from '@angular/forms';\nimport {date} from './validator';\n\nconst DATE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => DateValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[date][formControlName],[date][formControl],[date][ngModel]',\n  providers: [DATE_VALIDATOR]\n})\nexport class DateValidator implements Validator {\n  validate(control: AbstractControl): { [key: string]: any } {\n    return date(control);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/date/directive.ts","import {AbstractControl, ValidatorFn, Validators} from '@angular/forms';\nimport {isValueExited} from '../util/api';\nexport const url: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (isValueExited(Validators.required(control))) {\n    return null;\n  }\n  const reg = /(^#)|(^http(s*):\\/\\/[^\\s]+\\.[^\\s]+)/;\n  return reg.test(control.value) ? null : {url: true};\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/url/validator.ts","import {Directive, forwardRef} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\nimport {url} from './validator';\nconst URL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => UrlValidator),\n  multi: true\n};\n@Directive({\n  selector: '[url][formControlName],[url][formControl],[url][ngModel]',\n  providers: [URL_VALIDATOR]\n})\nexport class UrlValidator implements Validator{\n  validate(control: AbstractControl): { [key: string]: any } {\n    return url(control);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/url/directive.ts","import {AbstractControl, ValidatorFn, Validators} from '@angular/forms';\nimport {isValueExited} from '../util/api';\nexport const cn: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (isValueExited(Validators.required(control))) {\n    return null;\n  }\n  const reg = /^[\\u4e00-\\u9fa5]+$/;\n  return reg.test(control.value) ? null : {cn: true};\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/cn/validator.ts","import {Directive, forwardRef} from '@angular/core';\nimport {NG_VALIDATORS, Validator, AbstractControl} from '@angular/forms';\nimport {cn} from './validator';\n\nconst CN_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CnValidator),\n  multi: true\n};\n@Directive({\n  selector: '[cn][formControlName],[cn][formControl],[cn][ngModel]',\n  providers: [CN_VALIDATOR]\n})\nexport class CnValidator implements Validator {\n  validate(control: AbstractControl): { [key: string]: any } {\n    return cn(control);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/cn/directive.ts","import {AbstractControl, ValidatorFn, Validators} from '@angular/forms';\nimport {isValueExited} from '../util/api';\n\nexport function range(range: Array<number>): ValidatorFn {\n  return (control: AbstractControl): {[key: string]: any} => {\n    if (!isValueExited(range) || isValueExited(Validators.required(control))) {\n      return null;\n    }\n    const v: number = +control.value;\n    return v >= range[0] && v <= range[1] ? null : {actualValue: v, requiredValue: range, range: true};\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/range/validator.ts","import {Directive, forwardRef, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator, ValidatorFn} from '@angular/forms';\nimport {range} from './validator';\n\nconst RANGE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RangeValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[range][formControlName],[range][formControl],[range][ngModel]',\n  providers: [RANGE_VALIDATOR]\n})\nexport class RangeValidator implements Validator, OnInit, OnChanges {\n  @Input() range: [number];\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = range(this.range);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        if (key === 'range') {\n          this.validator = range(changes[key].currentValue);\n          if (this.onChange) {\n            this.onChange();\n          }\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/range/directive.ts","import {AbstractControl, ValidatorFn, Validators} from '@angular/forms';\nimport {isValueExited} from '../util/api';\nexport const number: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (isValueExited(Validators.required(control))) {\n    return null;\n  }\n  const reg = /^\\d+$/;\n  return reg.test(control.value) ? null : {number: true};\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/number/validator.ts","import {Directive, forwardRef} from '@angular/core';\nimport {NG_VALIDATORS, Validator, AbstractControl} from '@angular/forms';\nimport {number} from './validator';\n\nconst NUMBER_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NumberValidator),\n  multi: true\n};\n@Directive({\n  selector: '[number][formControlName],[number][formControl],[number][ngModel]',\n  providers: [NUMBER_VALIDATOR]\n})\nexport class NumberValidator implements Validator {\n  validate(control: AbstractControl): { [key: string]: any } {\n    return number(control);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/number/directive.ts","// Checks whether the entire input sequence can be matched\n// against the regular expression.\nexport function matches_entirely() {\n\tvar text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\tvar regular_expression = arguments[1];\n\n\tif (typeof regular_expression === 'string') {\n\t\tregular_expression = '^(?:' + regular_expression + ')$';\n\t}\n\n\tvar matched_groups = text.match(regular_expression);\n\treturn matched_groups && matched_groups[0].length === text.length;\n}\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/libphonenumber-js/es6/common.js\n// module id = null\n// module chunks = ","export function get_phone_code(country_metadata) {\n\treturn country_metadata[0];\n}\n\nexport function get_national_number_pattern(country_metadata) {\n\treturn country_metadata[1];\n}\n\nexport function get_formats(country_metadata) {\n\treturn country_metadata[2] || [];\n}\n\nexport function get_national_prefix(country_metadata) {\n\treturn country_metadata[3];\n}\n\nexport function get_national_prefix_formatting_rule(country_metadata) {\n\treturn country_metadata[4];\n}\n\nexport function get_national_prefix_for_parsing(country_metadata) {\n\tvar national_prefix_for_parsing = country_metadata[5];\n\n\t// If `national_prefix_for_parsing` is not set explicitly,\n\t// then infer it from `national_prefix` (if any)\n\tif (!national_prefix_for_parsing) {\n\t\tnational_prefix_for_parsing = get_national_prefix(country_metadata);\n\t}\n\n\treturn national_prefix_for_parsing;\n}\n\nexport function get_national_prefix_transform_rule(country_metadata) {\n\treturn country_metadata[6];\n}\n\nexport function get_national_prefix_is_optional_when_formatting(country_metadata) {\n\treturn country_metadata[7];\n}\n\nexport function get_leading_digits(country_metadata) {\n\treturn country_metadata[8];\n}\n\nexport function get_format_pattern(format_array) {\n\treturn format_array[0];\n}\n\nexport function get_format_format(format_array) {\n\treturn format_array[1];\n}\n\nexport function get_format_leading_digits_patterns(format_array) {\n\treturn format_array[2] || [];\n}\n\nexport function get_format_national_prefix_formatting_rule(format_array, country_metadata) {\n\treturn format_array[3] || get_national_prefix_formatting_rule(country_metadata);\n}\n\nexport function get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata) {\n\treturn format_array[4] || get_national_prefix_is_optional_when_formatting(country_metadata);\n}\n\nexport function get_format_national_prefix_is_mandatory_when_formatting(format_array, country_metadata) {\n\tvar national_prefix_formatting_rule = get_format_national_prefix_formatting_rule(format_array, country_metadata);\n\n\t// National prefix is omitted if there's no national prefix formatting rule\n\t// set for this country, or when the national prefix formatting rule\n\t// contains no national prefix itself, or when this rule is set but\n\t// national prefix is optional for this phone number format\n\t// (and it is not enforced explicitly)\n\treturn national_prefix_formatting_rule &&\n\t// Check that national prefix formatting rule is not a dummy one.\n\t// Check that national prefix formatting rule actually has national prefix digit(s).\n\tget_format_uses_national_prefix(national_prefix_formatting_rule) &&\n\t// Or maybe national prefix is optional for this format\n\t!get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata);\n}\n\n// Checks whether national prefix formatting rule contains national prefix\nexport function get_format_uses_national_prefix(national_prefix_formatting_rule) {\n\t// Check that national prefix formatting rule is not a dummy one\n\treturn national_prefix_formatting_rule !== '$1' &&\n\t// Check that national prefix formatting rule actually has national prefix digit(s)\n\t/\\d/.test(national_prefix_formatting_rule.replace('$1', ''));\n}\n\nexport function get_format_international_format(format_array) {\n\treturn format_array[5] || get_format_format(format_array);\n}\n\n// Formatting information for regions which share\n// a country calling code is contained by only one region\n// for performance reasons. For example, for NANPA region\n// (\"North American Numbering Plan Administration\",\n//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n// it will be contained in the metadata for `US`.\nexport function get_metadata_by_country_phone_code(country_phone_code, metadata) {\n\tvar country_code = metadata.country_phone_code_to_countries[country_phone_code][0];\n\treturn metadata.countries[country_code];\n}\n\nexport function get_types(country_metadata) {\n\treturn country_metadata[9];\n}\n\nfunction get_type(country_metadata, index) {\n\treturn get_types(country_metadata) ? get_types(country_metadata)[index] : undefined;\n}\n\nexport function get_type_fixed_line(country_metadata) {\n\treturn get_type(country_metadata, 0);\n}\n\nexport function get_type_mobile(country_metadata) {\n\treturn get_type(country_metadata, 1);\n}\n\nexport function get_type_toll_free(country_metadata) {\n\treturn get_type(country_metadata, 2);\n}\n\nexport function get_type_premium_rate(country_metadata) {\n\treturn get_type(country_metadata, 3);\n}\n\nexport function get_type_personal_number(country_metadata) {\n\treturn get_type(country_metadata, 4);\n}\n\nexport function get_type_voice_mail(country_metadata) {\n\treturn get_type(country_metadata, 5);\n}\n\nexport function get_type_uan(country_metadata) {\n\treturn get_type(country_metadata, 6);\n}\n\nexport function get_type_pager(country_metadata) {\n\treturn get_type(country_metadata, 7);\n}\n\nexport function get_type_voip(country_metadata) {\n\treturn get_type(country_metadata, 8);\n}\n\nexport function get_type_shared_cost(country_metadata) {\n\treturn get_type(country_metadata, 9);\n}\n\nexport function get_country_phone_code(country, country_metadata) {\n\treturn get_phone_code(country_metadata[country]);\n}\n//# sourceMappingURL=metadata.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/libphonenumber-js/es6/metadata.js\n// module id = null\n// module chunks = ","import _getIterator from 'babel-runtime/core-js/get-iterator';\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\nimport { matches_entirely } from './common';\n\nimport { parse_phone_number_and_country_phone_code, VALID_PUNCTUATION } from './parse';\n\nimport { get_phone_code, get_formats, get_format_pattern, get_format_format, get_format_leading_digits_patterns, get_format_national_prefix_formatting_rule, get_format_national_prefix_is_optional_when_formatting, get_format_international_format, get_metadata_by_country_phone_code } from './metadata';\n\n// Formats a phone number\n//\n// Example use cases:\n//\n// ```js\n// format('8005553535', 'RU', 'International')\n// format('8005553535', 'RU', 'International', metadata)\n// format({ phone: '8005553535', country: 'RU' }, 'International')\n// format({ phone: '8005553535', country: 'RU' }, 'International', metadata)\n// format('+78005553535', 'National')\n// format('+78005553535', 'National', metadata)\n// ```\n//\nexport default function format(first_argument, second_argument, third_argument, fourth_argument) {\n\tvar _sort_out_arguments = sort_out_arguments(first_argument, second_argument, third_argument, fourth_argument),\n\t    input = _sort_out_arguments.input,\n\t    format_type = _sort_out_arguments.format_type,\n\t    metadata = _sort_out_arguments.metadata;\n\n\tvar country_metadata = void 0;\n\n\tif (input.country) {\n\t\tcountry_metadata = metadata.countries[input.country];\n\t}\n\n\tvar _parse_phone_number_a = parse_phone_number_and_country_phone_code(input.phone, metadata),\n\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t    number = _parse_phone_number_a.number;\n\n\tif (country_phone_code) {\n\t\t// Check country restriction\n\t\tif (input.country && country_metadata && country_phone_code !== get_phone_code(country_metadata)) {\n\t\t\treturn input.phone;\n\t\t}\n\n\t\tcountry_metadata = get_metadata_by_country_phone_code(country_phone_code, metadata);\n\t}\n\n\tif (!country_metadata) {\n\t\treturn input.phone;\n\t}\n\n\tswitch (format_type) {\n\t\tcase 'International':\n\t\t\tif (!number) {\n\t\t\t\treturn '+' + get_phone_code(country_metadata);\n\t\t\t}\n\t\t\tvar national_number = format_national_number(number, 'International', false, country_metadata);\n\t\t\treturn '+' + get_phone_code(country_metadata) + ' ' + national_number;\n\n\t\tcase 'International_plaintext':\n\t\t\treturn '+' + get_phone_code(country_metadata) + input.phone;\n\n\t\tcase 'National':\n\t\t\tif (!number) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn format_national_number(number, 'National', false, country_metadata);\n\t}\n}\n\n// This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly.  Therefore, we use \\d, so that the first\n// group actually used in the pattern will be matched.\nexport var FIRST_GROUP_PATTERN = /(\\$\\d)/;\n\nexport function format_national_number_using_format(number, format, international, enforce_national_prefix, country_metadata) {\n\tvar format_pattern_matcher = new RegExp(get_format_pattern(format));\n\n\tvar national_prefix_formatting_rule = get_format_national_prefix_formatting_rule(format, country_metadata);\n\n\t// National prefix is omitted if there's no national prefix formatting rule\n\t// set for this country, or when this rule is set but\n\t// national prefix is optional for this phone number format\n\t// (and it is not enforced explicitly)\n\tvar national_prefix_may_be_omitted = !national_prefix_formatting_rule || national_prefix_formatting_rule && get_format_national_prefix_is_optional_when_formatting(format, country_metadata) && !enforce_national_prefix;\n\n\tif (!international && !national_prefix_may_be_omitted) {\n\t\treturn number.replace(format_pattern_matcher, get_format_format(format).replace(FIRST_GROUP_PATTERN, national_prefix_formatting_rule));\n\t}\n\n\tvar formatted_number = number.replace(format_pattern_matcher, international ? get_format_international_format(format) : get_format_format(format));\n\n\tif (international) {\n\t\treturn local_to_international_style(formatted_number);\n\t}\n\n\treturn formatted_number;\n}\n\nexport function format_national_number(number, format_as, enforce_national_prefix, country_metadata) {\n\tvar format = choose_format_for_number(get_formats(country_metadata), number);\n\n\tif (!format) {\n\t\treturn number;\n\t}\n\n\treturn format_national_number_using_format(number, format, format_as === 'International', enforce_national_prefix, country_metadata);\n}\n\nexport function choose_format_for_number(available_formats, national_number) {\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = _getIterator(available_formats), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _format = _step.value;\n\n\t\t\t// Validate leading digits\n\t\t\tif (get_format_leading_digits_patterns(_format).length > 0) {\n\t\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\n\t\t\t\tvar last_leading_digits_pattern = get_format_leading_digits_patterns(_format)[get_format_leading_digits_patterns(_format).length - 1];\n\n\t\t\t\t// If leading digits don't match then move on to the next phone number format\n\t\t\t\tif (national_number.search(last_leading_digits_pattern) !== 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check that the national number matches the phone number format regular expression\n\t\t\tif (matches_entirely(national_number, new RegExp(get_format_pattern(_format)))) {\n\t\t\t\treturn _format;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\nexport function local_to_international_style(local) {\n\treturn local.replace(new RegExp('[' + VALID_PUNCTUATION + ']+', 'g'), ' ').trim();\n}\n\n// Sort out arguments\nfunction sort_out_arguments() {\n\tvar first_argument = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\tvar second_argument = arguments[1];\n\tvar third_argument = arguments[2];\n\tvar fourth_argument = arguments[3];\n\n\tvar input = void 0;\n\tvar format_type = void 0;\n\tvar metadata = void 0;\n\n\t// Sort out arguments\n\tif (typeof first_argument === 'string') {\n\t\t// If country code is supplied\n\t\tif (typeof third_argument === 'string') {\n\t\t\t// Will be `parse()`d later in code\n\t\t\tinput = {\n\t\t\t\tphone: first_argument,\n\t\t\t\tcountry: second_argument\n\t\t\t};\n\n\t\t\tformat_type = third_argument;\n\t\t\tmetadata = fourth_argument;\n\t\t}\n\t\t// Just an international phone number is supplied\n\t\telse {\n\t\t\t\t// Will be `parse()`d later in code\n\t\t\t\tinput = {\n\t\t\t\t\tphone: first_argument\n\t\t\t\t};\n\n\t\t\t\tif (typeof second_argument !== 'string') {\n\t\t\t\t\tthrow new Error('Format type argument not passed for `format()`');\n\t\t\t\t}\n\n\t\t\t\tformat_type = second_argument;\n\t\t\t\tmetadata = third_argument;\n\t\t\t}\n\t} else {\n\t\tinput = first_argument;\n\t\tformat_type = second_argument;\n\t\tmetadata = third_argument;\n\t}\n\n\t// Sanity check\n\tif (!metadata) {\n\t\tthrow new Error('Metadata not passed');\n\t}\n\n\tswitch (format_type) {\n\t\tcase 'International':\n\t\tcase 'International_plaintext':\n\t\tcase 'National':\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error('Unknown format type argument passed to \"format()\": \"' + format_type + '\"');\n\t}\n\n\treturn { input: input, format_type: format_type, metadata: metadata };\n}\n//# sourceMappingURL=format.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/libphonenumber-js/es6/format.js\n// module id = null\n// module chunks = ","import parse, { is_viable_phone_number } from './parse';\n\nimport { matches_entirely } from './common';\n\nimport { get_national_number_pattern, get_type_fixed_line, get_type_mobile, get_type_toll_free, get_type_premium_rate, get_type_personal_number, get_type_voice_mail, get_type_uan, get_type_pager, get_type_voip, get_type_shared_cost } from './metadata';\n\n// Finds out national phone number type (fixed line, mobile, etc)\nexport default function get_number_type(first_argument, second_argument, third_argument) {\n\tvar _sort_out_arguments = sort_out_arguments(first_argument, second_argument, third_argument),\n\t    input = _sort_out_arguments.input,\n\t    metadata = _sort_out_arguments.metadata;\n\n\t// Sanity check\n\n\n\tif (!metadata) {\n\t\tthrow new Error('Metadata not passed');\n\t}\n\n\t// When no input was passed\n\tif (!input) {\n\t\treturn;\n\t}\n\n\t// When `parse()` returned `{}`\n\t// meaning that the phone number is not a valid one.\n\tif (!input.country) {\n\t\treturn;\n\t}\n\n\tvar national_number = input.phone;\n\tvar country_metadata = metadata.countries[input.country];\n\n\t// The following is copy-pasted from the original function:\n\t// https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\n\n\t// Is this national number even valid for this country\n\tif (!is_of_type(national_number, get_national_number_pattern(country_metadata))) {\n\t\treturn; // 'UNKNOWN'\n\t}\n\n\tif (is_of_type(national_number, get_type_premium_rate(country_metadata))) {\n\t\treturn 'PREMIUM_RATE';\n\t}\n\n\tif (is_of_type(national_number, get_type_toll_free(country_metadata))) {\n\t\treturn 'TOLL_FREE';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_shared_cost(country_metadata))) {\n\t\treturn 'SHARED_COST';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_voip(country_metadata))) {\n\t\treturn 'VOIP';\n\t}\n\n\tif (is_of_type(national_number, get_type_personal_number(country_metadata))) {\n\t\treturn 'PERSONAL_NUMBER';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_pager(country_metadata))) {\n\t\treturn 'PAGER';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_uan(country_metadata))) {\n\t\treturn 'UAN';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_voice_mail(country_metadata))) {\n\t\treturn 'VOICEMAIL';\n\t}\n\n\t// Is it fixed line number\n\tif (is_of_type(national_number, get_type_fixed_line(country_metadata))) {\n\t\t// Because duplicate regular expressions are removed\n\t\t// to reduce metadata size, if there's no \"mobile\" pattern\n\t\t// then it means it was removed due to being a duplicate of some other pattern.\n\t\t//\n\t\tif (!get_type_mobile(country_metadata)) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\t// Check if the number happens to qualify as both fixed line and mobile.\n\t\t// (no such country in the minimal metadata set)\n\t\t/* istanbul ignore if */\n\t\tif (is_of_type(national_number, get_type_mobile(country_metadata))) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\treturn 'FIXED_LINE';\n\t}\n\n\tif (is_of_type(national_number, get_type_mobile(country_metadata))) {\n\t\treturn 'MOBILE';\n\t}\n\n\t// return 'UNKNOWN'\n}\n\nexport function is_of_type(national_number, type) {\n\t// // Check if any possible number lengths are present;\n\t// // if so, we use them to avoid checking\n\t// // the validation pattern if they don't match.\n\t// // If they are absent, this means they match\n\t// // the general description, which we have\n\t// // already checked before a specific number type.\n\t// if (get_possible_lengths(type) &&\n\t// \tget_possible_lengths(type).indexOf(national_number.length) === -1)\n\t// {\n\t// \treturn false\n\t// }\n\n\t// get_type_pattern(type) === type\n\treturn matches_entirely(national_number, type);\n}\n\n// Sort out arguments\nexport function sort_out_arguments(first_argument, second_argument, third_argument) {\n\tvar input = void 0;\n\tvar metadata = void 0;\n\n\t// Normalize numerical `value`.\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/142\n\tif (typeof first_argument === 'number') {\n\t\tfirst_argument = String(first_argument);\n\t}\n\n\tif (typeof first_argument === 'string') {\n\t\t// If country code is supplied\n\t\tif (typeof second_argument === 'string' || second_argument === undefined) {\n\t\t\tmetadata = third_argument;\n\n\t\t\t// `parse` extracts phone numbers from raw text,\n\t\t\t// therefore it will cut off all \"garbage\" characters,\n\t\t\t// while this `validate` function needs to verify\n\t\t\t// that the phone number contains no \"garbage\"\n\t\t\t// therefore the explicit `is_viable_phone_number` check.\n\t\t\tif (is_viable_phone_number(first_argument)) {\n\t\t\t\tinput = parse(first_argument, second_argument, metadata);\n\t\t\t}\n\t\t}\n\t\t// Just an international phone number is supplied\n\t\telse {\n\t\t\t\tmetadata = second_argument;\n\n\t\t\t\t// `parse` extracts phone numbers from raw text,\n\t\t\t\t// therefore it will cut off all \"garbage\" characters,\n\t\t\t\t// while this `validate` function needs to verify\n\t\t\t\t// that the phone number contains no \"garbage\"\n\t\t\t\t// therefore the explicit `is_viable_phone_number` check.\n\t\t\t\tif (is_viable_phone_number(first_argument)) {\n\t\t\t\t\tinput = parse(first_argument, metadata);\n\t\t\t\t}\n\t\t\t}\n\t} else {\n\t\t// The `first_argument` must be a valid phone number\n\t\t// as a whole, not just a part of it which gets parsed here.\n\t\tif (first_argument && first_argument.phone && is_viable_phone_number(first_argument.phone)) {\n\t\t\tinput = first_argument;\n\t\t}\n\n\t\tmetadata = second_argument;\n\t}\n\n\treturn { input: input, metadata: metadata };\n}\n//# sourceMappingURL=get number type.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/libphonenumber-js/es6/get number type.js\n// module id = null\n// module chunks = ","import _getIterator from 'babel-runtime/core-js/get-iterator';\nimport _extends from 'babel-runtime/helpers/extends';\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\nimport { matches_entirely } from './common';\n\nimport { get_phone_code, get_national_number_pattern, get_national_prefix_for_parsing, get_national_prefix_transform_rule, get_leading_digits, get_metadata_by_country_phone_code, get_formats } from\n// get_format_national_prefix_is_mandatory_when_formatting\n'./metadata';\n\nimport { choose_format_for_number } from './format';\n\nimport get_number_type from './get number type';\n\nexport var PLUS_CHARS = '+\\uFF0B';\n\n// Digits accepted in phone numbers\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\nexport var VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9';\n\n// `DASHES` will be right after the opening square bracket of the \"character class\"\nvar DASHES = '-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D';\nvar SLASHES = '\\uFF0F/';\nvar DOTS = '\\uFF0E.';\nvar WHITESPACE = ' \\xA0\\xAD\\u200B\\u2060\\u3000';\nvar BRACKETS = '()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]';\nvar TILDES = '~\\u2053\\u223C\\uFF5E';\n\n// Regular expression of acceptable punctuation found in phone numbers. This\n// excludes punctuation found as a leading character only. This consists of dash\n// characters, white space characters, full stops, slashes, square brackets,\n// parentheses and tildes. Full-width variants are also present.\nexport var VALID_PUNCTUATION = '' + DASHES + SLASHES + DOTS + WHITESPACE + BRACKETS + TILDES;\n\n//  Regular expression of viable phone numbers. This is location independent.\n//  Checks we have at least three leading digits, and only valid punctuation,\n//  alpha characters and digits in the phone number. Does not include extension\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\n//  used as a placeholder for carrier codes, for example in Brazilian phone\n//  numbers. We also allow multiple '+' characters at the start.\n//\n//  Corresponds to the following:\n//  [digits]{minLengthNsn}|\n//  plus_sign*\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\n//\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\n//  The second expression restricts the number of digits to three or more, but\n//  then allows them to be in international form, and to have alpha-characters\n//  and punctuation. We split up the two reg-exes here and combine them when\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\n//  with ^ and append $ to each branch.\n//\n//  \"Note VALID_PUNCTUATION starts with a -,\n//   so must be the first in the range\" (c) Google devs.\n//  (wtf did they mean by saying that; probably nothing)\n//\nvar MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}';\n//\n// And this is the second reg-exp:\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\n//\nvar VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*';\n\n// The combined regular expression for valid phone numbers:\n//\nvar VALID_PHONE_NUMBER_PATTERN = new RegExp(\n// Either a short two-digit-only phone number\n'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' +\n// Or a longer fully parsed phone number (min 3 characters)\n'^' + VALID_PHONE_NUMBER +\n// screw phone number extensions\n// '(?:' + EXTN_PATTERNS_FOR_PARSING + ')?' +\n'$', 'i');\n\n// This consists of the plus symbol, digits, and arabic-indic digits.\nvar PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']');\n\n// Regular expression of trailing characters that we want to remove.\nvar AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + ']+$');\n\nvar LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+');\n\n// These mappings map a character (key) to a specific digit that should\n// replace it for normalization purposes. Non-European digits that\n// may be used in phone numbers are mapped to a European equivalent.\n//\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\n//\nexport var DIGIT_MAPPINGS = {\n\t'0': '0',\n\t'1': '1',\n\t'2': '2',\n\t'3': '3',\n\t'4': '4',\n\t'5': '5',\n\t'6': '6',\n\t'7': '7',\n\t'8': '8',\n\t'9': '9',\n\t'\\uFF10': '0', // Fullwidth digit 0\n\t'\\uFF11': '1', // Fullwidth digit 1\n\t'\\uFF12': '2', // Fullwidth digit 2\n\t'\\uFF13': '3', // Fullwidth digit 3\n\t'\\uFF14': '4', // Fullwidth digit 4\n\t'\\uFF15': '5', // Fullwidth digit 5\n\t'\\uFF16': '6', // Fullwidth digit 6\n\t'\\uFF17': '7', // Fullwidth digit 7\n\t'\\uFF18': '8', // Fullwidth digit 8\n\t'\\uFF19': '9', // Fullwidth digit 9\n\t'\\u0660': '0', // Arabic-indic digit 0\n\t'\\u0661': '1', // Arabic-indic digit 1\n\t'\\u0662': '2', // Arabic-indic digit 2\n\t'\\u0663': '3', // Arabic-indic digit 3\n\t'\\u0664': '4', // Arabic-indic digit 4\n\t'\\u0665': '5', // Arabic-indic digit 5\n\t'\\u0666': '6', // Arabic-indic digit 6\n\t'\\u0667': '7', // Arabic-indic digit 7\n\t'\\u0668': '8', // Arabic-indic digit 8\n\t'\\u0669': '9', // Arabic-indic digit 9\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\n\t'\\u06F9': '9' // Eastern-Arabic digit 9\n\n\n\t// The maximum length of the country calling code.\n};var MAX_LENGTH_COUNTRY_CODE = 3;\n\n// The minimum length of the national significant number.\nvar MIN_LENGTH_FOR_NSN = 2;\n\n// The ITU says the maximum length should be 15,\n// but one can find longer numbers in Germany.\nvar MAX_LENGTH_FOR_NSN = 17;\n\n// We don't allow input strings for parsing to be longer than 250 chars.\n// This prevents malicious input from consuming CPU.\nvar MAX_INPUT_STRING_LENGTH = 250;\n\nvar default_options = {\n\tcountry: {}\n\n\t// `options`:\n\t//  {\n\t//    country:\n\t//    {\n\t//      restrict - (a two-letter country code)\n\t//                 the phone number must be in this country\n\t//\n\t//      default - (a two-letter country code)\n\t//                default country to use for phone number parsing and validation\n\t//                (if no country code could be derived from the phone number)\n\t//    }\n\t//  }\n\t//\n\t// Returns `{ country, number }`\n\t//\n\t// Example use cases:\n\t//\n\t// ```js\n\t// parse('8 (800) 555-35-35', 'RU')\n\t// parse('8 (800) 555-35-35', 'RU', metadata)\n\t// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\n\t// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\n\t// parse('+7 800 555 35 35')\n\t// parse('+7 800 555 35 35', metadata)\n\t// ```\n\t//\n};export default function parse(first_argument, second_argument, third_argument) {\n\tvar _sort_out_arguments = sort_out_arguments(first_argument, second_argument, third_argument),\n\t    text = _sort_out_arguments.text,\n\t    options = _sort_out_arguments.options,\n\t    metadata = _sort_out_arguments.metadata;\n\n\tif (!options) {\n\t\toptions = _extends({}, default_options);\n\t}\n\n\t// Validate country codes\n\n\t// Validate `default` country\n\tif (options.country.default && !metadata.countries[options.country.default]) {\n\t\tthrow new Error('Unknown country code: ' + options.country.default);\n\t}\n\n\t// Validate `restrict` country\n\tif (options.country.restrict && !metadata.countries[options.country.restrict]) {\n\t\tthrow new Error('Unknown country code: ' + options.country.restrict);\n\t}\n\n\t// Parse the phone number\n\n\tvar formatted_phone_number = extract_formatted_phone_number(text);\n\n\t// If the phone number is not viable, then abort.\n\tif (!is_viable_phone_number(formatted_phone_number)) {\n\t\treturn {};\n\t}\n\n\tvar _parse_phone_number_a = parse_phone_number_and_country_phone_code(formatted_phone_number, metadata),\n\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t    number = _parse_phone_number_a.number;\n\n\t// Maybe invalid country phone code encountered\n\n\n\tif (!number) {\n\t\treturn {};\n\t}\n\n\tvar country = void 0;\n\tvar country_metadata = void 0;\n\n\t// Whether the phone number is formatted as an international phone number\n\tvar is_international = false;\n\n\tif (country_phone_code) {\n\t\tis_international = true;\n\n\t\t// Check country restriction\n\t\tif (options.country.restrict && country_phone_code !== get_phone_code(metadata.countries[options.country.restrict])) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Formatting information for regions which share\n\t\t// a country calling code is contained by only one region\n\t\t// for performance reasons. For example, for NANPA region\n\t\t// (\"North American Numbering Plan Administration\",\n\t\t//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n\t\t// it will be contained in the metadata for `US`.\n\t\tcountry_metadata = get_metadata_by_country_phone_code(country_phone_code, metadata);\n\n\t\t// `country` will be set later,\n\t\t// because, for example, for NANPA countries\n\t\t// there are several countries corresponding\n\t\t// to the same `1` country phone code.\n\t\t// Therefore, to reliably determine the exact country,\n\t\t// national (significant) number should be parsed first.\n\t} else if (options.country.restrict || options.country.default) {\n\t\tcountry = options.country.restrict || options.country.default;\n\t\tcountry_metadata = metadata.countries[country];\n\n\t\tnumber = normalize(text);\n\t}\n\n\tif (!country_metadata) {\n\t\treturn {};\n\t}\n\n\tvar national_number = number;\n\n\t// Only strip national prefixes for non-international phone numbers\n\t// because national prefixes can't be present in international phone numbers.\n\t// Otherwise, while forgiving, it would parse a NANPA number `+1 1877 215 5230`\n\t// first to `1877 215 5230` and then, stripping the leading `1`, to `877 215 5230`,\n\t// and then it would assume that's a valid number which it isn't.\n\t// So no forgiveness for grandmas here.\n\t// The issue asking for this fix:\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/159\n\tif (!is_international) {\n\t\tnational_number = strip_national_prefix(number, country_metadata);\n\t}\n\n\tvar did_have_national_prefix = national_number !== number;\n\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/67\n\t// if (!is_international && !did_have_national_prefix &&\n\t// \t\tis_national_prefix_required(national_number, country_metadata))\n\t// {\n\t// \treturn {}\n\t// }\n\n\t// Sometimes there are several countries\n\t// corresponding to the same country phone code\n\t// (e.g. NANPA countries all having `1` country phone code).\n\t// Therefore, to reliably determine the exact country,\n\t// national (significant) number should have been parsed first.\n\t//\n\tif (!country) {\n\t\t// When `metadata.json` is generated, all \"ambiguous\" country phone codes\n\t\t// get their countries populated with the full set of\n\t\t// \"phone number type\" regular expressions.\n\t\tcountry = find_country_code(country_phone_code, national_number, metadata);\n\n\t\t// Just in case there appears to be a bug in Google's metadata\n\t\t// and the exact country could not be extracted from the phone number.\n\t\t/* istanbul ignore if */\n\t\tif (!country) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Update metadata to be for this specific country\n\t\tcountry_metadata = metadata.countries[country];\n\t}\n\n\t// Validate national (significant) number length.\n\t//\n\t// A sidenote:\n\t//\n\t// They say that sometimes national (significant) numbers\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\n\t// Such numbers will just be discarded.\n\t//\n\tif (national_number.length > MAX_LENGTH_FOR_NSN) {\n\t\treturn {};\n\t}\n\n\t// National number pattern is different for each country,\n\t// even for those ones which are part of the \"NANPA\" group.\n\tvar national_number_rule = new RegExp(get_national_number_pattern(country_metadata));\n\n\t// Check if national phone number pattern matches the number\n\tif (!matches_entirely(national_number, national_number_rule)) {\n\t\treturn {};\n\t}\n\n\treturn { country: country, phone: national_number };\n}\n\n// Normalizes a string of characters representing a phone number.\n// This converts wide-ascii and arabic-indic numerals to European numerals,\n// and strips punctuation and alpha characters.\n//\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\n//\nexport function normalize(number) {\n\treturn replace_characters(number, DIGIT_MAPPINGS);\n}\n\n// For any character not being part of `replacements`\n// it is removed from the phone number.\nexport function replace_characters(text, replacements) {\n\tvar replaced = '';\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = _getIterator(text), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar character = _step.value;\n\n\t\t\tvar replacement = replacements[character.toUpperCase()];\n\n\t\t\tif (replacement !== undefined) {\n\t\t\t\treplaced += replacement;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn replaced;\n}\n\n// Checks to see if the string of characters could possibly be a phone number at\n// all. At the moment, checks to see that the string begins with at least 2\n// digits, ignoring any punctuation commonly found in phone numbers. This method\n// does not require the number to be normalized in advance - but does assume\n// that leading non-number symbols have been removed, such as by the method\n// `extract_possible_number`.\n//\nexport function is_viable_phone_number(number) {\n\treturn number.length >= MIN_LENGTH_FOR_NSN && matches_entirely(number, VALID_PHONE_NUMBER_PATTERN);\n}\n\nexport function extract_formatted_phone_number(text) {\n\tif (!text || text.length > MAX_INPUT_STRING_LENGTH) {\n\t\treturn '';\n\t}\n\n\t// Attempt to extract a possible number from the string passed in\n\n\tvar starts_at = text.search(PHONE_NUMBER_START_PATTERN);\n\n\tif (starts_at < 0) {\n\t\treturn '';\n\t}\n\n\treturn text\n\t// Trim everything to the left of the phone number\n\t.slice(starts_at)\n\t// Remove trailing non-numerical characters\n\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '');\n}\n\n// Parses a formatted phone number.\nexport function parse_phone_number(number) {\n\tif (!number) {\n\t\treturn '';\n\t}\n\n\tvar is_international = LEADING_PLUS_CHARS_PATTERN.test(number);\n\n\t// Remove non-digits\n\t// (and strip the possible leading '+')\n\tnumber = normalize(number);\n\n\tif (is_international) {\n\t\treturn '+' + number;\n\t}\n\n\treturn number;\n}\n\n// Parses a formatted phone number\n// and returns `{ country_phone_code, number }`\n// where `number` is the national (significant) phone number.\n//\n// (aka `maybeExtractCountryPhoneCode`)\n//\nexport function parse_phone_number_and_country_phone_code(number, metadata) {\n\tnumber = parse_phone_number(number);\n\n\tif (!number) {\n\t\treturn {};\n\t}\n\n\t// If this is not an international phone number,\n\t// then don't extract country phone code.\n\tif (number[0] !== '+') {\n\t\treturn { number: number };\n\t}\n\n\t// Strip the leading '+' sign\n\tnumber = number.slice(1);\n\n\t// Fast abortion: country codes do not begin with a '0'\n\tif (number[0] === '0') {\n\t\treturn {};\n\t}\n\n\t// The thing with country phone codes\n\t// is that they are orthogonal to each other\n\t// i.e. there's no such country phone code A\n\t// for which country phone code B exists\n\t// where B starts with A.\n\t// Therefore, while scanning digits,\n\t// if a valid country code is found,\n\t// that means that it is the country code.\n\t//\n\tvar i = 1;\n\twhile (i <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\n\t\tvar country_phone_code = number.slice(0, i);\n\n\t\tif (metadata.country_phone_code_to_countries[country_phone_code]) {\n\t\t\treturn { country_phone_code: country_phone_code, number: number.slice(i) };\n\t\t}\n\n\t\ti++;\n\t}\n\n\treturn {};\n}\n\n// Strips any national prefix (such as 0, 1) present in the number provided\nexport function strip_national_prefix(number, country_metadata) {\n\tvar national_prefix_for_parsing = get_national_prefix_for_parsing(country_metadata);\n\n\tif (!number || !national_prefix_for_parsing) {\n\t\treturn number;\n\t}\n\n\t// Attempt to parse the first digits as a national prefix\n\tvar national_prefix_pattern = new RegExp('^(?:' + national_prefix_for_parsing + ')');\n\tvar national_prefix_matcher = national_prefix_pattern.exec(number);\n\n\t// If no national prefix is present in the phone number,\n\t// but if the national prefix is optional for this country,\n\t// then consider this phone number valid.\n\t//\n\t// Google's reference `libphonenumber` implementation\n\t// wouldn't recognize such phone numbers as valid,\n\t// but I think it would perfectly make sense\n\t// to consider such phone numbers as valid\n\t// because if a national phone number was originally\n\t// formatted without the national prefix\n\t// then it must be parseable back into the original national number.\n\t// In other words, `parse(format(number))`\n\t// must always be equal to `number`.\n\t//\n\tif (!national_prefix_matcher) {\n\t\treturn number;\n\t}\n\n\tvar national_significant_number = void 0;\n\n\t// `national_prefix_for_parsing` capturing groups\n\t// (used only for really messy cases: Argentina, Brazil, Mexico, Somalia)\n\tvar any_groups_were_captured = national_prefix_matcher[national_prefix_matcher.length - 1];\n\tvar national_prefix_transform_rule = get_national_prefix_transform_rule(country_metadata);\n\n\t// If the national number tranformation is needed then do it\n\tif (national_prefix_transform_rule && any_groups_were_captured) {\n\t\tnational_significant_number = number.replace(national_prefix_pattern, national_prefix_transform_rule);\n\t}\n\t// Else, no transformation is necessary,\n\t// and just strip the national prefix.\n\telse {\n\t\t\tnational_significant_number = number.slice(national_prefix_matcher[0].length);\n\t\t}\n\n\t// Verify the parsed national (significant) number for this country\n\tvar national_number_rule = new RegExp(get_national_number_pattern(country_metadata));\n\n\t// If the original number (before stripping national prefix) was viable,\n\t// and the resultant number is not, then prefer the original phone number.\n\t// This is because for some countries (e.g. Russia) the same digit could be both\n\t// a national prefix and a leading digit of a valid national phone number,\n\t// like `8` is the national prefix for Russia and both\n\t// `8 800 555 35 35` and `800 555 35 35` are valid numbers.\n\tif (matches_entirely(number, national_number_rule) && !matches_entirely(national_significant_number, national_number_rule)) {\n\t\treturn number;\n\t}\n\n\t// Return the parsed national (significant) number\n\treturn national_significant_number;\n}\n\nexport function find_country_code(country_phone_code, national_phone_number, metadata) {\n\t// Is always non-empty, because `country_phone_code` is always valid\n\tvar possible_countries = metadata.country_phone_code_to_countries[country_phone_code];\n\n\t// If there's just one country corresponding to the country code,\n\t// then just return it, without further phone number digits validation.\n\tif (possible_countries.length === 1) {\n\t\treturn possible_countries[0];\n\t}\n\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = _getIterator(possible_countries), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar country_code = _step2.value;\n\n\t\t\tvar country = metadata.countries[country_code];\n\n\t\t\t// Leading digits check would be the simplest one\n\t\t\tif (get_leading_digits(country)) {\n\t\t\t\tif (national_phone_number && national_phone_number.search(get_leading_digits(country)) === 0) {\n\t\t\t\t\treturn country_code;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Else perform full validation with all of those bulky\n\t\t\t// fixed-line/mobile/etc regular expressions.\n\t\t\telse if (get_number_type({ phone: national_phone_number, country: country_code }, metadata)) {\n\t\t\t\t\treturn country_code;\n\t\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// export function is_national_prefix_required(national_number, country_metadata)\n// {\n// \tconst format = choose_format_for_number(get_formats(country_metadata), national_number)\n//\n// \tif (format)\n// \t{\n// \t\treturn get_format_national_prefix_is_mandatory_when_formatting(format, country_metadata)\n// \t}\n// }\n\n// Sort out arguments\nfunction sort_out_arguments(first_argument, second_argument, third_argument) {\n\tvar text = void 0;\n\tvar options = void 0;\n\tvar metadata = void 0;\n\n\t// Normalize numerical `value`.\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/142\n\tif (typeof first_argument === 'number') {\n\t\tfirst_argument = String(first_argument);\n\t}\n\n\tif (typeof first_argument === 'string') {\n\t\ttext = first_argument;\n\t}\n\n\t// Covert `resrict` country to an `options` object\n\tif (typeof second_argument === 'string') {\n\t\tvar restrict_to_country = second_argument;\n\n\t\toptions = _extends({}, default_options, {\n\n\t\t\tcountry: {\n\t\t\t\trestrict: restrict_to_country\n\t\t\t}\n\t\t});\n\n\t\tmetadata = third_argument;\n\t} else {\n\t\t// Differentiate `metadata` from `options`\n\t\tif (second_argument && second_argument.countries) {\n\t\t\tmetadata = second_argument;\n\t\t} else {\n\t\t\toptions = second_argument;\n\t\t\tmetadata = third_argument;\n\t\t}\n\t}\n\n\t// Sanity check\n\tif (!metadata) {\n\t\tthrow new Error('Metadata not passed');\n\t}\n\n\treturn { text: text, options: options, metadata: metadata };\n}\n//# sourceMappingURL=parse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/libphonenumber-js/es6/parse.js\n// module id = null\n// module chunks = ","import _getIterator from 'babel-runtime/core-js/get-iterator';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n// This is an enhanced port of Google Android `libphonenumber`'s\n// `asyoutypeformatter.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/blob/8d21a365061de2ba0675c878a710a7b24f74d2ae/javascript/i18n/phonenumbers/asyoutypeformatter.js\n\nimport { get_phone_code, get_national_prefix, get_national_prefix_for_parsing, get_formats, get_format_pattern, get_format_format as _get_format_format, get_format_international_format, get_format_national_prefix_formatting_rule, get_format_national_prefix_is_mandatory_when_formatting, get_format_leading_digits_patterns, get_format_uses_national_prefix, get_metadata_by_country_phone_code } from './metadata';\n\nimport { VALID_PUNCTUATION, PLUS_CHARS, VALID_DIGITS, extract_formatted_phone_number, parse_phone_number, parse_phone_number_and_country_phone_code, find_country_code, strip_national_prefix } from './parse';\n\nimport { FIRST_GROUP_PATTERN, format_national_number_using_format, local_to_international_style } from './format';\n\nimport { matches_entirely } from './common';\n\n// Used in phone number format template creation.\n// Could be any digit, I guess.\nvar DUMMY_DIGIT = '9';\nvar DUMMY_DIGIT_MATCHER = new RegExp(DUMMY_DIGIT, 'g');\n// I don't know why is it exactly `15`\nvar LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15;\n// Create a phone number consisting only of the digit 9 that matches the\n// `number_pattern` by applying the pattern to the \"longest phone number\" string.\nvar LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH);\n\n// The digits that have not been entered yet will be represented by a \\u2008,\n// the punctuation space.\nexport var DIGIT_PLACEHOLDER = 'x'; // '\\u2008' (punctuation space)\nvar DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER);\nvar DIGIT_PLACEHOLDER_MATCHER_GLOBAL = new RegExp(DIGIT_PLACEHOLDER, 'g');\n\n// A pattern that is used to match character classes in regular expressions.\n// An example of a character class is \"[1-4]\".\nvar CHARACTER_CLASS_PATTERN = /\\[([^\\[\\]])*\\]/g;\n\n// Any digit in a regular expression that actually denotes a digit. For\n// example, in the regular expression \"80[0-2]\\d{6,10}\", the first 2 digits\n// (8 and 0) are standalone digits, but the rest are not.\n// Two look-aheads are needed because the number following \\\\d could be a\n// two-digit number, since the phone number can be as long as 15 digits.\nvar STANDALONE_DIGIT_PATTERN = /\\d(?=[^,}][^,}])/g;\n\n// A pattern that is used to determine if a `format` is eligible\n// to be used by the \"as you type formatter\".\n// It is eligible when the `format` contains groups of the dollar sign\n// followed by a single digit, separated by valid phone number punctuation.\n// This prevents invalid punctuation (such as the star sign in Israeli star numbers)\n// getting into the output of the \"as you type formatter\".\nvar ELIGIBLE_FORMAT_PATTERN = new RegExp('^' + '[' + VALID_PUNCTUATION + ']*' + '(\\\\$\\\\d[' + VALID_PUNCTUATION + ']*)+' + '$');\n\n// This is the minimum length of the leading digits of a phone number\n// to guarantee the first \"leading digits pattern\" for a phone number format\n// to be preemptive.\nvar MIN_LEADING_DIGITS_LENGTH = 3;\n\nvar VALID_INCOMPLETE_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*';\n\nvar VALID_INCOMPLETE_PHONE_NUMBER_PATTERN = new RegExp('^' + VALID_INCOMPLETE_PHONE_NUMBER + '$', 'i');\n\nvar as_you_type = function () {\n\tfunction as_you_type(country_code, metadata) {\n\t\t_classCallCheck(this, as_you_type);\n\n\t\t// Sanity check\n\t\tif (!metadata) {\n\t\t\tthrow new Error('Metadata not passed');\n\t\t}\n\n\t\tif (country_code && metadata.countries[country_code]) {\n\t\t\tthis.default_country = country_code;\n\t\t}\n\n\t\tthis.metadata = metadata;\n\n\t\tthis.reset();\n\t}\n\n\t_createClass(as_you_type, [{\n\t\tkey: 'input',\n\t\tvalue: function input(text) {\n\t\t\t// Parse input\n\n\t\t\tvar extracted_number = extract_formatted_phone_number(text);\n\n\t\t\t// Special case for a lone '+' sign\n\t\t\t// since it's not considered a possible phone number.\n\t\t\tif (!extracted_number) {\n\t\t\t\tif (text && text.indexOf('+') >= 0) {\n\t\t\t\t\textracted_number = '+';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Validate possible first part of a phone number\n\t\t\tif (!matches_entirely(extracted_number, VALID_INCOMPLETE_PHONE_NUMBER_PATTERN)) {\n\t\t\t\treturn this.current_output;\n\t\t\t}\n\n\t\t\treturn this.process_input(parse_phone_number(extracted_number));\n\t\t}\n\t}, {\n\t\tkey: 'process_input',\n\t\tvalue: function process_input(input) {\n\t\t\t// If an out of position '+' sign detected\n\t\t\t// (or a second '+' sign),\n\t\t\t// then just drop it from the input.\n\t\t\tif (input[0] === '+') {\n\t\t\t\tif (!this.parsed_input) {\n\t\t\t\t\tthis.parsed_input += '+';\n\n\t\t\t\t\t// If a default country was set\n\t\t\t\t\t// then reset it because an explicitly international\n\t\t\t\t\t// phone number is being entered\n\t\t\t\t\tthis.reset_countriness();\n\t\t\t\t}\n\n\t\t\t\tinput = input.slice(1);\n\t\t\t}\n\n\t\t\t// Raw phone number\n\t\t\tthis.parsed_input += input;\n\n\t\t\t// // Reset phone number validation state\n\t\t\t// this.valid = false\n\n\t\t\t// Add digits to the national number\n\t\t\tthis.national_number += input;\n\n\t\t\t// Try to format the parsed input\n\n\t\t\tif (this.is_international()) {\n\t\t\t\tif (!this.country_phone_code) {\n\t\t\t\t\t// If one looks at country phone codes\n\t\t\t\t\t// then he can notice that no one country phone code\n\t\t\t\t\t// is ever a (leftmost) substring of another country phone code.\n\t\t\t\t\t// So if a valid country code is extracted so far\n\t\t\t\t\t// then it means that this is the country code.\n\n\t\t\t\t\t// If no country phone code could be extracted so far,\n\t\t\t\t\t// then just return the raw phone number,\n\t\t\t\t\t// because it has no way of knowing\n\t\t\t\t\t// how to format the phone number so far.\n\t\t\t\t\tif (!this.extract_country_phone_code()) {\n\t\t\t\t\t\t// Return raw phone number\n\t\t\t\t\t\treturn this.parsed_input;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Initialize country-specific data\n\t\t\t\t\tthis.initialize_phone_number_formats_for_this_country_phone_code();\n\t\t\t\t\tthis.reset_format();\n\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t}\n\t\t\t\t// `this.country` could be `undefined`,\n\t\t\t\t// for instance, when there is ambiguity\n\t\t\t\t// in a form of several different countries\n\t\t\t\t// each corresponding to the same country phone code\n\t\t\t\t// (e.g. NANPA: USA, Canada, etc),\n\t\t\t\t// and there's not enough digits entered\n\t\t\t\t// to reliably determine the country\n\t\t\t\t// the phone number belongs to.\n\t\t\t\t// Therefore, in cases of such ambiguity,\n\t\t\t\t// each time something is input,\n\t\t\t\t// try to determine the country\n\t\t\t\t// (if it's not determined yet).\n\t\t\t\telse if (!this.country) {\n\t\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Some national prefixes are substrings of other national prefixes\n\t\t\t\t// (for the same country), therefore try to extract national prefix each time\n\t\t\t\t// because a longer national prefix might be available at some point in time.\n\n\t\t\t\tvar previous_national_prefix = this.national_prefix;\n\t\t\t\tthis.national_number = this.national_prefix + this.national_number;\n\n\t\t\t\t// Possibly extract a national prefix\n\t\t\t\tthis.extract_national_prefix();\n\n\t\t\t\tif (this.national_prefix !== previous_national_prefix) {\n\t\t\t\t\t// National number has changed\n\t\t\t\t\t// (due to another national prefix been extracted)\n\t\t\t\t\t// therefore national number has changed\n\t\t\t\t\t// therefore reset all previous formatting data.\n\t\t\t\t\t// (and leading digits matching state)\n\t\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t\t\tthis.reset_format();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.should_format()) {\n\t\t\t\treturn this.format_as_non_formatted_number();\n\t\t\t}\n\n\t\t\t// Check the available phone number formats\n\t\t\t// based on the currently available leading digits.\n\t\t\tthis.match_formats_by_leading_digits();\n\n\t\t\t// Format the phone number (given the next digits)\n\t\t\tvar formatted_national_phone_number = this.format_national_phone_number(input);\n\n\t\t\t// If the phone number could be formatted,\n\t\t\t// then return it, possibly prepending with country phone code\n\t\t\t// (for international phone numbers only)\n\t\t\tif (formatted_national_phone_number) {\n\t\t\t\treturn this.full_phone_number(formatted_national_phone_number);\n\t\t\t}\n\n\t\t\t// If the phone number couldn't be formatted,\n\t\t\t// then just fall back to the raw phone number.\n\t\t\treturn this.parsed_input;\n\t\t}\n\t}, {\n\t\tkey: 'format_as_non_formatted_number',\n\t\tvalue: function format_as_non_formatted_number() {\n\t\t\tif (this.is_international() && this.country_phone_code) {\n\t\t\t\tif (this.national_number) {\n\t\t\t\t\t// For convenience, the public `.template` property\n\t\t\t\t\t// contains the whole international number\n\t\t\t\t\t// if the phone number being input is international:\n\t\t\t\t\t// 'x' for the '+' sign, 'x'es for the country phone code,\n\t\t\t\t\t// a spacebar and then the template for the national number digits.\n\t\t\t\t\tthis.template = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.country_phone_code.length) + ' ' + repeat(DIGIT_PLACEHOLDER, this.national_number.length);\n\n\t\t\t\t\treturn '+' + this.country_phone_code + ' ' + this.national_number;\n\t\t\t\t}\n\n\t\t\t\treturn '+' + this.country_phone_code;\n\t\t\t}\n\n\t\t\treturn this.parsed_input;\n\t\t}\n\t}, {\n\t\tkey: 'format_national_phone_number',\n\t\tvalue: function format_national_phone_number(next_digits) {\n\t\t\t// Format the next phone number digits\n\t\t\t// using the previously chosen phone number format.\n\t\t\t//\n\t\t\t// This is done here because if `attempt_to_format_complete_phone_number`\n\t\t\t// was placed before this call then the `template`\n\t\t\t// wouldn't reflect the situation correctly (and would therefore be inconsistent)\n\t\t\t//\n\t\t\tvar national_number_formatted_with_previous_format = void 0;\n\t\t\tif (this.chosen_format) {\n\t\t\t\tnational_number_formatted_with_previous_format = this.format_next_national_number_digits(next_digits);\n\t\t\t}\n\n\t\t\t// See if the input digits can be formatted properly already. If not,\n\t\t\t// use the results from format_next_national_number_digits(), which does formatting\n\t\t\t// based on the formatting pattern chosen.\n\n\t\t\tvar formatted_number = this.attempt_to_format_complete_phone_number();\n\n\t\t\t// Just because a phone number doesn't have a suitable format\n\t\t\t// that doesn't mean that the phone is invalid\n\t\t\t// because phone number formats only format phone numbers,\n\t\t\t// they don't validate them and some (rare) phone numbers\n\t\t\t// are meant to stay non-formatted.\n\t\t\tif (formatted_number) {\n\t\t\t\t// if (this.country)\n\t\t\t\t// {\n\t\t\t\t// \tthis.valid = true\n\t\t\t\t// }\n\n\t\t\t\treturn formatted_number;\n\t\t\t}\n\n\t\t\t// For some phone number formats national prefix\n\n\t\t\t// If the previously chosen phone number format\n\t\t\t// didn't match the next (current) digit being input\n\t\t\t// (leading digits pattern didn't match).\n\t\t\tif (this.choose_another_format()) {\n\t\t\t\t// And a more appropriate phone number format\n\t\t\t\t// has been chosen for these `leading digits`,\n\t\t\t\t// then format the national phone number (so far)\n\t\t\t\t// using the newly selected phone number pattern.\n\n\t\t\t\t// Will return `undefined` if it couldn't format\n\t\t\t\t// the supplied national number\n\t\t\t\t// using the selected phone number pattern.\n\n\t\t\t\treturn this.reformat_national_number();\n\t\t\t}\n\n\t\t\t// If could format the next (current) digit\n\t\t\t// using the previously chosen phone number format\n\t\t\t// then return the formatted number so far.\n\n\t\t\t// If no new phone number format could be chosen,\n\t\t\t// and couldn't format the supplied national number\n\t\t\t// using the selected phone number pattern,\n\t\t\t// then it will return `undefined`.\n\n\t\t\treturn national_number_formatted_with_previous_format;\n\t\t}\n\t}, {\n\t\tkey: 'reset',\n\t\tvalue: function reset() {\n\t\t\t// Input stripped of non-phone-number characters.\n\t\t\t// Can only contain a possible leading '+' sign and digits.\n\t\t\tthis.parsed_input = '';\n\n\t\t\tthis.current_output = '';\n\n\t\t\t// This contains the national prefix that has been extracted. It contains only\n\t\t\t// digits without formatting.\n\t\t\tthis.national_prefix = '';\n\n\t\t\tthis.national_number = '';\n\n\t\t\tthis.reset_countriness();\n\n\t\t\tthis.reset_format();\n\n\t\t\t// this.valid = false\n\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'reset_country',\n\t\tvalue: function reset_country() {\n\t\t\tif (this.default_country && !this.is_international()) {\n\t\t\t\tthis.country = this.default_country;\n\t\t\t} else {\n\t\t\t\tthis.country = undefined;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reset_countriness',\n\t\tvalue: function reset_countriness() {\n\t\t\tthis.reset_country();\n\n\t\t\tif (this.default_country && !this.is_international()) {\n\t\t\t\tthis.country_metadata = this.metadata.countries[this.default_country];\n\t\t\t\tthis.country_phone_code = get_phone_code(this.country_metadata);\n\n\t\t\t\tthis.initialize_phone_number_formats_for_this_country_phone_code();\n\t\t\t} else {\n\t\t\t\tthis.country_metadata = undefined;\n\t\t\t\tthis.country_phone_code = undefined;\n\n\t\t\t\tthis.available_formats = [];\n\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reset_format',\n\t\tvalue: function reset_format() {\n\t\t\tthis.chosen_format = undefined;\n\t\t\tthis.template = undefined;\n\t\t\tthis.partially_populated_template = undefined;\n\t\t\tthis.last_match_position = -1;\n\t\t}\n\n\t\t// Format each digit of national phone number (so far)\n\t\t// using the newly selected phone number pattern.\n\n\t}, {\n\t\tkey: 'reformat_national_number',\n\t\tvalue: function reformat_national_number() {\n\t\t\t// Format each digit of national phone number (so far)\n\t\t\t// using the selected phone number pattern.\n\t\t\treturn this.format_next_national_number_digits(this.national_number);\n\t\t}\n\t}, {\n\t\tkey: 'initialize_phone_number_formats_for_this_country_phone_code',\n\t\tvalue: function initialize_phone_number_formats_for_this_country_phone_code() {\n\t\t\t// Get all \"eligible\" phone number formats for this country\n\t\t\tthis.available_formats = get_formats(this.country_metadata).filter(function (format) {\n\t\t\t\treturn ELIGIBLE_FORMAT_PATTERN.test(get_format_international_format(format));\n\t\t\t});\n\n\t\t\tthis.matching_formats = this.available_formats;\n\t\t}\n\t}, {\n\t\tkey: 'match_formats_by_leading_digits',\n\t\tvalue: function match_formats_by_leading_digits() {\n\t\t\tvar leading_digits = this.national_number;\n\n\t\t\t// \"leading digits\" patterns start with a maximum of 3 digits,\n\t\t\t// and then with each additional digit\n\t\t\t// a more precise \"leading digits\" pattern is specified.\n\n\t\t\tvar index_of_leading_digits_pattern = leading_digits.length - MIN_LEADING_DIGITS_LENGTH;\n\n\t\t\tif (index_of_leading_digits_pattern < 0) {\n\t\t\t\tindex_of_leading_digits_pattern = 0;\n\t\t\t}\n\n\t\t\tthis.matching_formats = this.matching_formats.filter(function (format) {\n\t\t\t\tvar leading_digits_pattern_count = get_format_leading_digits_patterns(format).length;\n\n\t\t\t\t// Keep everything that isn't restricted by leading digits.\n\t\t\t\tif (leading_digits_pattern_count === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar leading_digits_pattern_index = Math.min(index_of_leading_digits_pattern, leading_digits_pattern_count - 1);\n\t\t\t\tvar leading_digits_pattern = get_format_leading_digits_patterns(format)[leading_digits_pattern_index];\n\n\t\t\t\t// Brackets are required for `^` to be applied to\n\t\t\t\t// all or-ed (`|`) parts, not just the first one.\n\t\t\t\treturn new RegExp('^(' + leading_digits_pattern + ')').test(leading_digits);\n\t\t\t});\n\n\t\t\t// If there was a phone number format chosen\n\t\t\t// and it no longer holds given the new leading digits then reset it\n\t\t\tif (this.chosen_format && this.matching_formats.indexOf(this.chosen_format) === -1) {\n\t\t\t\tthis.reset_format();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'should_format',\n\t\tvalue: function should_format() {\n\t\t\t// Start matching any formats at all when the national number\n\t\t\t// entered so far is at least 3 digits long,\n\t\t\t// otherwise format matching would give false negatives\n\t\t\t// like when the digits entered so far are `2`\n\t\t\t// and the leading digits pattern is `21` –\n\t\t\t// it's quite obvious in this case that the format could be the one\n\t\t\t// but due to the absence of further digits it would give false negative.\n\t\t\t//\n\t\t\t// Google could have provided leading digits patterns starting\n\t\t\t// with a single digit but they chose not to (for whatever reasons).\n\t\t\t//\n\t\t\treturn this.national_number >= MIN_LEADING_DIGITS_LENGTH;\n\t\t}\n\n\t\t// Check to see if there is an exact pattern match for these digits. If so, we\n\t\t// should use this instead of any other formatting template whose\n\t\t// leadingDigitsPattern also matches the input.\n\n\t}, {\n\t\tkey: 'attempt_to_format_complete_phone_number',\n\t\tvalue: function attempt_to_format_complete_phone_number() {\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = _getIterator(this.matching_formats), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar format = _step.value;\n\n\t\t\t\t\tvar matcher = new RegExp('^(?:' + get_format_pattern(format) + ')$');\n\n\t\t\t\t\tif (!matcher.test(this.national_number)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.validate_format(format)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// To leave the formatter in a consistent state\n\t\t\t\t\tthis.reset_format();\n\t\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\t\tvar formatted_number = format_national_number_using_format(this.national_number, format, this.is_international(), this.national_prefix.length > 0, this.country_metadata);\n\n\t\t\t\t\t// Set `this.template` and `this.partially_populated_template`.\n\t\t\t\t\t//\n\t\t\t\t\t// `else` case doesn't ever happen\n\t\t\t\t\t// with the current metadata,\n\t\t\t\t\t// but just in case.\n\t\t\t\t\t//\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif (this.create_formatting_template(format)) {\n\t\t\t\t\t\t// Populate `this.partially_populated_template`\n\t\t\t\t\t\tthis.reformat_national_number();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Prepend `+CountryCode` in case of an international phone number\n\t\t\t\t\t\tvar full_number = this.full_phone_number(formatted_number);\n\t\t\t\t\t\tthis.template = full_number.replace(/[\\d\\+]/g, DIGIT_PLACEHOLDER);\n\t\t\t\t\t\tthis.partially_populated_template = full_number;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn formatted_number;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Prepends `+CountryCode` in case of an international phone number\n\n\t}, {\n\t\tkey: 'full_phone_number',\n\t\tvalue: function full_phone_number(formatted_national_number) {\n\t\t\tif (this.is_international()) {\n\t\t\t\treturn '+' + this.country_phone_code + ' ' + formatted_national_number;\n\t\t\t}\n\n\t\t\treturn formatted_national_number;\n\t\t}\n\n\t\t// Extracts the country calling code from the beginning\n\t\t// of the entered `national_number` (so far),\n\t\t// and places the remaining input into the `national_number`.\n\n\t}, {\n\t\tkey: 'extract_country_phone_code',\n\t\tvalue: function extract_country_phone_code() {\n\t\t\tif (!this.national_number) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar _parse_phone_number_a = parse_phone_number_and_country_phone_code(this.parsed_input, this.metadata),\n\t\t\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t\t\t    number = _parse_phone_number_a.number;\n\n\t\t\tif (!country_phone_code) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.country_phone_code = country_phone_code;\n\t\t\tthis.national_number = number;\n\n\t\t\treturn this.country_metadata = get_metadata_by_country_phone_code(country_phone_code, this.metadata);\n\t\t}\n\t}, {\n\t\tkey: 'extract_national_prefix',\n\t\tvalue: function extract_national_prefix() {\n\t\t\tthis.national_prefix = '';\n\n\t\t\tif (!this.country_metadata) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar national_number = strip_national_prefix(this.national_number, this.country_metadata);\n\n\t\t\tif (national_number !== this.national_number) {\n\t\t\t\tthis.national_prefix = this.national_number.slice(0, this.national_number.length - national_number.length);\n\t\t\t\tthis.national_number = national_number;\n\t\t\t}\n\n\t\t\treturn this.national_prefix;\n\t\t}\n\t}, {\n\t\tkey: 'choose_another_format',\n\t\tvalue: function choose_another_format() {\n\t\t\t// When there are multiple available formats, the formatter uses the first\n\t\t\t// format where a formatting template could be created.\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = _getIterator(this.matching_formats), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar format = _step2.value;\n\n\t\t\t\t\t// If this format is currently being used\n\t\t\t\t\t// and is still possible, then stick to it.\n\t\t\t\t\tif (this.chosen_format === format) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If this `format` is suitable for \"as you type\",\n\t\t\t\t\t// then extract the template from this format\n\t\t\t\t\t// and use it to format the phone number being input.\n\n\t\t\t\t\tif (!this.validate_format(format)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.create_formatting_template(format)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\t\t// With a new formatting template, the matched position\n\t\t\t\t\t// using the old template needs to be reset.\n\t\t\t\t\tthis.last_match_position = -1;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// No format matches the phone number,\n\t\t\t\t// therefore set `country` to `undefined`\n\t\t\t\t// (or to the default country).\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.reset_country();\n\n\t\t\t// No format matches the national phone number entered\n\t\t\tthis.reset_format();\n\t\t}\n\t}, {\n\t\tkey: 'validate_format',\n\t\tvalue: function validate_format(format) {\n\t\t\t// If national prefix is mandatory for this phone number format\n\t\t\t// and the user didn't input the national prefix,\n\t\t\t// then this phone number format isn't suitable.\n\t\t\tif (!this.is_international() && !this.national_prefix && get_format_national_prefix_is_mandatory_when_formatting(format, this.country_metadata)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t}, {\n\t\tkey: 'create_formatting_template',\n\t\tvalue: function create_formatting_template(format) {\n\t\t\t// The formatter doesn't format numbers when numberPattern contains '|', e.g.\n\t\t\t// (20|3)\\d{4}. In those cases we quickly return.\n\t\t\t// (Though there's no such format in current metadata)\n\t\t\t/* istanbul ignore if */\n\t\t\tif (get_format_pattern(format).indexOf('|') >= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get formatting template for this phone number format\n\t\t\tvar template = this.get_template_for_phone_number_format_pattern(format);\n\n\t\t\t// If the national number entered is too long\n\t\t\t// for any phone number format, then abort.\n\t\t\tif (!template) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// This one is for national number only\n\t\t\tthis.partially_populated_template = template;\n\n\t\t\t// For convenience, the public `.template` property\n\t\t\t// contains the whole international number\n\t\t\t// if the phone number being input is international:\n\t\t\t// 'x' for the '+' sign, 'x'es for the country phone code,\n\t\t\t// a spacebar and then the template for the formatted national number.\n\t\t\tif (this.is_international()) {\n\t\t\t\tthis.template = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.country_phone_code.length) + ' ' + template;\n\t\t\t}\n\t\t\t// For local numbers, replace national prefix\n\t\t\t// with a digit placeholder.\n\t\t\telse {\n\t\t\t\t\tthis.template = template.replace(/\\d/g, DIGIT_PLACEHOLDER);\n\t\t\t\t}\n\n\t\t\t// This one is for the full phone number\n\t\t\treturn this.template;\n\t\t}\n\n\t\t// Generates formatting template for a phone number format\n\n\t}, {\n\t\tkey: 'get_template_for_phone_number_format_pattern',\n\t\tvalue: function get_template_for_phone_number_format_pattern(format) {\n\t\t\tvar national_prefix_formatting_rule = get_format_national_prefix_formatting_rule(format, this.country_metadata);\n\n\t\t\t// A very smart trick by the guys at Google\n\t\t\tvar number_pattern = get_format_pattern(format)\n\t\t\t// Replace anything in the form of [..] with \\d\n\t\t\t.replace(CHARACTER_CLASS_PATTERN, '\\\\d')\n\t\t\t// Replace any standalone digit (not the one in `{}`) with \\d\n\t\t\t.replace(STANDALONE_DIGIT_PATTERN, '\\\\d');\n\n\t\t\t// This match will always succeed,\n\t\t\t// because the \"longest dummy phone number\"\n\t\t\t// has enough length to accomodate any possible\n\t\t\t// national phone number format pattern.\n\t\t\tvar dummy_phone_number_matching_format_pattern = LONGEST_DUMMY_PHONE_NUMBER.match(number_pattern)[0];\n\n\t\t\t// If the national number entered is too long\n\t\t\t// for any phone number format, then abort.\n\t\t\tif (this.national_number.length > dummy_phone_number_matching_format_pattern.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare the phone number format\n\t\t\tvar number_format = this.get_format_format(format, national_prefix_formatting_rule);\n\n\t\t\t// Get a formatting template which can be used to efficiently format\n\t\t\t// a partial number where digits are added one by one.\n\n\t\t\t// Below `strict_pattern` is used for the\n\t\t\t// regular expression (with `^` and `$`).\n\t\t\t// This wasn't originally in Google's `libphonenumber`\n\t\t\t// and I guess they don't really need it\n\t\t\t// because they're not using \"templates\" to format phone numbers\n\t\t\t// but I added `strict_pattern` after encountering\n\t\t\t// South Korean phone number formatting bug.\n\t\t\t//\n\t\t\t// Non-strict regular expression bug demonstration:\n\t\t\t//\n\t\t\t// this.national_number : `111111111` (9 digits)\n\t\t\t//\n\t\t\t// number_pattern : (\\d{2})(\\d{3,4})(\\d{4})\n\t\t\t// number_format : `$1 $2 $3`\n\t\t\t// dummy_phone_number_matching_format_pattern : `9999999999` (10 digits)\n\t\t\t//\n\t\t\t// '9999999999'.replace(new RegExp(/(\\d{2})(\\d{3,4})(\\d{4})/g), '$1 $2 $3') = \"99 9999 9999\"\n\t\t\t//\n\t\t\t// template : xx xxxx xxxx\n\t\t\t//\n\t\t\t// But the correct template in this case is `xx xxx xxxx`.\n\t\t\t// The template was generated incorrectly because of the\n\t\t\t// `{3,4}` variability in the `number_pattern`.\n\t\t\t//\n\t\t\t// The fix is, if `this.national_number` has already sufficient length\n\t\t\t// to satisfy the `number_pattern` completely then `this.national_number` is used\n\t\t\t// instead of `dummy_phone_number_matching_format_pattern`.\n\n\t\t\tvar strict_pattern = new RegExp('^' + number_pattern + '$');\n\t\t\tvar national_number_dummy_digits = this.national_number.replace(/\\d/g, DUMMY_DIGIT);\n\n\t\t\t// If `this.national_number` has already sufficient length\n\t\t\t// to satisfy the `number_pattern` completely then use it\n\t\t\t// instead of `dummy_phone_number_matching_format_pattern`.\n\t\t\tif (strict_pattern.test(national_number_dummy_digits)) {\n\t\t\t\tdummy_phone_number_matching_format_pattern = national_number_dummy_digits;\n\t\t\t}\n\n\t\t\t// Generate formatting template for this phone number format\n\t\t\treturn dummy_phone_number_matching_format_pattern\n\t\t\t// Format the dummy phone number according to the format\n\t\t\t.replace(new RegExp(number_pattern), number_format)\n\t\t\t// Replace each dummy digit with a DIGIT_PLACEHOLDER\n\t\t\t.replace(DUMMY_DIGIT_MATCHER, DIGIT_PLACEHOLDER);\n\t\t}\n\t}, {\n\t\tkey: 'format_next_national_number_digits',\n\t\tvalue: function format_next_national_number_digits(digits) {\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = _getIterator(digits), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar digit = _step3.value;\n\n\t\t\t\t\t// If there is room for more digits in current `template`,\n\t\t\t\t\t// then set the next digit in the `template`,\n\t\t\t\t\t// and return the formatted digits so far.\n\n\t\t\t\t\t// If more digits are entered than the current format could handle\n\t\t\t\t\tif (this.partially_populated_template.slice(this.last_match_position + 1).search(DIGIT_PLACEHOLDER_MATCHER) === -1) {\n\t\t\t\t\t\t// Reset the current format,\n\t\t\t\t\t\t// so that the new format will be chosen\n\t\t\t\t\t\t// in a subsequent `this.choose_another_format()` call\n\t\t\t\t\t\t// later in code.\n\t\t\t\t\t\tthis.chosen_format = undefined;\n\t\t\t\t\t\tthis.template = undefined;\n\t\t\t\t\t\tthis.partially_populated_template = undefined;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.last_match_position = this.partially_populated_template.search(DIGIT_PLACEHOLDER_MATCHER);\n\t\t\t\t\tthis.partially_populated_template = this.partially_populated_template.replace(DIGIT_PLACEHOLDER_MATCHER, digit);\n\t\t\t\t}\n\n\t\t\t\t// Return the formatted phone number so far\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn close_dangling_braces(this.partially_populated_template, this.last_match_position + 1).replace(DIGIT_PLACEHOLDER_MATCHER_GLOBAL, ' ');\n\t\t}\n\t}, {\n\t\tkey: 'is_international',\n\t\tvalue: function is_international() {\n\t\t\treturn this.parsed_input && this.parsed_input[0] === '+';\n\t\t}\n\t}, {\n\t\tkey: 'get_format_format',\n\t\tvalue: function get_format_format(format, national_prefix_formatting_rule) {\n\t\t\tvar number_format = this.is_international() ? get_format_international_format(format) : _get_format_format(format);\n\n\t\t\t// If national prefix formatting rule is set\n\t\t\t// for this phone number format\n\t\t\tif (national_prefix_formatting_rule) {\n\t\t\t\t// If the user did input the national prefix\n\t\t\t\t// (or if the national prefix formatting rule does not require national prefix)\n\t\t\t\t// then maybe make it part of the phone number template\n\t\t\t\tif (this.national_prefix || !get_format_uses_national_prefix(national_prefix_formatting_rule)) {\n\t\t\t\t\t// Make the national prefix part of the phone number template\n\t\t\t\t\tnumber_format = number_format.replace(FIRST_GROUP_PATTERN, national_prefix_formatting_rule);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.is_international()) {\n\t\t\t\treturn local_to_international_style(number_format);\n\t\t\t}\n\n\t\t\treturn number_format;\n\t\t}\n\n\t\t// Determines the country of the phone number\n\t\t// entered so far based on the country phone code\n\t\t// and the national phone number.\n\n\t}, {\n\t\tkey: 'determine_the_country',\n\t\tvalue: function determine_the_country() {\n\t\t\tthis.country = find_country_code(this.country_phone_code, this.national_number, this.metadata);\n\t\t}\n\t}]);\n\n\treturn as_you_type;\n}();\n\nexport default as_you_type;\n\n\nexport function close_dangling_braces(template, cut_before) {\n\tvar retained_template = template.slice(0, cut_before);\n\n\tvar opening_braces = count_occurences('(', retained_template);\n\tvar closing_braces = count_occurences(')', retained_template);\n\n\tvar dangling_braces = opening_braces - closing_braces;\n\n\twhile (dangling_braces > 0 && cut_before < template.length) {\n\t\tif (template[cut_before] === ')') {\n\t\t\tdangling_braces--;\n\t\t}\n\t\tcut_before++;\n\t}\n\n\treturn template.slice(0, cut_before);\n}\n\n// Counts all occurences of a symbol in a string\nexport function count_occurences(symbol, string) {\n\tvar count = 0;\n\n\tvar _iteratorNormalCompletion4 = true;\n\tvar _didIteratorError4 = false;\n\tvar _iteratorError4 = undefined;\n\n\ttry {\n\t\tfor (var _iterator4 = _getIterator(string), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\tvar character = _step4.value;\n\n\t\t\tif (character === symbol) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError4 = true;\n\t\t_iteratorError4 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t_iterator4.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError4) {\n\t\t\t\tthrow _iteratorError4;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn count;\n}\n\n// Repeats a string (or a symbol) N times.\n// http://stackoverflow.com/questions/202605/repeat-string-javascript\nexport function repeat(string, times) {\n\tif (times < 1) {\n\t\treturn '';\n\t}\n\n\tvar result = '';\n\n\twhile (times > 1) {\n\t\tif (times & 1) {\n\t\t\tresult += string;\n\t\t}\n\n\t\ttimes >>= 1;\n\t\tstring += string;\n\t}\n\n\treturn result + string;\n}\n//# sourceMappingURL=as you type.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/libphonenumber-js/es6/as you type.js\n// module id = null\n// module chunks = ","import metadata from './metadata.min.json'\r\n\r\nimport parseCustom from './es6/parse'\r\nimport getNumberTypeCustom from './es6/get number type'\r\nimport formatCustom from './es6/format'\r\nimport isValidNumberCustom from './es6/validate'\r\nimport asYouTypeCustom from './es6/as you type'\r\n\r\nimport { get_phone_code } from './es6/metadata'\r\n\r\nexport function parse()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn parseCustom.apply(this, parameters)\r\n}\r\n\r\nexport function format()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn formatCustom.apply(this, parameters)\r\n}\r\n\r\nexport function get_number_type()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn getNumberTypeCustom.apply(this, parameters)\r\n}\r\n\r\n// camelCase alias\r\nexport function getNumberType()\r\n{\r\n\treturn get_number_type.apply(this, arguments)\r\n}\r\n\r\nexport function is_valid_number()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn isValidNumberCustom.apply(this, parameters)\r\n}\r\n\r\n// camelCase alias\r\nexport function isValidNumber()\r\n{\r\n\treturn is_valid_number.apply(this, arguments)\r\n}\r\n\r\nexport function as_you_type(country)\r\n{\r\n\tasYouTypeCustom.call(this, country, metadata)\r\n}\r\n\r\nas_you_type.prototype = Object.create(asYouTypeCustom.prototype, {})\r\nas_you_type.prototype.constructor = as_you_type\r\n\r\n// camelCase alias\r\n\r\nexport function asYouType(country)\r\n{\r\n\tasYouTypeCustom.call(this, country, metadata)\r\n}\r\n\r\nasYouType.prototype = Object.create(asYouTypeCustom.prototype, {})\r\nasYouType.prototype.constructor = asYouType\r\n\r\nexport\r\n{\r\n\tdefault as parseCustom,\r\n\tDIGIT_MAPPINGS as DIGITS\r\n}\r\nfrom './es6/parse'\r\n\r\nexport { default as formatCustom }        from './es6/format'\r\nexport { default as isValidNumberCustom } from './es6/validate'\r\nexport { default as getNumberTypeCustom } from './es6/get number type'\r\n\r\nexport\r\n{\r\n\tdefault as asYouTypeCustom,\r\n\tDIGIT_PLACEHOLDER\r\n}\r\nfrom './es6/as you type'\r\n\r\nexport function getPhoneCode(country)\r\n{\r\n\treturn getPhoneCodeCustom(country, metadata)\r\n}\r\n\r\nexport function getPhoneCodeCustom(country, metadata)\r\n{\r\n\tif (!metadata.countries[country])\r\n\t{\r\n\t\tthrow new Error('Unknown country: \"' + country + '\"')\r\n\t}\r\n\r\n\treturn get_phone_code(metadata.countries[country])\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/libphonenumber-js/index.es6.js\n// module id = null\n// module chunks = ","import {AbstractControl, Validators, ValidatorFn} from '@angular/forms';\nimport {isValidNumber} from 'libphonenumber-js';\nimport {isValueExited} from '../util/api';\n\nexport const phone = (country: any): ValidatorFn => {\n  return (control: AbstractControl): { [key: string]: boolean } => {\n    if (isValueExited(Validators.required(control))) {\n      return null;\n    }\n    return isValidNumber(control.value, country) ? null : {phone: true};\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/phone/validator.ts","import parse, { is_viable_phone_number } from './parse';\nimport get_number_type, { sort_out_arguments } from './get number type';\n\nimport { get_types } from './metadata';\n\n// Checks if a given phone number is valid\n//\n// Example use cases:\n//\n// ```js\n// is_valid('8005553535', 'RU')\n// is_valid('8005553535', 'RU', metadata)\n// is_valid({ phone: '8005553535', country: 'RU' })\n// is_valid({ phone: '8005553535', country: 'RU' }, metadata)\n// is_valid('+78005553535')\n// is_valid('+78005553535', metadata)\n// ```\n//\nexport default function is_valid(first_argument, second_argument, third_argument) {\n\tvar _sort_out_arguments = sort_out_arguments(first_argument, second_argument, third_argument),\n\t    input = _sort_out_arguments.input,\n\t    metadata = _sort_out_arguments.metadata;\n\n\t// Sanity check\n\n\n\tif (!metadata) {\n\t\tthrow new Error('Metadata not passed');\n\t}\n\n\tif (!input) {\n\t\treturn false;\n\t}\n\n\tif (!input.country) {\n\t\treturn false;\n\t}\n\n\tvar country_metadata = metadata.countries[input.country];\n\n\tif (get_types(country_metadata)) {\n\t\tif (!get_number_type(input, metadata)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n//# sourceMappingURL=validate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/libphonenumber-js/es6/validate.js\n// module id = null\n// module chunks = ","import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { phone } from './validator';\n\nconst PHONE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => PhoneValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[phone][formControlName],[phone][formControl],[phone][ngModel]',\n  providers: [PHONE_VALIDATOR]\n})\nexport class PhoneValidator implements Validator, OnInit, OnChanges {\n  @Input() phone: string;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = phone(this.phone);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        if (key === 'phone') {\n          this.validator = phone(changes[key].currentValue);\n          if (this.onChange) {\n            this.onChange();\n          }\n        }\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/phone/directive.ts","import {NgModule} from '@angular/core';\nimport {email, EmailValidator} from './email';\nimport {date, DateValidator} from './date';\nimport {url, UrlValidator} from './url';\nimport {cn, CnValidator} from './cn';\nimport {range, RangeValidator} from './range';\nimport {number, NumberValidator} from './number';\nimport {phone, PhoneValidator} from './phone';\n\nexport const CustomFormValidator: any = {\n  date,\n  email,\n  url,\n  cn,\n  range,\n  number,\n  phone\n};\n\nconst CUSTOM_FORM_DIRECTIVES = [\n  EmailValidator,\n  DateValidator,\n  UrlValidator,\n  CnValidator,\n  RangeValidator,\n  NumberValidator,\n  PhoneValidator\n];\n\n@NgModule({\n  exports: [CUSTOM_FORM_DIRECTIVES],\n  declarations: [CUSTOM_FORM_DIRECTIVES]\n})\nexport class CustomFormModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/component/validation/custom-form-validator.module.ts","import {Component, HostBinding} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CustomFormValidator} from '../../component/validation/custom-form-validator.module';\nimport {fadeInUp} from '../common/animations';\n\n@Component({\n  selector: 'free-main-validation',\n  templateUrl: './main-validation.component.html',\n  styleUrls: ['./main-validation.component.scss'],\n  animations: [fadeInUp]\n})\nexport class MainValidationComponent {\n\n  @HostBinding('@fadeInUpState') fadeInUpState;\n  @HostBinding('style.display') display = 'block';\n  testForm: FormGroup;\n  constructor(public fb: FormBuilder) {\n    this.testForm = this.fb.group({\n      name: ['', Validators.required],\n      phone: ['', [Validators.required, CustomFormValidator.phone('CN')]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(10)]],\n      age: ['', [Validators.required, Validators.min(18), Validators.max(25)]],\n      email: ['', [Validators.required, Validators.email]],\n      url: ['', [Validators.required, CustomFormValidator.url]]\n    })\n  }\n\n  onSubmit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/democase/main-validation/main-validation.component.ts","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./main-validation.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../component/common/dom\";\nimport * as i4 from \"../../component/grid/grid.directive\";\nimport * as i5 from \"../../component/tab/tab.component.ngfactory\";\nimport * as i6 from \"../../component/tab/tab.component\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../../component/inputtext/inputtext.component.ngfactory\";\nimport * as i9 from \"../../component/inputtext/inputtext.component\";\nimport * as i10 from \"../../component/button/button.directive\";\nimport * as i11 from \"../../component/code/code.component.ngfactory\";\nimport * as i12 from \"../../component/code/code.component\";\nimport * as i13 from \"@ngx-translate/core/src/translate.pipe\";\nimport * as i14 from \"@ngx-translate/core/src/translate.service\";\nimport * as i15 from \"./main-validation.component\";\nvar styles_MainValidationComponent = [i0.styles];\nvar RenderType_MainValidationComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_MainValidationComponent, data: { \"animation\": [{ type: 7, name: \"fadeInUpState\", definitions: [{ type: 0, name: \"in\", styles: { type: 6, styles: { opacity: 1, transform: \"translate3d(0, 0, 0)\" }, offset: null }, options: undefined }, { type: 1, expr: \"void => *\", animation: [{ type: 6, styles: { opacity: 0, transform: \"translate3d(0, 100%, 0)\" }, offset: null }, { type: 4, styles: null, timings: \".4s cubic-bezier(.25,.8,.25,1)\" }], options: null }], options: {} }] } });\nexport { RenderType_MainValidationComponent as RenderType_MainValidationComponent };\nfunction View_MainValidationComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u5FC5\\u586B\\u9879\"]))], null, null); }\nfunction View_MainValidationComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_2)), i1.ɵdid(3, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.testForm.get(\"name\").hasError(\"required\"); _ck(_v, 3, 0, currVal_0); }, null); }\nfunction View_MainValidationComponent_4(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u5FC5\\u586B\\u9879\"]))], null, null); }\nfunction View_MainValidationComponent_5(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u5FC5\\u987B\\u4E3A11\\u4F4D\\u624B\\u673A\\u53F7\\u7801\"]))], null, null); }\nfunction View_MainValidationComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 7, \"div\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_4)), i1.ɵdid(3, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_5)), i1.ɵdid(6, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.testForm.get(\"phone\").hasError(\"required\"); _ck(_v, 3, 0, currVal_0); var currVal_1 = _co.testForm.get(\"phone\").hasError(\"phone\"); _ck(_v, 6, 0, currVal_1); }, null); }\nfunction View_MainValidationComponent_7(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u5FC5\\u586B\\u9879\"]))], null, null); }\nfunction View_MainValidationComponent_8(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u81F3\\u5C116\\u4F4D\\uFF0C\\u6700\\u592710\\u4F4D\"]))], null, null); }\nfunction View_MainValidationComponent_6(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 7, \"div\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_7)), i1.ɵdid(3, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_8)), i1.ɵdid(6, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.testForm.get(\"password\").hasError(\"required\"); _ck(_v, 3, 0, currVal_0); var currVal_1 = (_co.testForm.get(\"password\").hasError(\"minlength\") || _co.testForm.get(\"password\").hasError(\"maxlength\")); _ck(_v, 6, 0, currVal_1); }, null); }\nfunction View_MainValidationComponent_10(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u5FC5\\u586B\\u9879\"]))], null, null); }\nfunction View_MainValidationComponent_11(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u5927\\u4E8E6\\u5C0F\\u4E8E10\"]))], null, null); }\nfunction View_MainValidationComponent_9(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 7, \"div\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_10)), i1.ɵdid(3, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_11)), i1.ɵdid(6, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.testForm.get(\"age\").hasError(\"required\"); _ck(_v, 3, 0, currVal_0); var currVal_1 = (_co.testForm.get(\"age\").hasError(\"min\") || _co.testForm.get(\"age\").hasError(\"max\")); _ck(_v, 6, 0, currVal_1); }, null); }\nfunction View_MainValidationComponent_13(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u5FC5\\u586B\\u9879\"]))], null, null); }\nfunction View_MainValidationComponent_14(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u4E14\\u4E3A\\u6709\\u6548\\u7684\\u90AE\\u7BB1\"]))], null, null); }\nfunction View_MainValidationComponent_12(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 7, \"div\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_13)), i1.ɵdid(3, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_14)), i1.ɵdid(6, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.testForm.get(\"email\").hasError(\"required\"); _ck(_v, 3, 0, currVal_0); var currVal_1 = _co.testForm.get(\"email\").hasError(\"email\"); _ck(_v, 6, 0, currVal_1); }, null); }\nfunction View_MainValidationComponent_16(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u5FC5\\u586B\\u9879\"]))], null, null); }\nfunction View_MainValidationComponent_17(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u4E14\\u4E3A\\u6709\\u6548\\u7684\\u5730\\u5740\"]))], null, null); }\nfunction View_MainValidationComponent_15(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 7, \"div\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_16)), i1.ɵdid(3, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_17)), i1.ɵdid(6, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.testForm.get(\"url\").hasError(\"required\"); _ck(_v, 3, 0, currVal_0); var currVal_1 = _co.testForm.get(\"url\").hasError(\"url\"); _ck(_v, 6, 0, currVal_1); }, null); }\nexport function View_MainValidationComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 127, \"div\", [[\"class\", \"main-container\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵeld(2, 0, null, null, 120, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n    \"])), (_l()(), i1.ɵeld(4, 0, null, null, 117, \"div\", [[\"class\", \"free-demo-board\"], [\"fGrid\", \"12\"]], null, null, null, null, null)), i1.ɵprd(512, null, i3.DomRenderer, i3.DomRenderer, [i1.Renderer2]), i1.ɵdid(6, 4210688, null, 0, i4.GridDirective, [i1.ElementRef, i3.DomRenderer], { grid: [0, \"grid\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵeld(8, 0, null, null, 112, \"div\", [[\"class\", \"free-card-board\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n        \"])), (_l()(), i1.ɵeld(10, 0, null, null, 1, \"h3\", [[\"class\", \"free-toolbar\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Validation\"])), (_l()(), i1.ɵted(-1, null, [\"\\n        \"])), (_l()(), i1.ɵeld(13, 0, null, null, 106, \"free-tab-group\", [[\"direction\", \"right\"]], null, null, null, i5.View_TabGroupComponent_0, i5.RenderType_TabGroupComponent)), i1.ɵdid(14, 1097728, null, 0, i6.TabGroupComponent, [i1.Renderer2], { direction: [0, \"direction\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n          \"])), (_l()(), i1.ɵeld(16, 0, null, 0, 84, \"free-tab\", [[\"header\", \"PREVIEW\"]], null, null, null, i5.View_TabComponent_0, i5.RenderType_TabComponent)), i1.ɵdid(17, 4308992, null, 1, i6.TabComponent, [i6.TabGroupComponent], { header: [0, \"header\"] }, null), i1.ɵqud(603979776, 1, { templates: 1 }), (_l()(), i1.ɵted(-1, 0, [\"\\n            \"])), (_l()(), i1.ɵeld(20, 0, null, 0, 79, \"form\", [[\"novalidate\", \"\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngSubmit\"], [null, \"submit\"], [null, \"reset\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"submit\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 22).onSubmit($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"reset\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 22).onReset() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"ngSubmit\" === en)) {\n        var pd_2 = (_co.onSubmit() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(21, 16384, null, 0, i7.ɵbf, [], null, null), i1.ɵdid(22, 540672, null, 0, i7.FormGroupDirective, [[8, null], [8, null]], { form: [0, \"form\"] }, { ngSubmit: \"ngSubmit\" }), i1.ɵprd(2048, null, i7.ControlContainer, null, [i7.FormGroupDirective]), i1.ɵdid(24, 16384, null, 0, i7.NgControlStatusGroup, [i7.ControlContainer], null, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(26, 0, null, null, 6, \"free-inputtext\", [[\"formControlName\", \"name\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i8.View_InputtextComponent_0, i8.RenderType_InputtextComponent)), i1.ɵprd(512, null, i3.DomRenderer, i3.DomRenderer, [i1.Renderer2]), i1.ɵdid(28, 4440064, null, 0, i9.InputtextComponent, [i1.Renderer2, i3.DomRenderer], { placeholder: [0, \"placeholder\"] }, null), i1.ɵprd(1024, null, i7.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i9.InputtextComponent]), i1.ɵdid(30, 671744, null, 0, i7.FormControlName, [[3, i7.ControlContainer], [8, null], [8, null], [2, i7.NG_VALUE_ACCESSOR]], { name: [0, \"name\"] }, null), i1.ɵprd(2048, null, i7.NgControl, null, [i7.FormControlName]), i1.ɵdid(32, 16384, null, 0, i7.NgControlStatus, [i7.NgControl], null, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_1)), i1.ɵdid(35, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(37, 0, null, null, 6, \"free-inputtext\", [[\"formControlName\", \"phone\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i8.View_InputtextComponent_0, i8.RenderType_InputtextComponent)), i1.ɵprd(512, null, i3.DomRenderer, i3.DomRenderer, [i1.Renderer2]), i1.ɵdid(39, 4440064, null, 0, i9.InputtextComponent, [i1.Renderer2, i3.DomRenderer], { placeholder: [0, \"placeholder\"] }, null), i1.ɵprd(1024, null, i7.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i9.InputtextComponent]), i1.ɵdid(41, 671744, null, 0, i7.FormControlName, [[3, i7.ControlContainer], [8, null], [8, null], [2, i7.NG_VALUE_ACCESSOR]], { name: [0, \"name\"] }, null), i1.ɵprd(2048, null, i7.NgControl, null, [i7.FormControlName]), i1.ɵdid(43, 16384, null, 0, i7.NgControlStatus, [i7.NgControl], null, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_3)), i1.ɵdid(46, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(48, 0, null, null, 6, \"free-inputtext\", [[\"formControlName\", \"password\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i8.View_InputtextComponent_0, i8.RenderType_InputtextComponent)), i1.ɵprd(512, null, i3.DomRenderer, i3.DomRenderer, [i1.Renderer2]), i1.ɵdid(50, 4440064, null, 0, i9.InputtextComponent, [i1.Renderer2, i3.DomRenderer], { placeholder: [0, \"placeholder\"] }, null), i1.ɵprd(1024, null, i7.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i9.InputtextComponent]), i1.ɵdid(52, 671744, null, 0, i7.FormControlName, [[3, i7.ControlContainer], [8, null], [8, null], [2, i7.NG_VALUE_ACCESSOR]], { name: [0, \"name\"] }, null), i1.ɵprd(2048, null, i7.NgControl, null, [i7.FormControlName]), i1.ɵdid(54, 16384, null, 0, i7.NgControlStatus, [i7.NgControl], null, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_6)), i1.ɵdid(57, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(59, 0, null, null, 6, \"free-inputtext\", [[\"formControlName\", \"age\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i8.View_InputtextComponent_0, i8.RenderType_InputtextComponent)), i1.ɵprd(512, null, i3.DomRenderer, i3.DomRenderer, [i1.Renderer2]), i1.ɵdid(61, 4440064, null, 0, i9.InputtextComponent, [i1.Renderer2, i3.DomRenderer], { placeholder: [0, \"placeholder\"] }, null), i1.ɵprd(1024, null, i7.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i9.InputtextComponent]), i1.ɵdid(63, 671744, null, 0, i7.FormControlName, [[3, i7.ControlContainer], [8, null], [8, null], [2, i7.NG_VALUE_ACCESSOR]], { name: [0, \"name\"] }, null), i1.ɵprd(2048, null, i7.NgControl, null, [i7.FormControlName]), i1.ɵdid(65, 16384, null, 0, i7.NgControlStatus, [i7.NgControl], null, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_9)), i1.ɵdid(68, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(70, 0, null, null, 6, \"free-inputtext\", [[\"formControlName\", \"email\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i8.View_InputtextComponent_0, i8.RenderType_InputtextComponent)), i1.ɵprd(512, null, i3.DomRenderer, i3.DomRenderer, [i1.Renderer2]), i1.ɵdid(72, 4440064, null, 0, i9.InputtextComponent, [i1.Renderer2, i3.DomRenderer], { placeholder: [0, \"placeholder\"] }, null), i1.ɵprd(1024, null, i7.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i9.InputtextComponent]), i1.ɵdid(74, 671744, null, 0, i7.FormControlName, [[3, i7.ControlContainer], [8, null], [8, null], [2, i7.NG_VALUE_ACCESSOR]], { name: [0, \"name\"] }, null), i1.ɵprd(2048, null, i7.NgControl, null, [i7.FormControlName]), i1.ɵdid(76, 16384, null, 0, i7.NgControlStatus, [i7.NgControl], null, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_12)), i1.ɵdid(79, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(81, 0, null, null, 6, \"free-inputtext\", [[\"formControlName\", \"url\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], null, null, i8.View_InputtextComponent_0, i8.RenderType_InputtextComponent)), i1.ɵprd(512, null, i3.DomRenderer, i3.DomRenderer, [i1.Renderer2]), i1.ɵdid(83, 4440064, null, 0, i9.InputtextComponent, [i1.Renderer2, i3.DomRenderer], { placeholder: [0, \"placeholder\"] }, null), i1.ɵprd(1024, null, i7.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i9.InputtextComponent]), i1.ɵdid(85, 671744, null, 0, i7.FormControlName, [[3, i7.ControlContainer], [8, null], [8, null], [2, i7.NG_VALUE_ACCESSOR]], { name: [0, \"name\"] }, null), i1.ɵprd(2048, null, i7.NgControl, null, [i7.FormControlName]), i1.ɵdid(87, 16384, null, 0, i7.NgControlStatus, [i7.NgControl], null, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MainValidationComponent_15)), i1.ɵdid(90, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵeld(92, 0, null, null, 6, \"p\", [[\"style\", \"margin-top: 20px\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\n                \"])), (_l()(), i1.ɵeld(94, 0, null, null, 3, \"button\", [[\"fButton\", \"\"], [\"type\", \"submit\"]], [[8, \"disabled\", 0]], null, null, null, null)), i1.ɵprd(512, null, i3.DomRenderer, i3.DomRenderer, [i1.Renderer2]), i1.ɵdid(96, 4210688, null, 0, i10.ButtonDirective, [i1.ElementRef, i3.DomRenderer], { theme: [0, \"theme\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Submit\"])), (_l()(), i1.ɵted(-1, null, [\"\\n              \"])), (_l()(), i1.ɵted(-1, null, [\"\\n            \"])), (_l()(), i1.ɵted(-1, 0, [\"\\n          \"])), (_l()(), i1.ɵted(-1, 0, [\"\\n          \"])), (_l()(), i1.ɵeld(102, 0, null, 0, 7, \"free-tab\", [[\"header\", \"HTML\"]], null, null, null, i5.View_TabComponent_0, i5.RenderType_TabComponent)), i1.ɵdid(103, 4308992, null, 1, i6.TabComponent, [i6.TabGroupComponent], { header: [0, \"header\"] }, null), i1.ɵqud(603979776, 2, { templates: 1 }), (_l()(), i1.ɵted(-1, 0, [\"\\n            \"])), (_l()(), i1.ɵeld(106, 0, null, 0, 2, \"free-code\", [[\"lang\", \"html\"]], null, null, null, i11.View_CodeComponent_0, i11.RenderType_CodeComponent)), i1.ɵdid(107, 4243456, null, 0, i12.CodeComponent, [i1.Renderer2], { lang: [0, \"lang\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n              <form novalidate [formGroup]=\\\"testForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <free-inputtext formControlName=\\\"name\\\" [placeholder]=\\\"'Required'\\\"></free-inputtext>\\n                <div *ngIf=\\\"!testForm.get('name').valid && testForm.get('name').dirty\\\">\\n                  <span *ngIf=\\\"testForm.get('name').hasError('required')\\\">\\u5FC5\\u586B\\u9879</span>\\n                </div>\\n                <free-inputtext formControlName=\\\"phone\\\" [placeholder]=\\\"'Phone Number'\\\"></free-inputtext>\\n                <div *ngIf=\\\"!testForm.get('phone').valid && testForm.get('phone').dirty\\\">\\n                  <span *ngIf=\\\"testForm.get('phone').hasError('required')\\\">\\u5FC5\\u586B\\u9879</span>\\n                  <span *ngIf=\\\"testForm.get('phone').hasError('phone')\\\">\\u5FC5\\u987B\\u4E3A11\\u4F4D\\u624B\\u673A\\u53F7\\u7801</span>\\n                </div>\\n                <free-inputtext formControlName=\\\"password\\\"\\n                                [placeholder]=\\\"'Required-MinLength(6)-MaxLength(10)'\\\"></free-inputtext>\\n                <div *ngIf=\\\"!testForm.get('password').valid && testForm.get('password').dirty\\\">\\n                  <span *ngIf=\\\"testForm.get('password').hasError('required')\\\">\\u5FC5\\u586B\\u9879</span>\\n                  <span *ngIf=\\\"testForm.get('password').hasError('minlength') || testForm.get('password').hasError('maxlength')\\\">\\u81F3\\u5C116\\u4F4D\\uFF0C\\u6700\\u592710\\u4F4D</span>\\n                </div>\\n                <free-inputtext formControlName=\\\"age\\\"\\n                                [placeholder]=\\\"'Required - Min(6) - Max(10)'\\\"></free-inputtext>\\n                <div *ngIf=\\\"!testForm.get('age').valid && testForm.get('age').dirty\\\">\\n                  <span *ngIf=\\\"testForm.get('age').hasError('required')\\\">\\u5FC5\\u586B\\u9879</span>\\n                  <span *ngIf=\\\"testForm.get('age').hasError('min') || testForm.get('age').hasError('max')\\\">\\u5927\\u4E8E6\\u5C0F\\u4E8E10</span>\\n                </div>\\n                <free-inputtext formControlName=\\\"email\\\"\\n                                [placeholder]=\\\"'Required - Email'\\\"></free-inputtext>\\n                <div *ngIf=\\\"!testForm.get('email').valid && testForm.get('email').dirty\\\">\\n                  <span *ngIf=\\\"testForm.get('email').hasError('required')\\\">\\u5FC5\\u586B\\u9879</span>\\n                  <span *ngIf=\\\"testForm.get('email').hasError('email')\\\">\\u4E14\\u4E3A\\u6709\\u6548\\u7684\\u90AE\\u7BB1</span>\\n                </div>\\n                <free-inputtext formControlName=\\\"url\\\"\\n                                [placeholder]=\\\"'Required - url'\\\"></free-inputtext>\\n                <div *ngIf=\\\"!testForm.get('url').valid && testForm.get('url').dirty\\\">\\n                  <span *ngIf=\\\"testForm.get('url').hasError('required')\\\">\\u5FC5\\u586B\\u9879</span>\\n                  <span *ngIf=\\\"testForm.get('url').hasError('url')\\\">\\u4E14\\u4E3A\\u6709\\u6548\\u7684\\u5730\\u5740</span>\\n                </div>\\n                <p style=\\\"margin-top: 20px\\\">\\n                  <button fButton type=\\\"submit\\\" [theme]=\\\"'primary'\\\" [disabled]=\\\"!testForm.valid\\\">Submit</button>\\n                </p>\\n              </form>\\n            \"])), (_l()(), i1.ɵted(-1, 0, [\"\\n          \"])), (_l()(), i1.ɵted(-1, 0, [\"\\n          \"])), (_l()(), i1.ɵeld(111, 0, null, 0, 7, \"free-tab\", [[\"header\", \"TS\"]], null, null, null, i5.View_TabComponent_0, i5.RenderType_TabComponent)), i1.ɵdid(112, 4308992, null, 1, i6.TabComponent, [i6.TabGroupComponent], { header: [0, \"header\"] }, null), i1.ɵqud(603979776, 3, { templates: 1 }), (_l()(), i1.ɵted(-1, 0, [\"\\n            \"])), (_l()(), i1.ɵeld(115, 0, null, 0, 2, \"free-code\", [[\"lang\", \"typescript\"]], null, null, null, i11.View_CodeComponent_0, i11.RenderType_CodeComponent)), i1.ɵdid(116, 4243456, null, 0, i12.CodeComponent, [i1.Renderer2], { lang: [0, \"lang\"] }, null), (_l()(), i1.ɵted(-1, 0, [\"\\n              import {Component} from '@angular/core';\\n              import {FormBuilder, FormGroup, Validators} from '@angular/forms';\\n              import {CustomFormValidator} from '../../component/validation/custom-form-validator.modeule';\\n\\n              @Component({\\n                selector: 'free-main-validation',\\n                templateUrl: './main-validation.component.html',\\n                styleUrls: ['./main-validation.component.scss']\\n              })\\n              export class MainValidationComponent {\\n                testForm: FormGroup;\\n                constructor(public fb: FormBuilder) {\\n                  this.testForm = this.fb.group({\\n                    name: ['', Validators.required],\\n                    phone: ['', [Validators.required, CustomFormValidator.phone('CN')]],\\n                    password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(10)]],\\n                    age: ['', [Validators.required, Validators.min(18), Validators.max(25)]],\\n                    email: ['', [Validators.required, Validators.email]],\\n                    url: ['', [Validators.required, CustomFormValidator.url]]\\n                  })\\n                }\\n                onSubmit() {}\\n              }\\n            \"])), (_l()(), i1.ɵted(-1, 0, [\"\\n          \"])), (_l()(), i1.ɵted(-1, 0, [\"\\n        \"])), (_l()(), i1.ɵted(-1, null, [\"\\n      \"])), (_l()(), i1.ɵted(-1, null, [\"\\n    \"])), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵted(-1, null, [\"\\n  \"])), (_l()(), i1.ɵeld(124, 0, null, null, 2, \"blockquote\", [], null, null, null, null, null)), (_l()(), i1.ɵted(125, null, [\"FreeNG - \", \"\"])), i1.ɵpid(131072, i13.TranslatePipe, [i14.TranslateService, i1.ChangeDetectorRef]), (_l()(), i1.ɵted(-1, null, [\"\\n\"])), (_l()(), i1.ɵted(-1, null, [\"\\n\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"12\"; _ck(_v, 6, 0, currVal_0); var currVal_1 = \"right\"; _ck(_v, 14, 0, currVal_1); var currVal_2 = \"PREVIEW\"; _ck(_v, 17, 0, currVal_2); var currVal_10 = _co.testForm; _ck(_v, 22, 0, currVal_10); var currVal_18 = \"Required\"; _ck(_v, 28, 0, currVal_18); var currVal_19 = \"name\"; _ck(_v, 30, 0, currVal_19); var currVal_20 = (!_co.testForm.get(\"name\").valid && _co.testForm.get(\"name\").dirty); _ck(_v, 35, 0, currVal_20); var currVal_28 = \"Phone Number\"; _ck(_v, 39, 0, currVal_28); var currVal_29 = \"phone\"; _ck(_v, 41, 0, currVal_29); var currVal_30 = (!_co.testForm.get(\"phone\").valid && _co.testForm.get(\"phone\").dirty); _ck(_v, 46, 0, currVal_30); var currVal_38 = \"Required-MinLength(6)-MaxLength(10)\"; _ck(_v, 50, 0, currVal_38); var currVal_39 = \"password\"; _ck(_v, 52, 0, currVal_39); var currVal_40 = (!_co.testForm.get(\"password\").valid && _co.testForm.get(\"password\").dirty); _ck(_v, 57, 0, currVal_40); var currVal_48 = \"Required - Min(6) - Max(10)\"; _ck(_v, 61, 0, currVal_48); var currVal_49 = \"age\"; _ck(_v, 63, 0, currVal_49); var currVal_50 = (!_co.testForm.get(\"age\").valid && _co.testForm.get(\"age\").dirty); _ck(_v, 68, 0, currVal_50); var currVal_58 = \"Required - Email\"; _ck(_v, 72, 0, currVal_58); var currVal_59 = \"email\"; _ck(_v, 74, 0, currVal_59); var currVal_60 = (!_co.testForm.get(\"email\").valid && _co.testForm.get(\"email\").dirty); _ck(_v, 79, 0, currVal_60); var currVal_68 = \"Required - url\"; _ck(_v, 83, 0, currVal_68); var currVal_69 = \"url\"; _ck(_v, 85, 0, currVal_69); var currVal_70 = (!_co.testForm.get(\"url\").valid && _co.testForm.get(\"url\").dirty); _ck(_v, 90, 0, currVal_70); var currVal_72 = \"primary\"; _ck(_v, 96, 0, currVal_72); var currVal_73 = \"HTML\"; _ck(_v, 103, 0, currVal_73); var currVal_74 = \"html\"; _ck(_v, 107, 0, currVal_74); var currVal_75 = \"TS\"; _ck(_v, 112, 0, currVal_75); var currVal_76 = \"typescript\"; _ck(_v, 116, 0, currVal_76); }, function (_ck, _v) { var _co = _v.component; var currVal_3 = i1.ɵnov(_v, 24).ngClassUntouched; var currVal_4 = i1.ɵnov(_v, 24).ngClassTouched; var currVal_5 = i1.ɵnov(_v, 24).ngClassPristine; var currVal_6 = i1.ɵnov(_v, 24).ngClassDirty; var currVal_7 = i1.ɵnov(_v, 24).ngClassValid; var currVal_8 = i1.ɵnov(_v, 24).ngClassInvalid; var currVal_9 = i1.ɵnov(_v, 24).ngClassPending; _ck(_v, 20, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9); var currVal_11 = i1.ɵnov(_v, 32).ngClassUntouched; var currVal_12 = i1.ɵnov(_v, 32).ngClassTouched; var currVal_13 = i1.ɵnov(_v, 32).ngClassPristine; var currVal_14 = i1.ɵnov(_v, 32).ngClassDirty; var currVal_15 = i1.ɵnov(_v, 32).ngClassValid; var currVal_16 = i1.ɵnov(_v, 32).ngClassInvalid; var currVal_17 = i1.ɵnov(_v, 32).ngClassPending; _ck(_v, 26, 0, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17); var currVal_21 = i1.ɵnov(_v, 43).ngClassUntouched; var currVal_22 = i1.ɵnov(_v, 43).ngClassTouched; var currVal_23 = i1.ɵnov(_v, 43).ngClassPristine; var currVal_24 = i1.ɵnov(_v, 43).ngClassDirty; var currVal_25 = i1.ɵnov(_v, 43).ngClassValid; var currVal_26 = i1.ɵnov(_v, 43).ngClassInvalid; var currVal_27 = i1.ɵnov(_v, 43).ngClassPending; _ck(_v, 37, 0, currVal_21, currVal_22, currVal_23, currVal_24, currVal_25, currVal_26, currVal_27); var currVal_31 = i1.ɵnov(_v, 54).ngClassUntouched; var currVal_32 = i1.ɵnov(_v, 54).ngClassTouched; var currVal_33 = i1.ɵnov(_v, 54).ngClassPristine; var currVal_34 = i1.ɵnov(_v, 54).ngClassDirty; var currVal_35 = i1.ɵnov(_v, 54).ngClassValid; var currVal_36 = i1.ɵnov(_v, 54).ngClassInvalid; var currVal_37 = i1.ɵnov(_v, 54).ngClassPending; _ck(_v, 48, 0, currVal_31, currVal_32, currVal_33, currVal_34, currVal_35, currVal_36, currVal_37); var currVal_41 = i1.ɵnov(_v, 65).ngClassUntouched; var currVal_42 = i1.ɵnov(_v, 65).ngClassTouched; var currVal_43 = i1.ɵnov(_v, 65).ngClassPristine; var currVal_44 = i1.ɵnov(_v, 65).ngClassDirty; var currVal_45 = i1.ɵnov(_v, 65).ngClassValid; var currVal_46 = i1.ɵnov(_v, 65).ngClassInvalid; var currVal_47 = i1.ɵnov(_v, 65).ngClassPending; _ck(_v, 59, 0, currVal_41, currVal_42, currVal_43, currVal_44, currVal_45, currVal_46, currVal_47); var currVal_51 = i1.ɵnov(_v, 76).ngClassUntouched; var currVal_52 = i1.ɵnov(_v, 76).ngClassTouched; var currVal_53 = i1.ɵnov(_v, 76).ngClassPristine; var currVal_54 = i1.ɵnov(_v, 76).ngClassDirty; var currVal_55 = i1.ɵnov(_v, 76).ngClassValid; var currVal_56 = i1.ɵnov(_v, 76).ngClassInvalid; var currVal_57 = i1.ɵnov(_v, 76).ngClassPending; _ck(_v, 70, 0, currVal_51, currVal_52, currVal_53, currVal_54, currVal_55, currVal_56, currVal_57); var currVal_61 = i1.ɵnov(_v, 87).ngClassUntouched; var currVal_62 = i1.ɵnov(_v, 87).ngClassTouched; var currVal_63 = i1.ɵnov(_v, 87).ngClassPristine; var currVal_64 = i1.ɵnov(_v, 87).ngClassDirty; var currVal_65 = i1.ɵnov(_v, 87).ngClassValid; var currVal_66 = i1.ɵnov(_v, 87).ngClassInvalid; var currVal_67 = i1.ɵnov(_v, 87).ngClassPending; _ck(_v, 81, 0, currVal_61, currVal_62, currVal_63, currVal_64, currVal_65, currVal_66, currVal_67); var currVal_71 = !_co.testForm.valid; _ck(_v, 94, 0, currVal_71); var currVal_77 = i1.ɵunv(_v, 125, 0, i1.ɵnov(_v, 126).transform(\"MOTTO\")); _ck(_v, 125, 0, currVal_77); }); }\nexport function View_MainValidationComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"free-main-validation\", [], [[40, \"@fadeInUpState\", 0], [4, \"display\", null]], null, null, View_MainValidationComponent_0, RenderType_MainValidationComponent)), i1.ɵdid(1, 49152, null, 0, i15.MainValidationComponent, [i7.FormBuilder], null, null)], null, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 1).fadeInUpState; var currVal_1 = i1.ɵnov(_v, 1).display; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MainValidationComponentNgFactory = i1.ɵccf(\"free-main-validation\", i15.MainValidationComponent, View_MainValidationComponent_Host_0, {}, {}, []);\nexport { MainValidationComponentNgFactory as MainValidationComponentNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/democase/main-validation/main-validation.component.ngfactory.js.pre-build-optimizer.js","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/democase/main-validation/main-validation.component.scss.shim.ngstyle.js.pre-build-optimizer.js","<div class=\"main-container\">\n  <div class=\"row\">\n    <div class=\"free-demo-board\" fGrid=\"12\">\n      <div class=\"free-card-board\">\n        <h3 class=\"free-toolbar\">Validation</h3>\n        <free-tab-group direction=\"right\">\n          <free-tab header=\"PREVIEW\">\n            <form novalidate [formGroup]=\"testForm\" (ngSubmit)=\"onSubmit()\">\n              <free-inputtext formControlName=\"name\" [placeholder]=\"'Required'\"></free-inputtext>\n              <div *ngIf=\"!testForm.get('name').valid && testForm.get('name').dirty\">\n                <span *ngIf=\"testForm.get('name').hasError('required')\">必填项</span>\n              </div>\n              <free-inputtext formControlName=\"phone\" [placeholder]=\"'Phone Number'\"></free-inputtext>\n              <div *ngIf=\"!testForm.get('phone').valid && testForm.get('phone').dirty\">\n                <span *ngIf=\"testForm.get('phone').hasError('required')\">必填项</span>\n                <span *ngIf=\"testForm.get('phone').hasError('phone')\">必须为11位手机号码</span>\n              </div>\n              <free-inputtext formControlName=\"password\"\n                              [placeholder]=\"'Required-MinLength(6)-MaxLength(10)'\"></free-inputtext>\n              <div *ngIf=\"!testForm.get('password').valid && testForm.get('password').dirty\">\n                <span *ngIf=\"testForm.get('password').hasError('required')\">必填项</span>\n                <span *ngIf=\"testForm.get('password').hasError('minlength') || testForm.get('password').hasError('maxlength')\">至少6位，最大10位</span>\n              </div>\n              <free-inputtext formControlName=\"age\"\n                              [placeholder]=\"'Required - Min(6) - Max(10)'\"></free-inputtext>\n              <div *ngIf=\"!testForm.get('age').valid && testForm.get('age').dirty\">\n                <span *ngIf=\"testForm.get('age').hasError('required')\">必填项</span>\n                <span *ngIf=\"testForm.get('age').hasError('min') || testForm.get('age').hasError('max')\">大于6小于10</span>\n              </div>\n              <free-inputtext formControlName=\"email\"\n                              [placeholder]=\"'Required - Email'\"></free-inputtext>\n              <div *ngIf=\"!testForm.get('email').valid && testForm.get('email').dirty\">\n                <span *ngIf=\"testForm.get('email').hasError('required')\">必填项</span>\n                <span *ngIf=\"testForm.get('email').hasError('email')\">且为有效的邮箱</span>\n              </div>\n              <free-inputtext formControlName=\"url\"\n                              [placeholder]=\"'Required - url'\"></free-inputtext>\n              <div *ngIf=\"!testForm.get('url').valid && testForm.get('url').dirty\">\n                <span *ngIf=\"testForm.get('url').hasError('required')\">必填项</span>\n                <span *ngIf=\"testForm.get('url').hasError('url')\">且为有效的地址</span>\n              </div>\n              <p style=\"margin-top: 20px\">\n                <button fButton type=\"submit\" [theme]=\"'primary'\" [disabled]=\"!testForm.valid\">Submit</button>\n              </p>\n            </form>\n          </free-tab>\n          <free-tab header=\"HTML\">\n            <free-code lang=\"html\">\n              &lt;form novalidate [formGroup]=\"testForm\" (ngSubmit)=\"onSubmit()\"&gt;\n                &lt;free-inputtext formControlName=\"name\" [placeholder]=\"'Required'\"&gt;&lt;/free-inputtext&gt;\n                &lt;div *ngIf=\"!testForm.get('name').valid && testForm.get('name').dirty\"&gt;\n                  &lt;span *ngIf=\"testForm.get('name').hasError('required')\"&gt;必填项&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;free-inputtext formControlName=\"phone\" [placeholder]=\"'Phone Number'\"&gt;&lt;/free-inputtext&gt;\n                &lt;div *ngIf=\"!testForm.get('phone').valid && testForm.get('phone').dirty\"&gt;\n                  &lt;span *ngIf=\"testForm.get('phone').hasError('required')\"&gt;必填项&lt;/span&gt;\n                  &lt;span *ngIf=\"testForm.get('phone').hasError('phone')\"&gt;必须为11位手机号码&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;free-inputtext formControlName=\"password\"\n                                [placeholder]=\"'Required-MinLength(6)-MaxLength(10)'\"&gt;&lt;/free-inputtext&gt;\n                &lt;div *ngIf=\"!testForm.get('password').valid && testForm.get('password').dirty\"&gt;\n                  &lt;span *ngIf=\"testForm.get('password').hasError('required')\"&gt;必填项&lt;/span&gt;\n                  &lt;span *ngIf=\"testForm.get('password').hasError('minlength') || testForm.get('password').hasError('maxlength')\"&gt;至少6位，最大10位&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;free-inputtext formControlName=\"age\"\n                                [placeholder]=\"'Required - Min(6) - Max(10)'\"&gt;&lt;/free-inputtext&gt;\n                &lt;div *ngIf=\"!testForm.get('age').valid && testForm.get('age').dirty\"&gt;\n                  &lt;span *ngIf=\"testForm.get('age').hasError('required')\"&gt;必填项&lt;/span&gt;\n                  &lt;span *ngIf=\"testForm.get('age').hasError('min') || testForm.get('age').hasError('max')\"&gt;大于6小于10&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;free-inputtext formControlName=\"email\"\n                                [placeholder]=\"'Required - Email'\"&gt;&lt;/free-inputtext&gt;\n                &lt;div *ngIf=\"!testForm.get('email').valid && testForm.get('email').dirty\"&gt;\n                  &lt;span *ngIf=\"testForm.get('email').hasError('required')\"&gt;必填项&lt;/span&gt;\n                  &lt;span *ngIf=\"testForm.get('email').hasError('email')\"&gt;且为有效的邮箱&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;free-inputtext formControlName=\"url\"\n                                [placeholder]=\"'Required - url'\"&gt;&lt;/free-inputtext&gt;\n                &lt;div *ngIf=\"!testForm.get('url').valid && testForm.get('url').dirty\"&gt;\n                  &lt;span *ngIf=\"testForm.get('url').hasError('required')\"&gt;必填项&lt;/span&gt;\n                  &lt;span *ngIf=\"testForm.get('url').hasError('url')\"&gt;且为有效的地址&lt;/span&gt;\n                &lt;/div&gt;\n                &lt;p style=\"margin-top: 20px\"&gt;\n                  &lt;button fButton type=\"submit\" [theme]=\"'primary'\" [disabled]=\"!testForm.valid\"&gt;Submit&lt;/button&gt;\n                &lt;/p&gt;\n              &lt;/form&gt;\n            </free-code>\n          </free-tab>\n          <free-tab header=\"TS\">\n            <free-code lang=\"typescript\">\n              import &#123;Component&#125; from '@angular/core';\n              import &#123;FormBuilder, FormGroup, Validators&#125; from '@angular/forms';\n              import &#123;CustomFormValidator&#125; from '../../component/validation/custom-form-validator.modeule';\n\n              @Component(&#123;\n                selector: 'free-main-validation',\n                templateUrl: './main-validation.component.html',\n                styleUrls: ['./main-validation.component.scss']\n              &#125;)\n              export class MainValidationComponent &#123;\n                testForm: FormGroup;\n                constructor(public fb: FormBuilder) &#123;\n                  this.testForm = this.fb.group(&#123;\n                    name: ['', Validators.required],\n                    phone: ['', [Validators.required, CustomFormValidator.phone('CN')]],\n                    password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(10)]],\n                    age: ['', [Validators.required, Validators.min(18), Validators.max(25)]],\n                    email: ['', [Validators.required, Validators.email]],\n                    url: ['', [Validators.required, CustomFormValidator.url]]\n                  &#125;)\n                &#125;\n                onSubmit() &#123;&#125;\n              &#125;\n            </free-code>\n          </free-tab>\n        </free-tab-group>\n      </div>\n    </div>\n  </div>\n  <blockquote>FreeNG - {{'MOTTO' | translate}}</blockquote>\n</div>\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/democase/main-validation/main-validation.component.html","\nimport {RouterModule} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {MainValidationComponent} from './main-validation.component';\n\n@NgModule({\n  imports: [RouterModule.forChild([\n    {path: '', component: MainValidationComponent}\n  ])],\n  exports: [RouterModule]\n})\n\n\nexport class MainValidationRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/democase/main-validation/main-validation-routing.module.ts","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./main-validation.module\";\nimport * as i2 from \"./main-validation.component.ngfactory\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@ngx-translate/core/src/translate.loader\";\nimport * as i6 from \"@ngx-translate/core/src/translate.compiler\";\nimport * as i7 from \"@ngx-translate/core/src/translate.parser\";\nimport * as i8 from \"@ngx-translate/core/src/missing-translation-handler\";\nimport * as i9 from \"@ngx-translate/core/src/translate.service\";\nimport * as i10 from \"@ngx-translate/core/src/translate.store\";\nimport * as i11 from \"../../component/common/share\";\nimport * as i12 from \"../../component/tab/tab.component\";\nimport * as i13 from \"../../component/code/code.component\";\nimport * as i14 from \"../../component/pagination/pagination.component\";\nimport * as i15 from \"../../component/table/table.component\";\nimport * as i16 from \"../../component/grid/grid.directive\";\nimport * as i17 from \"@ngx-translate/core/index\";\nimport * as i18 from \"../common/language\";\nimport * as i19 from \"../../component/inputtext/inputtext.component\";\nimport * as i20 from \"../../component/button/button.directive\";\nimport * as i21 from \"@angular/router\";\nimport * as i22 from \"./main-validation-routing.module\";\nimport * as i23 from \"./main-validation.component\";\nvar MainValidationModuleNgFactory = i0.ɵcmf(i1.MainValidationModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.MainValidationComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i3.NgLocalization, i3.NgLocaleLocalization, [i0.LOCALE_ID, [2, i3.ɵa]]), i0.ɵmpd(4608, i4.ɵi, i4.ɵi, []), i0.ɵmpd(4608, i4.FormBuilder, i4.FormBuilder, []), i0.ɵmpd(4608, i5.TranslateLoader, i5.TranslateFakeLoader, []), i0.ɵmpd(4608, i6.TranslateCompiler, i6.TranslateFakeCompiler, []), i0.ɵmpd(4608, i7.TranslateParser, i7.TranslateDefaultParser, []), i0.ɵmpd(4608, i8.MissingTranslationHandler, i8.FakeMissingTranslationHandler, []), i0.ɵmpd(4608, i9.TranslateService, i9.TranslateService, [i10.TranslateStore, i5.TranslateLoader, i6.TranslateCompiler, i7.TranslateParser, i8.MissingTranslationHandler, i9.USE_DEFAULT_LANG, i9.USE_STORE]), i0.ɵmpd(512, i3.CommonModule, i3.CommonModule, []), i0.ɵmpd(512, i4.ɵba, i4.ɵba, []), i0.ɵmpd(512, i4.FormsModule, i4.FormsModule, []), i0.ɵmpd(512, i4.ReactiveFormsModule, i4.ReactiveFormsModule, []), i0.ɵmpd(512, i11.ShareModule, i11.ShareModule, []), i0.ɵmpd(512, i12.TabGroupModule, i12.TabGroupModule, []), i0.ɵmpd(512, i13.CodeModule, i13.CodeModule, []), i0.ɵmpd(512, i14.PaginationModule, i14.PaginationModule, []), i0.ɵmpd(512, i15.TableModule, i15.TableModule, []), i0.ɵmpd(512, i16.GridModule, i16.GridModule, []), i0.ɵmpd(512, i17.TranslateModule, i17.TranslateModule, []), i0.ɵmpd(512, i18.LanguageModule, i18.LanguageModule, []), i0.ɵmpd(512, i19.InputtextModule, i19.InputtextModule, []), i0.ɵmpd(512, i20.ButtonModule, i20.ButtonModule, []), i0.ɵmpd(512, i21.RouterModule, i21.RouterModule, [[2, i21.ɵa], [2, i21.Router]]), i0.ɵmpd(512, i22.MainValidationRoutingModule, i22.MainValidationRoutingModule, []), i0.ɵmpd(512, i1.MainValidationModule, i1.MainValidationModule, []), i0.ɵmpd(256, i9.USE_STORE, undefined, []), i0.ɵmpd(256, i9.USE_DEFAULT_LANG, undefined, []), i0.ɵmpd(1024, i21.ROUTES, function () { return [[{ path: \"\", component: i23.MainValidationComponent }]]; }, [])]); });\nexport { MainValidationModuleNgFactory as MainValidationModuleNgFactory };\n\n\n\n// WEBPACK FOOTER //\n// /home/tg/github/freeng/src/app/democase/main-validation/main-validation.module.ngfactory.js.pre-build-optimizer.js","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_an-object.js\n// module id = Ft6c\n// module chunks = 3","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_array-includes.js\n// module id = FwYO\n// module chunks = 3","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_to-integer.js\n// module id = I5DZ\n// module chunks = 3","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_enum-bug-keys.js\n// module id = Ic+c\n// module chunks = 3","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_hide.js\n// module id = Jz4p\n// module chunks = 3","module.exports = require('./_hide');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_redefine.js\n// module id = L1xW\n// module chunks = 3","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_classof.js\n// module id = Luq4\n// module chunks = 3","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_has.js\n// module id = MEt7\n// module chunks = 3","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_object-dp.js\n// module id = Nvcy\n// module chunks = 3","module.exports = {\"country_phone_code_to_countries\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"800\":[\"001\"],\"808\":[\"001\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"870\":[\"001\"],\"878\":[\"001\"],\"880\":[\"BD\"],\"881\":[\"001\"],\"882\":[\"001\"],\"883\":[\"001\"],\"886\":[\"TW\"],\"888\":[\"001\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"979\":[\"001\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"[46]\\\\d{4}|[01589]\\\\d{5}\"],\"AD\":[\"376\",\"[16]\\\\d{5,8}|[37-9]\\\\d{5}\",[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[137-9]|6[0-8]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"180\",\"180[02]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"690\"]]]],\"AE\":[\"971\",\"[2-79]\\\\d{7,8}|800\\\\d{2,9}\",[[\"([2-4679])(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-4679][2-8]\"]],[\"(5\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"]],[\"([479]00)(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]00\"],\"$1\"],[\"([68]00)(\\\\d{2,9})\",\"$1 $2\",[\"[68]00\"],\"$1\"]],\"0\",\"0$1\"],\"AF\":[\"93\",\"[2-7]\\\\d{8}\",[[\"([2-7]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"]]],\"0\",\"0$1\"],\"AG\":[\"1\",\"[2589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"268\"],\"AI\":[\"1\",\"[2589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"264\"],\"AL\":[\"355\",\"[2-57]\\\\d{7}|6\\\\d{8}|8\\\\d{5,7}|9\\\\d{5}\",[[\"(4)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[0-6]\"]],[\"(6\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4[7-9]\"]],[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"[235][16-9]|[79]|8[016-9]\"]]],\"0\",\"0$1\"],\"AM\":[\"374\",\"[1-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"4[1349]|[5-7]|88|9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"8|90\"],\"0 $1\"]],\"0\",\"(0$1)\"],\"AO\":[\"244\",\"[29]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\"]]],\"AR\":[\"54\",\"11\\\\d{8}|[2368]\\\\d{9}|9\\\\d{10}\",[[\"([68]\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"]],[\"(9)(11)(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"911\"],null,null,\"$1 $2 $3-$4\"],[\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-4689]|3[3-8])\",\"9(?:2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578]))\",\"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\",\"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\"],null,null,\"$1 $2 $3-$4\"],[\"(9)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9[23]\"],null,null,\"$1 $2 $3-$4\"],[\"(11)(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"11\"],null,\"true\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578])\",\"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\",\"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\"],null,\"true\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],null,\"true\"]],\"0\",\"0$1\",\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))?15)?\",\"9$1\"],\"AS\":[\"1\",\"[5689]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"684\"],\"AT\":[\"43\",\"[1-9]\\\\d{3,12}\",[[\"(116\\\\d{3})\",\"$1\",[\"116\"],\"$1\"],[\"(1)(\\\\d{3,12})\",\"$1 $2\",[\"1\"]],[\"(5\\\\d)(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"]],[\"(5\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5[079]\"]],[\"(5\\\\d)(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5[079]\"]],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:[28]0|32)|[89]\"]],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"2|3(?:1[1-578]|[3-8])|4[2378]|5[2-6]|6(?:[12]|4[1-9]|5[468])|7(?:[24][1-8]|35|[5-79])\"]]],\"0\",\"0$1\"],\"AU\":[\"61\",\"1\\\\d{4,9}|[2-578]\\\\d{8}\",[[\"([2378])(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|[45]\"],\"0$1\"],[\"(16)(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(16)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[389]0\",\"1(?:[38]0|9)0\"]],[\"(180)(2\\\\d{3})\",\"$1 $2\",[\"180\",\"1802\"]],[\"(19\\\\d)(\\\\d{3})\",\"$1 $2\",[\"19[13]\"]],[\"(19\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"19[679]\"]],[\"(13)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"13[1-9]\"]]],\"0\",null,null,null,null,null,[\"[237]\\\\d{8}|8(?:51(?:0(?:0[03-9]|[1247]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-6])|1(?:1[69]|[23]\\\\d|4[0-4]))|[6-8]\\\\d{4}|9(?:[02-9]\\\\d{3}|1(?:[0-57-9]\\\\d{2}|6[0135-9]\\\\d)))\\\\d{3}\",\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12457-9]|9[017-9])\\\\d{6}\",\"180(?:0\\\\d{3}|2)\\\\d{3}\",\"19(?:0[0126]\\\\d|[679])\\\\d{5}\",\"500\\\\d{6}\",null,null,\"16\\\\d{3,7}\",\"550\\\\d{6}\",\"13(?:00\\\\d{3}|45[0-4]|\\\\d)\\\\d{3}\"]],\"AW\":[\"297\",\"[25-9]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"AX\":[\"358\",\"[13]\\\\d{5,9}|2\\\\d{4,9}|4\\\\d{6,10}|5\\\\d{6,9}|[67]\\\\d{7,9}|8\\\\d{7,8}\",[[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"(?:[1-3]0|[6-8])0\"]],[\"(116\\\\d{3})\",\"$1\",[\"116\"],\"$1\"],[\"(\\\\d{2})(\\\\d{3,9})\",\"$1 $2\",[\"1(?:0[1-9]|[3-9])|2(?:0[1-9]|9)|30[1-9]|4|50|7(?:[13]|5[03-9])\"]],[\"(\\\\d)(\\\\d{4})\",\"$1 $2\",[\"9[1-8]\"]],[\"(\\\\d)(\\\\d{5,9})\",\"$1 $2\",[\"[235689][1-8]\"]],[\"(39\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"39\"]]],\"0\",null,null,null,null,null,[\"18[1-8]\\\\d{4,6}\",\"4(?:[0-8]\\\\d{5,8}|9\\\\d{9})|50\\\\d{6,8}\",\"800\\\\d{5,6}\",\"[67]00\\\\d{5,6}\",null,null,\"10(?:0\\\\d{4,6}|[1-37-9]\\\\d{5,7}|[46]\\\\d{3,7}|5\\\\d{4,7})|2(?:0(?:0\\\\d{4,6}|[1346-8]\\\\d{5,7}|2(?:[023]\\\\d{4,5}|[14-9]\\\\d{4,6})|5(?:\\\\d{3}|\\\\d{5,7})|9(?:[0-7]\\\\d{4,6}|[89]\\\\d{1,6}))|9\\\\d{5,8})|3(?:0(?:0\\\\d{3,7}|[1-57-9]\\\\d{5,7}|6(?:\\\\d{3}|\\\\d{5,7}))|44\\\\d{3}|93\\\\d{5,7})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{5,6})\"]],\"AZ\":[\"994\",\"[1-9]\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2(?:[0-36]|[45]2)|365\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[4-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"]],\"0\",\"(0$1)\"],\"BA\":[\"387\",\"[3-9]\\\\d{7,8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-356]|[7-9]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6[047]\"]]],\"0\",\"0$1\"],\"BB\":[\"1\",\"[2589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"246\"],\"BD\":[\"880\",\"[2-79]\\\\d{5,9}|1\\\\d{9}|8[0-7]\\\\d{4,8}\",[[\"(2)(\\\\d{7,8})\",\"$1-$2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"[3-79]1\"]],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"1|3(?:0|[2-58]2)|4(?:0|[25]2|3[23]|[4689][25])|5(?:[02-578]2|6[25])|6(?:[0347-9]2|[26][25])|7[02-9]2|8(?:[023][23]|[4-7]2)|9(?:[02][23]|[458]2|6[016])\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"[3-79][2-9]|8\"]]],\"0\",\"0$1\"],\"BE\":[\"32\",\"[1-9]\\\\d{7,8}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4[6-9]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]|4[23]|9[2-4]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[156]|7[018]|8(?:0[1-9]|[1-79])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"]]],\"0\",\"0$1\"],\"BF\":[\"226\",\"[25-7]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"BG\":[\"359\",\"[23567]\\\\d{5,7}|[489]\\\\d{6,8}\",[[\"(2)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(2)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[124-7]|70[1-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[124-7]|70[1-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[78]00\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"99[69]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"48|8[7-9]|9[08]\"]]],\"0\",\"0$1\"],\"BH\":[\"973\",\"[136-9]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\"]]],\"BI\":[\"257\",\"[267]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"BJ\":[\"229\",\"[2689]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2689]\"]]]],\"BL\":[\"590\",\"[56]\\\\d{8}\",[[\"([56]90)(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"[56]90\"]]],\"0\",null,null,null,null,null,[\"590(?:2[7-9]|5[12]|87)\\\\d{4}\",\"690(?:0[05-9]|[1-9]\\\\d)\\\\d{4}\"]],\"BM\":[\"1\",\"[4589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"441\"],\"BN\":[\"673\",\"[2-578]\\\\d{6}\",[[\"([2-578]\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]]],\"BO\":[\"591\",\"[23467]\\\\d{7}|8\\\\d{8}\",[[\"([234])(\\\\d{7})\",\"$1 $2\",[\"[2-4]\"]],[\"([67]\\\\d{7})\",\"$1\",[\"[67]\"]],[\"(800)(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"800\"]]],\"0\",null,\"0(1\\\\d)?\"],\"BQ\":[\"599\",\"[347]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[13-7]\"]],[\"(9)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],null,null,null,null,null,null,[\"(?:318[023]|41(?:6[023]|70)|7(?:1[578]|50)\\\\d)\\\\d{3}\",\"(?:31(?:8[14-8]|9[14578])|416[145-9]|7(?:0[01]|7[07]|8\\\\d|9[056])\\\\d)\\\\d{3}\"]],\"BR\":[\"55\",\"[1-46-9]\\\\d{7,10}|5(?:[0-4]\\\\d{7,9}|5(?:[2-8]\\\\d{7}|9\\\\d{7,8}))\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|40[02]\",\"300|40(?:0|20)\"]],[\"([3589]00)(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3589]00\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"[1-9][1-9]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[1-9][1-9]9\"],\"($1)\"]],\"0\",null,\"0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\"],\"BS\":[\"1\",\"[2589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"242\"],\"BT\":[\"975\",\"[1-8]\\\\d{6,7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1|77\"]],[\"([2-8])(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]]]],\"BW\":[\"267\",\"[2-79]\\\\d{6,7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-6]\"]],[\"(7\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(90)(\\\\d{5})\",\"$1 $2\",[\"90\"]]]],\"BY\":[\"375\",\"[1-4]\\\\d{8}|8(?:0(?:0\\\\d{3,7}|[13]\\\\d{7})|(?:10|20\\\\d)\\\\d{7})|9\\\\d{9,10}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"17[0-3589]|2[4-9]|[34]\",\"17(?:[02358]|1[0-2]|9[0189])|2[4-9]|[34]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:5[24]|6[235]|7[467])|2(?:1[246]|2[25]|3[26])\",\"1(?:5[24]|6(?:2|3[04-9]|5[0346-9])|7(?:[46]|7[37-9]))|2(?:1[246]|2[25]|3[26])\"],\"8 0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"([89]\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8[01]|9\"],\"8 $1\"],[\"(82\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"82\"],\"8 $1\"],[\"(800)(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(800)(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"]],\"8\",null,\"8?0?\"],\"BZ\":[\"501\",\"[2-8]\\\\d{6}|0\\\\d{10}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(0)(800)(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"080\",\"0800\"]]]],\"CA\":[\"1\",\"[2-9]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,null,[\"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",null,\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",\"900[2-9]\\\\d{6}\",\"5(?:00|22|33|44|66|77|88)[2-9]\\\\d{6}\"]],\"CC\":[\"61\",\"[1458]\\\\d{5,9}\",[[\"([2378])(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|[45]\"],\"0$1\"],[\"(16)(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(16)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[389]0\",\"1(?:[38]0|9)0\"]],[\"(180)(2\\\\d{3})\",\"$1 $2\",[\"180\",\"1802\"]],[\"(19\\\\d)(\\\\d{3})\",\"$1 $2\",[\"19[13]\"]],[\"(19\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"19[679]\"]],[\"(13)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"13[1-9]\"]]],\"0\",null,null,null,null,null,[\"89162\\\\d{4}\",\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12547-9]|9[017-9])\\\\d{6}\",\"180(?:0\\\\d{3}|2)\\\\d{3}\",\"19(?:0[0126]\\\\d|[679])\\\\d{5}\",\"500\\\\d{6}\",null,null,null,\"550\\\\d{6}\",\"13(?:00\\\\d{2})?\\\\d{4}\"]],\"CD\":[\"243\",\"[2-6]\\\\d{6}|[18]\\\\d{6,8}|9\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"12\"]],[\"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[0-2459]|9\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"]]],\"0\",\"0$1\"],\"CF\":[\"236\",\"[278]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"CG\":[\"242\",\"[028]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"801\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"800\"]]]],\"CH\":[\"41\",\"[2-9]\\\\d{8}|860\\\\d{9}\",[[\"([2-9]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]|[89]1\"]],[\"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"860\"]]],\"0\",\"0$1\"],\"CI\":[\"225\",\"[02-8]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"CK\":[\"682\",\"[2-8]\\\\d{4}\",[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\"]]],\"CL\":[\"56\",\"1230\\\\d{7}|[2-46-9]\\\\d{8,10}|5[1-3578]\\\\d{7}\",[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[23]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[357]|4[1-35]|6[13-57]\"],\"($1)\"],[\"(9)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]],[\"(44)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"([68]00)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[68]00\"],\"$1\"],[\"(600)(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"600\"],\"$1\"],[\"(1230)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"123\",\"1230\"],\"$1\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\"],\"($1)\"]],\"0\",\"0$1\",\"0|(1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))\"],\"CM\":[\"237\",\"[2368]\\\\d{7,8}\",[[\"([26])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]|88\"]]]],\"CN\":[\"86\",\"[1-7]\\\\d{6,11}|8[0-357-9]\\\\d{6,9}|9\\\\d{7,10}\",[[\"(80\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"80[26-8]\"],\"0$1\",\"true\"],[\"([48]00)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[48]00\"]],[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2\\\\d)[19]\",\"(?:10|2\\\\d)(?:10|9[56])\",\"(?:10|2\\\\d)(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[3-9]\",\"[3-9]\\\\d\\\\d[19]\",\"[3-9]\\\\d\\\\d(?:10|9[56])\"],\"0$1\"],[\"(21)(\\\\d{4})(\\\\d{4,6})\",\"$1 $2 $3\",[\"21\"],\"0$1\",\"true\"],[\"([12]\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10[1-9]|2[02-9]\",\"10[1-9]|2[02-9]\",\"10(?:[1-79]|8(?:0[1-9]|[1-9]))|2[02-9]\"],\"0$1\",\"true\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[47-9]|7|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])\"],\"0$1\",\"true\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[457]|6[09])|8(?:[57]1|98)\"],\"0$1\",\"true\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"807\",\"8078\"],\"0$1\",\"true\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[3-57-9]|66)\"]],[\"(10800)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"108\",\"1080\",\"10800\"]],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"950\"]]],\"0\",null,\"(1(?:[129]\\\\d{3}|79\\\\d{2}))|0\"],\"CO\":[\"57\",\"(?:[13]\\\\d{0,3}|[24-8])\\\\d{7}\",[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1(?:[2-7]|8[2-9]|9[0-3])|[24-8]\",\"1(?:[2-7]|8[2-9]|9(?:09|[1-3]))|[24-8]\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"]],[\"(1)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1(?:80|9[04])\",\"1(?:800|9(?:0[01]|4[78]))\"],\"0$1\",null,\"$1 $2 $3\"]],\"0\",null,\"0([3579]|4(?:44|56))?\"],\"CR\":[\"506\",\"[24-9]\\\\d{7,9}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[24-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]0\"]]],null,null,\"(19(?:0[012468]|1[09]|20|66|77|99))\"],\"CU\":[\"53\",\"[2-57]\\\\d{5,7}\",[[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"]],[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"[2-4]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"5\"],\"0$1\"]],\"0\",\"(0$1)\"],\"CV\":[\"238\",\"[259]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\"]]],\"CW\":[\"599\",\"[134679]\\\\d{6,7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[13-7]\"]],[\"(9)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],null,null,null,null,null,null,[\"9(?:[48]\\\\d{2}|50\\\\d|7(?:2[0-24]|[34]\\\\d|6[35-7]|77|8[7-9]))\\\\d{4}\",\"9(?:5(?:[12467]\\\\d|3[01])|6(?:[15-9]\\\\d|3[01]))\\\\d{4}\",null,null,null,null,null,\"955\\\\d{5}\",null,\"60[0-2]\\\\d{4}\"]],\"CX\":[\"61\",\"[1458]\\\\d{5,9}\",[[\"([2378])(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|[45]\"],\"0$1\"],[\"(16)(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(16)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[389]0\",\"1(?:[38]0|9)0\"]],[\"(180)(2\\\\d{3})\",\"$1 $2\",[\"180\",\"1802\"]],[\"(19\\\\d)(\\\\d{3})\",\"$1 $2\",[\"19[13]\"]],[\"(19\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"19[679]\"]],[\"(13)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"13[1-9]\"]]],\"0\",null,null,null,null,null,[\"89164\\\\d{4}\",\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12547-9]|9[017-9])\\\\d{6}\",\"180(?:0\\\\d{3}|2)\\\\d{3}\",\"19(?:0[0126]\\\\d|[679])\\\\d{5}\",\"500\\\\d{6}\",null,null,null,\"550\\\\d{6}\",\"13(?:00\\\\d{2})?\\\\d{4}\"]],\"CY\":[\"357\",\"[257-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\"]]],\"CZ\":[\"420\",\"[2-8]\\\\d{8}|9\\\\d{8,11}\",[[\"([2-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(96\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(9\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9[36]\"]]]],\"DE\":[\"49\",\"[1-35-9]\\\\d{3,14}|4(?:[0-8]\\\\d{3,12}|9(?:[0-37]\\\\d|4(?:[1-35-8]|4\\\\d?)|5\\\\d{1,2}|6[1-8]\\\\d?)\\\\d{2,8})\",[[\"(1\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"]],[\"(15\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"15[0568]\"]],[\"(1\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"15\"]],[\"(\\\\d{2})(\\\\d{3,11})\",\"$1 $2\",[\"3[02]|40|[68]9\"]],[\"(\\\\d{3})(\\\\d{3,11})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14]|[4-9]1)|3(?:[35-9][15]|4[015])|[4-8][1-9]1|9(?:06|[1-9]1)\"]],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|[7-9](?:0[1-9]|[1-9])\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|[46][1246]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|3[1357]|4[13578]|6[1246]|7[1356]|9[1346])|5(?:0[14]|2[1-3589]|3[1357]|[49][1246]|6[1-4]|7[1346]|8[13568])|6(?:0[356]|2[1-489]|3[124-6]|4[1347]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|3[1357]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|4[1347]|6[0135-9]|7[1467]|8[136])|9(?:0[12479]|2[1358]|3[1357]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|[7-9](?:0[1-9]|[1-9])\"]],[\"(3\\\\d{4})(\\\\d{1,10})\",\"$1 $2\",[\"3\"]],[\"(800)(\\\\d{7,12})\",\"$1 $2\",[\"800\"]],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:37|80)|900\",\"1(?:37|80)|900[1359]\"]],[\"(1\\\\d{2})(\\\\d{5,11})\",\"$1 $2\",[\"181\"]],[\"(18\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"]],[\"(18\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"]],[\"(18\\\\d)(\\\\d{8})\",\"$1 $2\",[\"18[2-579]\"]],[\"(700)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"700\"]],[\"(138)(\\\\d{4})\",\"$1 $2\",[\"138\"]],[\"(15[013-68])(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15[013-68]\"]],[\"(15[279]\\\\d)(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"]],[\"(1[67]\\\\d)(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"]]],\"0\",\"0$1\"],\"DJ\":[\"253\",\"[27]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"DK\":[\"45\",\"[2-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"DM\":[\"1\",\"[57-9]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"767\"],\"DO\":[\"1\",\"[589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"8[024]9\"],\"DZ\":[\"213\",\"(?:[1-4]|[5-9]\\\\d)\\\\d{7}\",[[\"([1-4]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"]],[\"([5-8]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"]],[\"(9\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"]]],\"0\",\"0$1\"],\"EC\":[\"593\",\"1\\\\d{9,10}|[2-8]\\\\d{7}|9\\\\d{8}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[247]|[356][2-8]\"],null,null,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(1800)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"180\",\"1800\"],\"$1\"]],\"0\",\"(0$1)\"],\"EE\":[\"372\",\"[3-9]\\\\d{6,7}|800\\\\d{6,7}\",[[\"([3-79]\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]\"]],[\"(70)(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"70\"]],[\"(8000)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"800\",\"8000\"]],[\"([458]\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"40|5|8(?:00|[1-5])\",\"40|5|8(?:00[1-9]|[1-5])\"]]]],\"EG\":[\"20\",\"1\\\\d{4,9}|[24-6]\\\\d{8}|3\\\\d{7}|[89]\\\\d{8,9}\",[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"]],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1(?:3|5[239])|[4-6]|[89][2-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1[0-25]|[89]00\"]]],\"0\",\"0$1\"],\"EH\":[\"212\",\"[5-9]\\\\d{8}\",[[\"([5-7]\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"5(?:2[015-7]|3[0-4])|[67]\"]],[\"([58]\\\\d{3})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-489]|3[5-9]|92)|892\",\"5(?:2(?:[2-48]|9[0-7])|3(?:[5-79]|8[0-7])|924)|892\"]],[\"(5\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"5(?:29|38)\",\"5(?:29|38)[89]\"]],[\"([5]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:4[067]|5[03])\"]],[\"(8[09])(\\\\d{7})\",\"$1-$2\",[\"8(?:0|9[013-9])\"]]],\"0\",null,null,null,null,\"528[89]\"],\"ER\":[\"291\",\"[178]\\\\d{6}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\"]],\"0\",\"0$1\"],\"ES\":[\"34\",\"[5-9]\\\\d{8}\",[[\"([89]00)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"([5-9]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[568]|[79][0-8]\"]]]],\"ET\":[\"251\",\"[1-59]\\\\d{8}\",[[\"([1-59]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-59]\"]]],\"0\",\"0$1\"],\"FI\":[\"358\",\"1\\\\d{5,9}|2\\\\d{4,9}|[35]\\\\d{5,9}|4\\\\d{5,10}|6\\\\d{6,9}|7\\\\d{7,9}|8\\\\d{6,8}|9\\\\d{4,8}\",[[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"(?:[1-3]0|[6-8])0\"]],[\"(116\\\\d{3})\",\"$1\",[\"116\"],\"$1\"],[\"(\\\\d{2})(\\\\d{3,9})\",\"$1 $2\",[\"1(?:0[1-9]|[3-9])|2(?:0[1-9]|9)|30[1-9]|4|50|7(?:[13]|5[03-9])\"]],[\"(\\\\d)(\\\\d{4})\",\"$1 $2\",[\"9[1-8]\"]],[\"(\\\\d)(\\\\d{5,9})\",\"$1 $2\",[\"[235689][1-8]\"]],[\"(39\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"39\"]]],\"0\",\"0$1\",null,null,null,null,[\"1[3-79][1-8]\\\\d{4,6}|[23568][1-8]\\\\d{5,7}|9[1-8]\\\\d{3,7}\",\"4[0-8]\\\\d{5,8}|50\\\\d{4,8}\",\"800\\\\d{5,6}\",\"[67]00\\\\d{5,6}\",null,null,\"10(?:0\\\\d{4,6}|[1-37-9]\\\\d{5,7}|[46]\\\\d{3,7}|5\\\\d{4,7})|2(?:0(?:0\\\\d{4,6}|[1346-8]\\\\d{5,7}|2(?:[023]\\\\d{4,5}|[14-9]\\\\d{4,6})|5(?:\\\\d{3}|\\\\d{5,7})|9(?:[0-7]\\\\d{4,6}|[89]\\\\d{1,6}))|9\\\\d{5,8})|3(?:0(?:0\\\\d{3,7}|[1-57-9]\\\\d{5,7}|6(?:\\\\d{3}|\\\\d{5,7}))|44\\\\d{3}|93\\\\d{5,7})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{5,6})\"]],\"FJ\":[\"679\",\"[2-9]\\\\d{6}|0\\\\d{10}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]]],\"FK\":[\"500\",\"[2-7]\\\\d{4}\"],\"FM\":[\"691\",\"[39]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"FO\":[\"298\",\"[2-9]\\\\d{5}\",[[\"(\\\\d{6})\",\"$1\"]],null,null,\"(10(?:01|[12]0|88))\"],\"FR\":[\"33\",\"[1-9]\\\\d{8}\",[[\"([1-79])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"]],[\"(8\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"]],\"0\",\"0$1\"],\"GA\":[\"241\",\"0?\\\\d{7}\",[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]]]],\"GB\":[\"44\",\"\\\\d{7,10}\",[[\"(7\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"7(?:[1-57-9]|62)\",\"7(?:[1-57-9]|624)\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2|5[56]|7[06]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[02-9]1|1)|3|9[018]\"]],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"]],[\"(1\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"1\"]],[\"(800)(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"]],[\"(845)(46)(4\\\\d)\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"]],[\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8(?:4[2-5]|7[0-3])\"]],[\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"]],[\"(800)(\\\\d{6})\",\"$1 $2\",[\"800\"]]],\"0\",\"0$1\",null,null,null,null,[\"2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{7}|1(?:1(?:3[0-48]|[46][0-4]|5[0-26-9]|[78][0-49])|21[0-7]|31[0-8]|[4-69]1\\\\d)\\\\d{6}|1(?:2(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)|3(?:0\\\\d|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[28][02-57-9]|[37]\\\\d|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|2[024-9]|3[015689]|4[02-9]|5[03-9]|6\\\\d|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0124578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|8\\\\d|9[2-57]))\\\\d{6}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[345])))|3(?:638[2-5]|647[23]|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[123]))|5(?:24(?:3[2-79]|6\\\\d)|276\\\\d|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[567]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|955[0-4])|7(?:26(?:6[13-9]|7[0-7])|442\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|84(?:3[2-58]))|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}|176888[2-46-8]\\\\d{2}|16977[23]\\\\d{3}\",\"7(?:[1-3]\\\\d{3}|4(?:[0-46-9]\\\\d{2}|5(?:[0-689]\\\\d|7[0-57-9]))|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])\\\\d|7(?:0(?:0[01]|[1-9]\\\\d)|[1-7]\\\\d{2}|8[02-9]\\\\d|9[0-689]\\\\d)|8(?:[014-9]\\\\d|[23][0-8])\\\\d|9(?:[024-9]\\\\d{2}|1(?:[02-9]\\\\d|1[028])|3[0-689]\\\\d))\\\\d{5}\",\"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})\",\"(?:87[123]|9(?:[01]\\\\d|8[2349]))\\\\d{7}\",\"70\\\\d{8}\",null,\"(?:3[0347]|55)\\\\d{8}\",\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\"56\\\\d{8}\",\"8(?:4(?:5464\\\\d|[2-5]\\\\d{7})|70\\\\d{7})\"]],\"GD\":[\"1\",\"[4589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"473\"],\"GE\":[\"995\",\"[34578]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5\"]]],\"0\"],\"GF\":[\"594\",\"[56]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]],\"0\",\"0$1\"],\"GG\":[\"44\",\"[135789]\\\\d{6,9}\",[[\"(7\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"7(?:[1-57-9]|62)\",\"7(?:[1-57-9]|624)\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2|5[56]|7[06]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[02-9]1|1)|3|9[018]\"]],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"]],[\"(1\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"1\"]],[\"(800)(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"]],[\"(845)(46)(4\\\\d)\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"]],[\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8(?:4[2-5]|7[0-3])\"]],[\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"]],[\"(800)(\\\\d{6})\",\"$1 $2\",[\"800\"]]],\"0\",null,null,null,null,null,[\"1481[25-9]\\\\d{5}\",\"7(?:781\\\\d|839\\\\d|911[17])\\\\d{5}\",\"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})\",\"(?:87[123]|9(?:[01]\\\\d|8[0-3]))\\\\d{7}\",\"70\\\\d{8}\",null,\"(?:3[0347]|55)\\\\d{8}\",\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\"56\\\\d{8}\",\"8(?:4(?:5464\\\\d|[2-5]\\\\d{7})|70\\\\d{7})\"]],\"GH\":[\"233\",\"[235]\\\\d{8}|8\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],\"0\",\"0$1\"],\"GI\":[\"350\",\"[256]\\\\d{7}\",[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]]],\"GL\":[\"299\",\"[1-689]\\\\d{5}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\"]]],\"GM\":[\"220\",\"[2-9]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"GN\":[\"224\",\"[367]\\\\d{7,8}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]]],\"GP\":[\"590\",\"[56]\\\\d{8}\",[[\"([56]90)(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"[56]90\"]]],\"0\",\"0$1\",null,null,null,null,[\"590(?:0[13468]|1[012]|2[0-68]|3[28]|4[0-8]|5[579]|6[0189]|70|8[0-689]|9\\\\d)\\\\d{4}\",\"690(?:0[05-9]|[1-9]\\\\d)\\\\d{4}\"]],\"GQ\":[\"240\",\"[23589]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]]],\"GR\":[\"30\",\"[26-9]\\\\d{9}\",[[\"([27]\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[2-9]1|[689]\"]],[\"(2\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"2[2-9][02-9]\"]]]],\"GT\":[\"502\",\"[2-7]\\\\d{7}|1[89]\\\\d{9}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"GU\":[\"1\",\"[5689]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"671\"],\"GW\":[\"245\",\"(?:4(?:0\\\\d{5}|4\\\\d{7})|9\\\\d{8})\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"44|9[5-7]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]]]],\"GY\":[\"592\",\"[2-46-9]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"HK\":[\"852\",\"[2-7]\\\\d{7}|8[0-3]\\\\d{6,7}|9\\\\d{4,10}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|[89](?:0[1-9]|[1-9])\"]],[\"(800)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"800\"]],[\"(900)(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"900\"]],[\"(900)(\\\\d{2,5})\",\"$1 $2\",[\"900\"]]]],\"HN\":[\"504\",\"[237-9]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\"]]],\"HR\":[\"385\",\"[1-7]\\\\d{5,8}|[89]\\\\d{6,8}\",[[\"(1)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"([2-5]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-5]\"]],[\"(9\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"]],[\"(6[01])(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"6[01]\"]],[\"([67]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[67]\"]],[\"(80[01])(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"80[01]\"]],[\"(80[01])(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]\"]]],\"0\",\"0$1\"],\"HT\":[\"509\",\"[2-489]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\"]]],\"HU\":[\"36\",\"[1-9]\\\\d{7,8}\",[[\"(1)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"]]],\"06\",\"($1)\"],\"ID\":[\"62\",\"(?:[1-79]\\\\d{6,10}|8\\\\d{7,11})\",[[\"(\\\\d{2})(\\\\d{5,8})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"2[035-9]|[36][02-9]|[4579]\"],\"(0$1)\"],[\"(8\\\\d{2})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"]],[\"(8\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8[1-35-9]\"]],[\"(1)(500)(\\\\d{3})\",\"$1 $2 $3\",[\"150\",\"1500\"],\"$1\"],[\"(177)(\\\\d{6,8})\",\"$1 $2\",[\"177\"]],[\"(800)(\\\\d{5,7})\",\"$1 $2\",[\"800\"]],[\"(804)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"]],[\"(80\\\\d)(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80[79]\"]]],\"0\",\"0$1\"],\"IE\":[\"353\",\"[124-9]\\\\d{6,9}\",[[\"(1)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"40[24]|50[45]\"]],[\"(48)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"48\"]],[\"(818)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"818\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[24-69]|7[14]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"76|8[35-9]\"],\"0$1\"],[\"(8\\\\d)(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8[35-9]5\"],\"0$1\"],[\"(700)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"700\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:5|8[059])\",\"1(?:5|8[059]0)\"],\"$1\"]],\"0\",\"(0$1)\"],\"IL\":[\"972\",\"1\\\\d{6,11}|[2-589]\\\\d{3}(?:\\\\d{3,6})?|6\\\\d{3}|7\\\\d{6,9}\",[[\"([2-489])(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"([57]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(153)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"153\"]],[\"(1)([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(1255)(\\\\d{3})\",\"$1-$2\",[\"125\",\"1255\"]],[\"(1200)(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"120\",\"1200\"]],[\"(1212)(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\",\"1212\"]],[\"(1599)(\\\\d{6})\",\"$1-$2\",[\"159\",\"1599\"]],[\"(151)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"151\"]],[\"(\\\\d{4})\",\"*$1\",[\"[2-689]\"]]],\"0\"],\"IM\":[\"44\",\"[135789]\\\\d{6,9}\",[[\"(7\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"7(?:[1-57-9]|62)\",\"7(?:[1-57-9]|624)\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2|5[56]|7[06]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[02-9]1|1)|3|9[018]\"]],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"]],[\"(1\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"1\"]],[\"(800)(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"]],[\"(845)(46)(4\\\\d)\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"]],[\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8(?:4[2-5]|7[0-3])\"]],[\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"]],[\"(800)(\\\\d{6})\",\"$1 $2\",[\"800\"]]],\"0\",null,null,null,null,null,[\"1624[5-8]\\\\d{5}\",\"7(?:4576|[59]24\\\\d|624[0-4689])\\\\d{5}\",\"808162\\\\d{4}\",\"(?:872299|90[0167]624)\\\\d{4}\",\"70\\\\d{8}\",null,\"3(?:08162\\\\d|3\\\\d{5}|4(?:40[49]06|5624\\\\d)|7(?:0624\\\\d|2299\\\\d))\\\\d{3}|55\\\\d{8}\",null,\"56\\\\d{8}\",\"8(?:4(?:40[49]06|5624\\\\d)|70624\\\\d)\\\\d{3}\"]],\"IN\":[\"91\",\"008\\\\d{9}|1\\\\d{7,12}|[2-9]\\\\d{9,10}\",[[\"(\\\\d{8})\",\"$1\",[\"561\",\"5616\",\"56161\"],\"$1\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"6(?:[09]0|28|3[589])|7(?:[02-8]|19|9[037-9])|8(?:0[015-9]|[1-9])|9\",\"6(?:[09]0|28[0-2]|3(?:5[01]|[89]0))|7(?:[07]|19[0-5]|2(?:[0235-9]|[14][017-9])|3(?:[025-9]|[134][017-9])|4(?:[0-35689]|[47][017-9])|5(?:[02-46-9]|[15][017-9])|6(?:[02-9]|1[0-257-9])|8(?:[0-79]|8[0189])|9(?:[089]|31|7[02-9]))|8(?:0(?:[01589]|6[67]|7[02-9])|1(?:[0-57-9]|6[07-9])|2(?:[014][07-9]|[235-9])|3(?:[03-57-9]|[126][07-9])|[45]|6(?:[02457-9]|[136][07-9])|7(?:[078][07-9]|[1-69])|8(?:[0-25-9]|3[07-9]|4[047-9])|9(?:[02-9]|1[027-9]))|9\",\"6(?:[09]0|28[0-2]|3(?:5(?:0[0-6]|1)|[89]0))|7(?:0|19[0-5]|2(?:[0235-79]|[14][017-9]|8(?:[0-69]|[78][089]))|3(?:[05-8]|1(?:[0189]|7[5-9])|2(?:[0-49][089]|[5-8])|3[017-9]|4(?:[07-9]|11)|9(?:[01689]|[2-5][089]|7[0189]))|4(?:[056]|1(?:[0135-9]|[24][089])|[29](?:[0-7][089]|[89])|3(?:[0-8][089]|9)|[47](?:[089]|11|7[02-8])|8(?:[0-24-7][089]|[389]))|5(?:[0346-9]|[15][017-9]|2(?:[03-9]|[12][089]))|6(?:[0346-9]|1[0-257-9]|2(?:[0-4]|[5-9][089])|5(?:[0-367][089]|[4589]))|7(?:0(?:[02-9]|1[089])|[1-9])|8(?:[0-79]|8(?:0[0189]|11|8[013-9]|9))|9(?:[089]|313|7(?:[02-8]|9[07-9])))|8(?:0(?:[01589]|6[67]|7(?:[02-8]|9[05-9]))|1(?:[02-57-9]|1(?:[0-35-9]|4[0-46-9])|6(?:[089]|7[02-8]))|2(?:0(?:[089]|7[02])|[14](?:[089]|7[02-8])|[235-9])|3(?:[03-57-9]|1(?:[089]|7[02-6])|2(?:[09]|77|8[0-689])|6(?:[089]|7[02-7]))|[45]|6(?:[02457-9]|[136](?:[089]|7[02-8]))|7(?:0[07-9]|[1-69]|[78](?:[089]|7[02-8]))|8(?:[0-25-9]|3(?:[089]|7[02-8])|4(?:[0489]|7[02-68]))|9(?:[02-9]|1(?:[0289]|7[2-6])))|9\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-9]|80[2-46]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[59][14]|[68][1-9]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1|9[15])|6(?:12|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[23579]|[468][1-9])|[2-8]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"008\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],\"$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"160\",\"1600\"],\"$1\"],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],\"$1\"],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"180\",\"1800\"],\"$1\"],[\"(\\\\d{4})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"186\",\"1860\"],\"$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18[06]\"],\"$1\"]],\"0\",\"0$1\",null,null,true],\"IO\":[\"246\",\"3\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"IQ\":[\"964\",\"[1-7]\\\\d{7,9}\",[[\"(1)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"([2-6]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"]],[\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]]],\"0\",\"0$1\"],\"IR\":[\"98\",\"[1-8]\\\\d{5,9}|9(?:[0-4]\\\\d{8}|9\\\\d{8})\",[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"]],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"[1-8]\"]],[\"(\\\\d{4,5})\",\"$1\",[\"96\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"]]],\"0\",\"0$1\"],\"IS\":[\"354\",\"[4-9]\\\\d{6}|38\\\\d{7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(3\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]]],\"IT\":[\"39\",\"[01589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9})\",[[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|55\"]],[\"(0[26])(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(0[26])(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"]],[\"(0\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][2-46-8]\"]],[\"(0\\\\d{3})(\\\\d{2,6})\",\"$1 $2\",[\"0[13-57-9][2-46-8]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13]|8(?:00|4[08]|9[59])\",\"[13]|8(?:00|4[08]|9(?:5[5-9]|9))\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\",\"894[5-9]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"3\"]]],null,null,null,null,null,null,[\"0(?:[26]\\\\d{4,9}|(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2346]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[34578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7})\",\"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\",\"80(?:0\\\\d{6}|3\\\\d{3})\",\"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\",\"1(?:78\\\\d|99)\\\\d{6}\",null,null,null,\"55\\\\d{8}\",\"84(?:[08]\\\\d{6}|[17]\\\\d{3})\"]],\"JE\":[\"44\",\"[135789]\\\\d{6,9}\",[[\"(7\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"7(?:[1-57-9]|62)\",\"7(?:[1-57-9]|624)\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2|5[56]|7[06]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[02-9]1|1)|3|9[018]\"]],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"]],[\"(1\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"1\"]],[\"(800)(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"]],[\"(845)(46)(4\\\\d)\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"]],[\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8(?:4[2-5]|7[0-3])\"]],[\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"]],[\"(800)(\\\\d{6})\",\"$1 $2\",[\"800\"]]],\"0\",null,null,null,null,null,[\"1534[0-24-8]\\\\d{5}\",\"7(?:509\\\\d|7(?:00[378]|97[7-9])|829\\\\d|937\\\\d)\\\\d{5}\",\"80(?:07(?:35|81)|8901)\\\\d{4}\",\"(?:871206|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\",\"701511\\\\d{4}\",null,\"3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))\\\\d{4}|55\\\\d{8}\",\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\"56\\\\d{8}\",\"8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|70002)\\\\d{4}\"]],\"JM\":[\"1\",\"[589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"876\"],\"JO\":[\"962\",\"[235-9]\\\\d{7,8}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(7)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7[457-9]\"]],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"8[0158]|9\"]]],\"0\",\"0$1\"],\"JP\":[\"81\",\"[1-9]\\\\d{8,9}|00(?:[36]\\\\d{7,14}|7\\\\d{5,7}|8\\\\d{7})\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[2579]0|80[1-9]\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))\",\"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])\",\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:[3-6][2-9]|7[2-6]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|4[2-69]|[5-7]))\",\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6[56]))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\",\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6(?:5[25]|60)))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93)\",\"1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93[34])\",\"1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93(?:31|4))\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"2(?:[34]7|[56]9|74|9[14-79])|82|993\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"3|4(?:2[09]|7[01])|6[1-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2479][1-9]\"]]],\"0\",\"0$1\"],\"KE\":[\"254\",\"20\\\\d{6,7}|[4-9]\\\\d{6,9}\",[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"7\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"]]],\"0\",\"0$1\",\"005|0\"],\"KG\":[\"996\",\"[235-8]\\\\d{8,9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]|31[25]\"]],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[36]|[2-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"]]],\"0\",\"0$1\"],\"KH\":[\"855\",\"[1-9]\\\\d{7,9}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\\\\d[1-9]|[2-9]\"],\"0$1\"],[\"(1[89]00)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[89]0\",\"1[89]00\"]]],\"0\"],\"KI\":[\"686\",\"[2458]\\\\d{4}|3\\\\d{4,7}|[67]\\\\d{7}\",[],null,null,\"0\"],\"KM\":[\"269\",\"[3478]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\"]]],\"KN\":[\"1\",\"[589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"869\"],\"KP\":[\"850\",\"1\\\\d{9}|[28]\\\\d{7}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]],\"0\",\"0$1\"],\"KR\":[\"82\",\"00(?:3\\\\d{8,9}|7\\\\d{9,11})|[1-7]\\\\d{4,9}|8\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1(?:5[246-9]|6[046-8]|8[03579])\",\"1(?:5(?:22|44|66|77|88|99)|6(?:[07]0|44|6[16]|88)|8(?:00|33|55|77|99))\"],\"$1\"],[\"(\\\\d{5})\",\"$1\",[\"1[016-9]1\",\"1[016-9]11\",\"1[016-9]114\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2[1-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60[2-9]|80\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"1[0-25-9]|(?:3[1-3]|[46][1-4]|5[1-5])[1-9]\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]0\"]]],\"0\",\"0$1\",\"0(8[1-46-8]|85\\\\d{2})?\"],\"KW\":[\"965\",\"[12569]\\\\d{6,7}\",[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[16]|2(?:[0-35-9]|4[0-35-9])|52[25]|9[024-9]\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"244|5(?:[015]|6[56])\"]]]],\"KY\":[\"1\",\"[3589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"345\"],\"KZ\":[\"7\",\"(?:33\\\\d|7\\\\d{2}|80[089])\\\\d{7}\",[[\"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[3489]\"]],[\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]]],\"8\",null,null,null,null,null,[\"33622\\\\d{5}|7(?:1(?:0(?:[23]\\\\d|4[0-3]|59|63)|1(?:[23]\\\\d|4[0-79]|59)|2(?:[23]\\\\d|59)|3(?:2\\\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\\\d|3[013-9]|5[1-9])|5(?:2\\\\d|3[1-9]|4[0-7]|59)|6(?:[234]\\\\d|5[19]|61)|72\\\\d|8(?:[27]\\\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\\\d|4[46-9]|5[3469])|2(?:2\\\\d|3[0679]|46|5[12679])|3(?:[234]\\\\d|5[139])|4(?:2\\\\d|3[1235-9]|59)|5(?:[23]\\\\d|4[01246-8]|59|61)|6(?:2\\\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\\\d|40|5[279])|8(?:[23]\\\\d|4[0-3]|59)|9(?:2\\\\d|3[124578]|59)))\\\\d{5}\",\"7(?:0[012578]|47|6[02-4]|7[15-8]|85)\\\\d{7}\",\"800\\\\d{7}\",\"809\\\\d{7}\",\"808\\\\d{7}\",null,null,null,\"751\\\\d{7}\"]],\"LA\":[\"856\",\"[2-8]\\\\d{7,9}\",[[\"(20)(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"([2-8]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"]],[\"(30)(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"30\"]]],\"0\",\"0$1\"],\"LB\":[\"961\",\"[13-9]\\\\d{6,7}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\"0$1\"],[\"([7-9]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7(?:[01]|6[013-9]|8[89]|9[1-3])|[89][01]\"]]],\"0\"],\"LC\":[\"1\",\"[5789]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"758\"],\"LI\":[\"423\",\"6\\\\d{8}|[23789]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[237-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[56]\"]],[\"(69)(7\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"697\"]]],\"0\",null,\"0|10(?:01|20|66)\"],\"LK\":[\"94\",\"[1-9]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]]],\"0\",\"0$1\"],\"LR\":[\"231\",\"2\\\\d{7,8}|[378]\\\\d{8}|4\\\\d{6}|5\\\\d{6,8}\",[[\"(2\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]],[\"([4-5])(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[45]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23578]\"]]],\"0\",\"0$1\"],\"LS\":[\"266\",\"[2568]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\"]]],\"LT\":[\"370\",\"[3-9]\\\\d{7}\",[[\"([34]\\\\d)(\\\\d{6})\",\"$1 $2\",[\"37|4(?:1|5[45]|6[2-4])\"]],[\"([3-6]\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"3[148]|4(?:[24]|6[09])|528|6\"]],[\"([7-9]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"8 $1\"],[\"(5)(2\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-79]\"]]],\"8\",\"(8-$1)\",\"[08]\",null,true],\"LU\":[\"352\",\"[24-9]\\\\d{3,10}|3(?:[0-46-9]\\\\d{2,9}|5[013-9]\\\\d{1,8})\",[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-5]|7[1-9]|[89](?:0[2-9]|[1-9])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-5]|7[1-9]|[89](?:0[2-9]|[1-9])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,4})\",\"$1 $2 $3 $4\",[\"2(?:[12589]|4[12])|[3-5]|7[1-9]|8(?:0[2-9]|[1-9])|9(?:0[2-46-9]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"70|80[01]|90[015]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],null,null,\"(15(?:0[06]|1[12]|35|4[04]|55|6[26]|77|88|99)\\\\d)\"],\"LV\":[\"371\",\"[2689]\\\\d{7}\",[[\"([2689]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2689]\"]]]],\"LY\":[\"218\",\"[25679]\\\\d{8}\",[[\"([25-79]\\\\d)(\\\\d{7})\",\"$1-$2\",[\"[25-79]\"]]],\"0\",\"0$1\"],\"MA\":[\"212\",\"[5-9]\\\\d{8}\",[[\"([5-7]\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"5(?:2[015-7]|3[0-4])|[67]\"]],[\"([58]\\\\d{3})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-489]|3[5-9]|92)|892\",\"5(?:2(?:[2-48]|9[0-7])|3(?:[5-79]|8[0-7])|924)|892\"]],[\"(5\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"5(?:29|38)\",\"5(?:29|38)[89]\"]],[\"([5]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:4[067]|5[03])\"]],[\"(8[09])(\\\\d{7})\",\"$1-$2\",[\"8(?:0|9[013-9])\"]]],\"0\",\"0$1\",null,null,null,null,[\"5(?:2(?:[015-79]\\\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])\\\\d|3(?:[0-48]\\\\d|[57][2-9]|6[2-8]|9[3-9])\\\\d|4[067]\\\\d{2}|5[03]\\\\d{2})\\\\d{4}\",\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[07]))\\\\d{6}\",\"80\\\\d{7}\",\"89\\\\d{7}\",null,null,null,null,\"5924[01]\\\\d{4}\"]],\"MC\":[\"377\",\"[34689]\\\\d{7,8}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[39]\"],\"$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"]],[\"(6)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"8\"],\"$1\"]],\"0\",\"0$1\"],\"MD\":[\"373\",\"[235-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"]],[\"([25-7]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13-9]|[5-7]\"]],[\"([89]\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[89]\"]]],\"0\",\"0$1\"],\"ME\":[\"382\",\"[2-9]\\\\d{7,8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]|6[036-9]\"]]],\"0\",\"0$1\"],\"MF\":[\"590\",\"[56]\\\\d{8}\",[[\"([56]90)(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"[56]90\"]]],\"0\",null,null,null,null,null,[\"590(?:[02][79]|13|5[0-268]|[78]7)\\\\d{4}\",\"690(?:0[05-9]|[1-9]\\\\d)\\\\d{4}\"]],\"MG\":[\"261\",\"[23]\\\\d{8}\",[[\"([23]\\\\d)(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"]]],\"0\",\"0$1\"],\"MH\":[\"692\",\"[2-6]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\"]],\"1\"],\"MK\":[\"389\",\"[2-578]\\\\d{7}\",[[\"(2)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"]],[\"([347]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"]],[\"([58]\\\\d{2})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"]]],\"0\",\"0$1\"],\"ML\":[\"223\",\"[246-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[246-9]\"]]]],\"MM\":[\"95\",\"[178]\\\\d{5,7}|[24-6]\\\\d{5,8}|9(?:[279]\\\\d{0,2}|5|[34]\\\\d{1,2}|6(?:\\\\d{1,2})?|8(?:\\\\d{2})?)\\\\d{6}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1|2[245]\"]],[\"(2)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"251\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"432|67|81\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-8]\"]],[\"(9)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"]],[\"(9)([34]\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9(?:3[0-36]|4[0-57-9])\"]],[\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92[56]\"]],[\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"93\"]]],\"0\",\"0$1\"],\"MN\":[\"976\",\"[12]\\\\d{7,9}|[57-9]\\\\d{7}\",[[\"([12]\\\\d)(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"]],[\"([12]2\\\\d)(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"]],[\"([12]\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[12](?:27|[3-5])\",\"[12](?:27|[3-5]\\\\d)2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"],\"$1\"],[\"([12]\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"[12](?:27|[3-5])\",\"[12](?:27|[3-5]\\\\d)[4-9]\"]]],\"0\",\"0$1\"],\"MO\":[\"853\",\"[268]\\\\d{7}\",[[\"([268]\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]]],\"MP\":[\"1\",\"[5689]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"670\"],\"MQ\":[\"596\",\"[56]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]],\"0\",\"0$1\"],\"MR\":[\"222\",\"[2-48]\\\\d{7}\",[[\"([2-48]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]]],\"MS\":[\"1\",\"[5689]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"664\"],\"MT\":[\"356\",\"[2357-9]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\"]]],\"MU\":[\"230\",\"[2-9]\\\\d{6,7}\",[[\"([2-46-9]\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"[2-46-9]\"]],[\"(5\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"5\"]]]],\"MV\":[\"960\",\"[346-8]\\\\d{6,9}|9(?:00\\\\d{7}|\\\\d{6})\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[3467]|9(?:0[1-9]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]00\"]]]],\"MW\":[\"265\",\"(?:1(?:\\\\d{2})?|[2789]\\\\d{2})\\\\d{6}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[17-9]\"]]],\"0\",\"0$1\"],\"MX\":[\"52\",\"[1-9]\\\\d{9,10}\",[[\"([358]\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|55|81\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]\"]],[\"(1)([358]\\\\d)(\\\\d{4})(\\\\d{4})\",\"044 $2 $3 $4\",[\"1(?:33|55|81)\"],\"$1\",null,\"$1 $2 $3 $4\"],[\"(1)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"044 $2 $3 $4\",[\"1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])\"],\"$1\",null,\"$1 $2 $3 $4\"]],\"01\",\"01 $1\",\"0[12]|04[45](\\\\d{10})\",\"1$1\",true],\"MY\":[\"60\",\"[13-9]\\\\d{7,9}\",[[\"([4-79])(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(3)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"([18]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1[02-46-9][1-9]|8\"],\"0$1\"],[\"(1)([36-8]00)(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1[36-8]0\",\"1[36-8]00\"]],[\"(11)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"11\"],\"0$1\"],[\"(15[49])(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15[49]\"],\"0$1\"]],\"0\"],\"MZ\":[\"258\",\"[28]\\\\d{7,8}\",[[\"([28]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-7]\"]],[\"(80\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"80\"]]]],\"NA\":[\"264\",\"[68]\\\\d{7,8}\",[[\"(8\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8[1-35]\"]],[\"(6\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"]],[\"(88)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"]],[\"(870)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"870\"]]],\"0\",\"0$1\"],\"NC\":[\"687\",\"[2-57-9]\\\\d{5}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[2-46-9]|5[0-4]\"]]]],\"NE\":[\"227\",\"[0289]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"09|[289]\"]],[\"(08)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]]]],\"NF\":[\"672\",\"[13]\\\\d{5}\",[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"3\"]]]],\"NG\":[\"234\",\"[1-6]\\\\d{5,8}|9\\\\d{5,9}|[78]\\\\d{5,13}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|9(?:0[3-9]|[1-9])\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-6]|7(?:0[1-9]|[1-79])|8[2-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"70|8[01]|90[235-9]\"]],[\"([78]00)(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]00\"]],[\"([78]00)(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]00\"]],[\"(78)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"78\"]]],\"0\",\"0$1\"],\"NI\":[\"505\",\"[125-8]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\"]]],\"NL\":[\"31\",\"1\\\\d{4,8}|[2-7]\\\\d{8}|[89]\\\\d{6,9}\",[[\"([1-578]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1[035]|2[0346]|3[03568]|4[0356]|5[0358]|7|8[4578]\"]],[\"([1-5]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"]],[\"(6)(\\\\d{8})\",\"$1 $2\",[\"6[0-57-9]\"]],[\"(66)(\\\\d{7})\",\"$1 $2\",[\"66\"]],[\"(14)(\\\\d{3,4})\",\"$1 $2\",[\"14\"],\"$1\"],[\"([89]0\\\\d)(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"]]],\"0\",\"0$1\"],\"NO\":[\"47\",\"0\\\\d{4}|[2-9]\\\\d{7}\",[[\"([489]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[489]\"]],[\"([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-7]\"]]],null,null,null,null,null,null,[\"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\\\d{6}\",\"(?:4[015-8]|5[89]|87|9\\\\d)\\\\d{6}\",\"80[01]\\\\d{5}\",\"82[09]\\\\d{5}\",\"880\\\\d{5}\",null,\"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\",null,\"85[0-5]\\\\d{5}\",\"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\"]],\"NP\":[\"977\",\"[1-8]\\\\d{7}|9(?:[1-69]\\\\d{6,8}|7[2-6]\\\\d{5,7}|8\\\\d{8})\",[[\"(1)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-69]|7[15-9])\"]],[\"(9\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"9(?:6[013]|7[245]|8)\"],\"$1\"]],\"0\",\"0$1\"],\"NR\":[\"674\",\"[458]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"NU\":[\"683\",\"[1-5]\\\\d{3}\"],\"NZ\":[\"64\",\"6[235-9]\\\\d{6}|[2-57-9]\\\\d{7,9}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"240|[346]|7[2-57-9]|9[1-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:1[1-9]|[69]|7[0-35-9])|70|86\"]],[\"(2\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[028]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"90\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|5|[89]0\"]]],\"0\",\"0$1\"],\"OM\":[\"968\",\"(?:5|[279]\\\\d)\\\\d{6}|800\\\\d{5,6}\",[[\"(2\\\\d)(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"([79]\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[79]\"]],[\"([58]00)(\\\\d{4,6})\",\"$1 $2\",[\"[58]00\"]]]],\"PA\":[\"507\",\"[1-9]\\\\d{6,7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"6\"]]]],\"PE\":[\"51\",\"[14-9]\\\\d{7,8}\",[[\"(1)(\\\\d{7})\",\"$1 $2\",[\"1\"]],[\"([4-8]\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[4-7]|8[2-4]\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"]],[\"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"$1\"]],\"0\",\"(0$1)\"],\"PF\":[\"689\",\"4\\\\d{5,7}|8\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4[09]|8[79]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]]]],\"PG\":[\"675\",\"[1-9]\\\\d{6,7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[13-689]|27\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"20|7\"]]]],\"PH\":[\"63\",\"1\\\\d{10,12}|2\\\\d{5,7}|[3-7]\\\\d{8}|8\\\\d{7,9}|9\\\\d{9}\",[[\"(2)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(2)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|5(?:22|44)|642|8(?:62|8[245])\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"([3-8]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"81|9\"],\"0$1\"],[\"(1800)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"180\",\"1800\"]],[\"(1800)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"180\",\"1800\"]]],\"0\"],\"PK\":[\"92\",\"1\\\\d{8}|[2-8]\\\\d{5,11}|9(?:[013-9]\\\\d{4,10}|2\\\\d(?:111\\\\d{6}|\\\\d{3,7}))\",[[\"([89]00)(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"[89]00\"],\"0$1\"],[\"(1\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"1\"],\"$1\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2[349]|45|54|60|72|8[2-5]|9[2-469]\",\"(?:2[349]|45|54|60|72|8[2-5]|9[2-469])\\\\d[2-9]\"]],[\"(58\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"58[126]\"]],[\"(3\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(111)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)1\",\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)11\",\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)111\"]],[\"(\\\\d{3})(111)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[349]|45|54|60|72|8[2-5]|9[2-9]\",\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d1\",\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d11\",\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d111\"]]],\"0\",\"(0$1)\"],\"PL\":[\"48\",\"[1-57-9]\\\\d{6,8}|6\\\\d{5,8}\",[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11[68]|64\"]],[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"26|39|45|5[0137]|6[0469]|7[02389]|8[08]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[14]|2[0-57-9]|3[2-4]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]\"]]]],\"PM\":[\"508\",\"[45]\\\\d{5}\",[[\"([45]\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"]]],\"0\",\"0$1\"],\"PR\":[\"1\",\"[5789]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"787|939\"],\"PS\":[\"970\",\"1\\\\d{9}|[24589]\\\\d{7,8}\",[[\"([2489])(2\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]2\"]],[\"(5[69]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5[69]\"]],[\"(1[78]00)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[78]0\",\"1[78]00\"],\"$1\"]],\"0\",\"0$1\"],\"PT\":[\"351\",\"[2-46-9]\\\\d{8}\",[[\"(2\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"([2-46-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[3-9]|[346-9]\"]]]],\"PW\":[\"680\",\"[2-8]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"PY\":[\"595\",\"5[0-5]\\\\d{4,7}|[2-46-9]\\\\d{5,8}\",[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9[1-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"870\",\"8700\"]],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"[2-8][1-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8][1-9]\"],\"0$1\"]],\"0\"],\"QA\":[\"974\",\"[2-8]\\\\d{6,7}\",[[\"([28]\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"[28]\"]],[\"([3-7]\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3-7]\"]]]],\"RE\":[\"262\",\"[268]\\\\d{8}\",[[\"([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[268]\"]]],\"0\",\"0$1\",null,null,null,\"262|69|8\"],\"RO\":[\"40\",\"[23]\\\\d{5,8}|[7-9]\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"[23]1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[23][3-7]|[7-9]\"]],[\"(2\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\"]]],\"0\",\"0$1\"],\"RS\":[\"381\",\"[126-9]\\\\d{4,11}|3(?:[0-79]\\\\d{3,10}|8[2-9]\\\\d{2,9})\",[[\"([23]\\\\d{2})(\\\\d{4,9})\",\"$1 $2\",[\"(?:2[389]|39)0\"]],[\"([1-3]\\\\d)(\\\\d{5,10})\",\"$1 $2\",[\"1|2(?:[0-24-7]|[389][1-9])|3(?:[0-8]|9[1-9])\"]],[\"(6\\\\d)(\\\\d{6,8})\",\"$1 $2\",[\"6\"]],[\"([89]\\\\d{2})(\\\\d{3,9})\",\"$1 $2\",[\"[89]\"]],[\"(7[26])(\\\\d{4,9})\",\"$1 $2\",[\"7[26]\"]],[\"(7[08]\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"7[08]\"]]],\"0\",\"0$1\"],\"RU\":[\"7\",\"[347-9]\\\\d{9}\",[[\"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[3489]\"]],[\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]]],\"8\",\"8 ($1)\",null,null,true,null,[\"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\\\d{7}\",\"9\\\\d{9}\",\"80[04]\\\\d{7}\",\"80[39]\\\\d{7}\",\"808\\\\d{7}\"]],\"RW\":[\"250\",\"[027-9]\\\\d{7,8}\",[[\"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]],[\"([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(0\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]]],\"0\"],\"SA\":[\"966\",\"1\\\\d{7,8}|(?:[2-467]|92)\\\\d{7}|5\\\\d{8}|8\\\\d{9}\",[[\"([1-467])(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-467]\"]],[\"(1\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1[1-467]\"]],[\"(5\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"]],[\"(92\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"92\"],\"$1\"],[\"(800)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"800\"],\"$1\"],[\"(811)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"811\"]]],\"0\",\"0$1\"],\"SB\":[\"677\",\"[1-9]\\\\d{4,6}\",[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[7-9]\"]]]],\"SC\":[\"248\",\"[24689]\\\\d{5,6}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]\"]]]],\"SD\":[\"249\",\"[19]\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\"]],\"0\",\"0$1\"],\"SE\":[\"46\",\"[1-35-9]\\\\d{5,11}|4\\\\d{6,8}\",[[\"(8)(\\\\d{2,3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],null,null,\"$1 $2 $3 $4\"],[\"([1-69]\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90\"],null,null,\"$1 $2 $3 $4\"],[\"([1-469]\\\\d)(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90\"],null,null,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"],null,null,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"],null,null,\"$1 $2 $3\"],[\"(7\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"7\"],null,null,\"$1 $2 $3 $4\"],[\"(77)(\\\\d{2})(\\\\d{2})\",\"$1-$2$3\",[\"77\"],null,null,\"$1 $2 $3\"],[\"(20)(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],null,null,\"$1 $2 $3\"],[\"(9[034]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9[034]\"],null,null,\"$1 $2 $3 $4\"],[\"(9[034]\\\\d)(\\\\d{4})\",\"$1-$2\",[\"9[034]\"],null,null,\"$1 $2\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"25[245]|67[3-6]\"],null,null,\"$1 $2 $3 $4 $5\"]],\"0\",\"0$1\"],\"SG\":[\"65\",\"[36]\\\\d{7}|[17-9]\\\\d{7,10}\",[[\"([3689]\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|8[1-9]\"]],[\"(1[89]00)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1[89]0\",\"1[89]00\"]],[\"(7000)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"700\",\"7000\"]],[\"(800)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"800\"]]]],\"SH\":[\"290\",\"[256]\\\\d{4}|8\\\\d{3}\",[],null,null,null,null,null,null,[\"2(?:[0-57-9]\\\\d|6[4-9])\\\\d{2}\",\"[56]\\\\d{4}\",null,null,null,null,null,null,\"262\\\\d{2}\"]],\"SI\":[\"386\",\"[1-7]\\\\d{6,7}|[89]\\\\d{4,7}\",[[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[12]|[34][24-8]|5[2-8]|7[3-8]\"],\"(0$1)\"],[\"([3-7]\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"]],[\"([89][09])(\\\\d{3,6})\",\"$1 $2\",[\"[89][09]\"]],[\"([58]\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"59|8[1-3]\"]]],\"0\",\"0$1\"],\"SJ\":[\"47\",\"0\\\\d{4}|[45789]\\\\d{7}\",[[\"([489]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[489]\"]],[\"([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-7]\"]]],null,null,null,null,null,null,[\"79\\\\d{6}\",\"(?:4[015-8]|5[89]|9\\\\d)\\\\d{6}\",\"80[01]\\\\d{5}\",\"82[09]\\\\d{5}\",\"880\\\\d{5}\",null,\"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\",null,\"85[0-5]\\\\d{5}\",\"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\"]],\"SK\":[\"421\",\"(?:[2-68]\\\\d{5,8}|9\\\\d{6,8})\",[[\"(2)(1[67])(\\\\d{3,4})\",\"$1 $2 $3\",[\"21[67]\"]],[\"([3-5]\\\\d)(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5]\"]],[\"(2)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"]],[\"([3-5]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"]],[\"([689]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"]],[\"(9090)(\\\\d{3})\",\"$1 $2\",[\"909\",\"9090\"]]],\"0\",\"0$1\"],\"SL\":[\"232\",\"[2-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\"]],\"0\",\"(0$1)\"],\"SM\":[\"378\",\"[05-7]\\\\d{7,9}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(0549)(\\\\d{6})\",\"$1 $2\",[\"054\",\"0549\"],null,null,\"($1) $2\"],[\"(\\\\d{6})\",\"0549 $1\",[\"[89]\"],null,null,\"(0549) $1\"]],null,null,\"([89]\\\\d{5})\",\"0549$1\"],\"SN\":[\"221\",\"[3789]\\\\d{8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"SO\":[\"252\",\"[1-9]\\\\d{5,8}\",[[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[13-5]|2[0-79]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"24|[67]\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"15|28|6[1-35-9]|799|9[2-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3[59]|4[89]|6[24-6]|79|8[08]|90\"]]],\"0\"],\"SR\":[\"597\",\"[2-8]\\\\d{5,6}\",[[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|5[2-58]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-8]\"]]]],\"SS\":[\"211\",\"[19]\\\\d{8}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",null,\"0$1\"]],\"0\"],\"ST\":[\"239\",\"[29]\\\\d{6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\"]]],\"SV\":[\"503\",\"[267]\\\\d{7}|[89]\\\\d{6}(?:\\\\d{4})?\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]]],\"SX\":[\"1\",\"[5789]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"721\"],\"SY\":[\"963\",\"[1-59]\\\\d{7,8}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"]],[\"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",\"0$1\",null,null,true],\"SZ\":[\"268\",\"[027]\\\\d{7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[027]\"]]]],\"TA\":[\"290\",\"8\\\\d{3}\",[],null,null,null,null,null,null,[\"8\\\\d{3}\"]],\"TC\":[\"1\",\"[5689]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"649\"],\"TD\":[\"235\",\"[2679]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\"]]],\"TG\":[\"228\",\"[29]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[29]\"]]]],\"TH\":[\"66\",\"1\\\\d{8,9}|[2-9]\\\\d{7,8}\",[[\"(2)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"]],[\"([13-9]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"14|[3-9]\"]],[\"(1[89]00)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[89]0\",\"1[89]00\"],\"$1\"]],\"0\",\"0$1\"],\"TJ\":[\"992\",\"[3-57-9]\\\\d{8}\",[[\"([349]\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[34]7|91[78]\"]],[\"([457-9]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[148]|[578]|9(?:[0235-9]|1[59])\"]],[\"(331700)(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\",\"33170\",\"331700\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3[1-5]\",\"3(?:[1245]|3(?:[02-9]|1[0-589]))\"]]],\"8\",null,null,null,true],\"TK\":[\"690\",\"[2-47]\\\\d{3,6}\"],\"TL\":[\"670\",\"[2-489]\\\\d{6}|7\\\\d{6,7}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7[3-8]\"]]]],\"TM\":[\"993\",\"[1-6]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"6\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"13|[2-5]\"]]],\"8\",\"(8 $1)\"],\"TN\":[\"216\",\"[2-57-9]\\\\d{7}\",[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\"]]],\"TO\":[\"676\",\"[02-8]\\\\d{4,6}\",[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[1-6]|7[0-4]|8[05]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"7[5-9]|8[47-9]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]]]],\"TR\":[\"90\",\"[2-589]\\\\d{9}|444\\\\d{4}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]|4(?:[0-35-9]|4[0-35-9])\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[02-69]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"51|[89]\"],\"0$1\"],[\"(444)(\\\\d{1})(\\\\d{3})\",\"$1 $2 $3\",[\"444\"]]],\"0\",null,null,null,true],\"TT\":[\"1\",\"[589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"868\"],\"TV\":[\"688\",\"[279]\\\\d{4,6}\"],\"TW\":[\"886\",\"2\\\\d{6,8}|[3-689]\\\\d{7,8}|7\\\\d{7,9}\",[[\"(20)(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"]],[\"([258]0)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"20[013-9]|50[0-46-9]|80[0-79]\"]],[\"([2-8])(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25][2-8]|[346]|[78][1-9]\"]],[\"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]],[\"(70)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"70\"]]],\"0\",\"0$1\"],\"TZ\":[\"255\",\"\\\\d{9}\",[[\"([24]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"]],[\"([67]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"]],[\"([89]\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],\"0\",\"0$1\"],\"UA\":[\"380\",\"[3-9]\\\\d{8}\",[[\"([3-9]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[38]9|4(?:[45][0-5]|87)|5(?:0|[67][37])|6[36-8]|7|9[1-9]\",\"[38]9|4(?:[45][0-5]|87)|5(?:0|6(?:3[14-7]|7)|7[37])|6[36-8]|7|9[1-9]\"]],[\"([3-689]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:3[1-8]|4[136-8])2|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|8[0-8]|90\",\"3(?:[1-46-8]2[013-9]|52)|4(?:[1378]2|62[013-9])|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|8[0-8]|90\"]],[\"([3-6]\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"3(?:[1-46-8]|5[013-9])|4(?:[137][013-9]|[45][6-9]|6|8[4-6])|5(?:[1245][013-9]|3|6[0135689]|7[4-6])|6(?:[12][13-8]|[49][013-9]|5[0135-9])\",\"3(?:[1-46-8](?:[013-9]|22)|5[013-9])|4(?:[137][013-9]|[45][6-9]|6(?:[013-9]|22)|8[4-6])|5(?:[1245][013-9]|3|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][13-8]|[49][013-9]|5[0135-9])\"]]],\"0\",\"0$1\"],\"UG\":[\"256\",\"\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"20[0-8]|4(?:6[45]|[7-9])|[7-9]\",\"20(?:[013-8]|2[5-9])|4(?:6[45]|[7-9])|[7-9]\"]],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"3|4(?:[1-5]|6[0-36-9])\"]],[\"(2024)(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"]]],\"0\",\"0$1\"],\"US\":[\"1\",\"[2-9]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,true,null,[\"(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[026]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[012])|7(?:0[1-46-8]|1[02-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|28|3[0-258]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[014678]|4[0179]|5[12469]|7[0-3589]|8[04-69]))[2-9]\\\\d{6}\",null,\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",\"900[2-9]\\\\d{6}\",\"5(?:00|22|33|44|66|77|88)[2-9]\\\\d{6}\"]],\"UY\":[\"598\",\"[2489]\\\\d{6,7}\",[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[24]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]0\"],\"0$1\"]],\"0\"],\"UZ\":[\"998\",\"[679]\\\\d{8}\",[[\"([679]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[679]\"]]],\"8\",\"8 $1\"],\"VA\":[\"39\",\"(?:0(?:878\\\\d{5}|6698\\\\d{5})|[1589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9}))\",[[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|55\"]],[\"(0[26])(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(0[26])(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"]],[\"(0\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][2-46-8]\"]],[\"(0\\\\d{3})(\\\\d{2,6})\",\"$1 $2\",[\"0[13-57-9][2-46-8]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13]|8(?:00|4[08]|9[59])\",\"[13]|8(?:00|4[08]|9(?:5[5-9]|9))\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\",\"894[5-9]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"3\"]]],null,null,null,null,null,null,[\"06698\\\\d{5}\",\"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\",\"80(?:0\\\\d{6}|3\\\\d{3})\",\"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\",\"1(?:78\\\\d|99)\\\\d{6}\",null,null,null,\"55\\\\d{8}\",\"84(?:[08]\\\\d{6}|[17]\\\\d{3})\"]],\"VC\":[\"1\",\"[5789]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"784\"],\"VE\":[\"58\",\"[24589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\"]],\"0\",\"0$1\"],\"VG\":[\"1\",\"[2589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"284\"],\"VI\":[\"1\",\"[3589]\\\\d{9}\",[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",null,null,null,\"$1-$2-$3\"]],\"1\",null,null,null,null,\"340\"],\"VN\":[\"84\",\"1\\\\d{6,9}|2\\\\d{9}|6\\\\d{6,7}|7\\\\d{6}|8\\\\d{6,8}|9\\\\d{8}\",[[\"([17]99)(\\\\d{4})\",\"$1 $2\",[\"[17]99\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"]],[\"(80)(\\\\d{5})\",\"$1 $2\",[\"80\"]],[\"(69\\\\d)(\\\\d{4,5})\",\"$1 $2\",[\"69\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2[0-35-79]\"]],[\"([89]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8(?:8|9[89])|9\"]],[\"(1[2689]\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:[26]|8[68]|99)\"]],[\"(86[89])(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"86[89]\"]],[\"(1[89]00)(\\\\d{4,6})\",\"$1 $2\",[\"1[89]0\",\"1[89]00\"],\"$1\"]],\"0\",\"0$1\",null,null,true],\"VU\":[\"678\",\"[2-57-9]\\\\d{4,6}\",[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[579]\"]]]],\"WF\":[\"681\",\"[4-8]\\\\d{5}\",[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\"]]],\"WS\":[\"685\",\"[2-8]\\\\d{4,6}\",[[\"(8\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8\"]],[\"(7\\\\d)(\\\\d{5})\",\"$1 $2\",[\"7\"]],[\"(\\\\d{5})\",\"$1\",[\"[2-6]\"]]]],\"YE\":[\"967\",\"[1-7]\\\\d{6,8}\",[[\"([1-7])(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7[24-68]\"]],[\"(7\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7[0137]\"]]],\"0\",\"0$1\"],\"YT\":[\"262\",\"[268]\\\\d{8}\",[[\"([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[268]\"]]],\"0\",null,null,null,null,\"269|63\"],\"ZA\":[\"27\",\"[1-79]\\\\d{8}|8\\\\d{4,8}\",[[\"(860)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"]],[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-79]|8(?:[0-57]|6[1-9])\"]]],\"0\",\"0$1\"],\"ZM\":[\"260\",\"[289]\\\\d{8}\",[[\"([29]\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[29]\"]],[\"(800)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"800\"]]],\"0\",\"0$1\"],\"ZW\":[\"263\",\"2(?:[0-57-9]\\\\d{3,8}|6(?:[14]\\\\d{7}|\\\\d{4}))|[13-79]\\\\d{4,9}|8[06]\\\\d{5,8}\",[[\"([49])(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"4|9[2-9]\"]],[\"(7\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"7\"]],[\"(86\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"86[24]\"]],[\"([2356]\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8|[78])|3(?:[09]8|17|3[78]|7[1569]|8[37])|5[15][78]|6(?:[29]8|37|[68][78]|75)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|31|[56][14]|7[35]|84)|329\"]],[\"([1-356]\\\\d)(\\\\d{3,5})\",\"$1 $2\",[\"1[3-9]|2[02569]|3[0-69]|5[05689]|6\"]],[\"([235]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[23]9|54\"]],[\"([25]\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258[23]|5483\"]],[\"(8\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"86\"]],[\"(80\\\\d)(\\\\d{4})\",\"$1 $2\",[\"80\"]]],\"0\",\"0$1\"],\"001\":[\"979\",\"\\\\d{9}\",[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\"]]]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/libphonenumber-js/metadata.min.json\n// module id = P+if\n// module chunks = 3","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/babel-runtime/helpers/extends.js\n// module id = PX83\n// module chunks = 3","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_iter-create.js\n// module id = R5Ik\n// module chunks = 3","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_dom-create.js\n// module id = Seod\n// module chunks = 3","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/babel-runtime/core-js/get-iterator.js\n// module id = Whvj\n// module chunks = 3","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_is-object.js\n// module id = YmCC\n// module chunks = 3","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/es6.string.iterator.js\n// module id = aZbe\n// module chunks = 3","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_property-desc.js\n// module id = ah4l\n// module chunks = 3","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_shared-key.js\n// module id = bLqF\n// module chunks = 3","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/es6.array.iterator.js\n// module id = bhqc\n// module chunks = 3","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_object-keys.js\n// module id = c/Zl\n// module chunks = 3","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_ie8-dom-define.js\n// module id = cbU4\n// module chunks = 3","module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_add-to-unscopables.js\n// module id = cq/B\n// module chunks = 3","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/fn/get-iterator.js\n// module id = crD7\n// module chunks = 3","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/es6.object.define-property.js\n// module id = dFZ2\n// module chunks = 3","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_to-absolute-index.js\n// module id = eUy6\n// module chunks = 3","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = (!BUGGY && $native) || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_iter-define.js\n// module id = evc+\n// module chunks = 3","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_object-gpo.js\n// module id = fH9s\n// module chunks = 3","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_set-to-string-tag.js\n// module id = fOHk\n// module chunks = 3","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_iterators.js\n// module id = hE2q\n// module chunks = 3","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_to-length.js\n// module id = is71\n// module chunks = 3","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_export.js\n// module id = ixiQ\n// module chunks = 3","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_global.js\n// module id = jS1/\n// module chunks = 3","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/babel-runtime/helpers/createClass.js\n// module id = jUaE\n// module chunks = 3","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/web.dom.iterable.js\n// module id = k91R\n// module chunks = 3","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_cof.js\n// module id = nKkP\n// module chunks = 3","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_fails.js\n// module id = nqvh\n// module chunks = 3","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_object-pie.js\n// module id = p7u9\n// module chunks = 3","var core = module.exports = { version: '2.5.3' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_core.js\n// module id = pj25\n// module chunks = 3","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_to-object.js\n// module id = pk59\n// module chunks = 3","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_a-function.js\n// module id = q4+4\n// module chunks = 3","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_string-at.js\n// module id = qclR\n// module chunks = 3","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_to-primitive.js\n// module id = qcsc\n// module chunks = 3","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/es6.object.assign.js\n// module id = s4JA\n// module chunks = 3","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/babel-runtime/core-js/object/assign.js\n// module id = saYs\n// module chunks = 3","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_defined.js\n// module id = sovd\n// module chunks = 3","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_descriptors.js\n// module id = tZKi\n// module chunks = 3","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_object-keys-internal.js\n// module id = ugL+\n// module chunks = 3","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/core.get-iterator-method.js\n// module id = wriK\n// module chunks = 3","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/core.get-iterator.js\n// module id = xgGO\n// module chunks = 3","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_uid.js\n// module id = yH18\n// module chunks = 3","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/tg/github/freeng/node_modules/core-js/library/modules/_iter-step.js\n// module id = zSHY\n// module chunks = 3"],"sourceRoot":"webpack:///"}